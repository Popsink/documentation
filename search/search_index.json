{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Popsink Documentation","text":"<p>Move, model and use your data in real time.</p> <p>Automatically capture, transform, and deliver your data at sub-second speeds to the products, systems, and people that depend on it. Overcome the costs &amp; limitations of conventional ELT tools and set a new standard for your operations and analytics.</p>"},{"location":"alerting/","title":"Popsink Alerting with Source and Target Connectors","text":"<p>Popsink provides native observability through a custom Source Connector that streams the runtime activity of other Popsink connectors. This allows you to monitor connector health, failures, retries, and throughput in real time.</p> <p>Using Popsink pipelines, you can apply alerting rules to this activity stream and route critical events to external systems via Target Connectors (Slack, Database, Webhooks, etc.).</p> <p>This creates a fully integrated alerting pipeline without requiring third-party monitoring systems.</p>"},{"location":"alerting/#architecture","title":"Architecture","text":"<ol> <li> <p>Popsink Source Connector (Internal Activity Source)</p> <ul> <li>Captures events about Popsink connector activity:<ul> <li>Connector lifecycle events (started, stopped, failed)</li> <li>Task health (heartbeat, lag, retries, errors)</li> </ul> </li> <li>Exposes them as a continuous event stream.</li> </ul> </li> <li> <p>Target Connectors</p> <ul> <li>Forward alert events to external systems.</li> </ul> </li> </ol>"},{"location":"alerting/#use-cases","title":"Use Cases","text":"<ul> <li>Detect if a connector crashes or stops unexpectedly.</li> <li>Trigger alerts when error rates exceed thresholds.</li> </ul>"},{"location":"deployment/","title":"Popsink Deployment Options","text":"<p>Popsink supports multiple deployment models so that you can run the same core engine, with the same features and performance, in the mode that fits your organization\u2019s requirements. The primary deployment models are:</p> <ol> <li>SaaS (fully managed)</li> <li>Bring Your Own Cloud (BYOC)</li> <li>On-Premises (on-prem)</li> <li>Air-Gapped / Isolated</li> </ol>"},{"location":"deployment/#overview","title":"Overview","text":"<p>Popsink\u2019s deployment architecture is designed to adapt to different security postures, regulatory constraints, and operational preferences. Regardless of the model chosen, you benefit from the same core capabilities (e.g. data ingestion, replication, pipeline processing, observability). The choice of deployment impacts responsibilities for infrastructure, upgrades, connectivity, and control.</p> <p>High level comparison:</p> Deployment Mode Infrastructure Ownership Connectivity Requirements Upgrade / Patching Responsibility Typical Use Cases SaaS Popsink-managed cloud Outbound connectivity required Popsink handles Fast startup, low ops, non-restrictive environments BYOC Customer\u2019s cloud account Outbound/inbound as required Shared (Popsink + Customer) Organizations wanting control over data, keys, cost On-Premises Customer-managed data center or private cloud Standard internal networking, limited external contact Customer (with Popsink guidance) Enterprises with strict internal hosting needs Air-Gapped / Isolated Customer-managed, isolated network No outbound connectivity allowed Offline, signed update bundles Regulated environments, high-security zones"},{"location":"deployment/#deployment-models-detailed-descriptions","title":"Deployment Models \u2014 Detailed Descriptions","text":"<p>Below are more detailed descriptions of each deployment model, including features, constraints, and prerequisites.</p>"},{"location":"deployment/#1-saas-fully-managed","title":"1. SaaS (Fully Managed)","text":"<p>Description</p> <p>In this model, Popsink hosts and manages the full stack (compute, storage, networking, orchestration) in a cloud environment. The user interacts via APIs, consoles, or UI but does not need to provision or manage infrastructure.</p> <p>Key Features &amp; Benefits</p> <ul> <li>Zero ops: Setup can be done in hours</li> <li>Automatic upgrades and patches</li> <li>Elastic scaling under predictable SLAs</li> <li>Data boundary controls: region selection, private networking options</li> </ul> <p>Responsibilities</p> <ul> <li>Popsink: manage infrastructure, scaling, updates, high availability</li> <li>Customer: data modeling, configuration, access controls, inbound/outbound integration</li> </ul>"},{"location":"deployment/#2-bring-your-own-cloud-byoc","title":"2. Bring Your Own Cloud (BYOC)","text":"<p>Description</p> <p>This model installs Popsink within the customer\u2019s own cloud account (e.g. AWS, GCP, Azure). All data, keys, and spend remain under the customer's control. The deployed components run within the customer\u2019s VPC and use existing identity and key management systems.</p> <p>Key Features &amp; Benefits</p> <ul> <li>Data stays inside your VPC</li> <li>VPC-only traffic (internal networking)</li> <li>Single-tenant cost visibility</li> <li>More control over infrastructure and governance</li> </ul> <p>Responsibilities</p> <ul> <li>Customer: provide the target cloud account, networking setup, VPC connectivity</li> <li>Popsink: deliver the deployment artifacts, containers, orchestration, guidance for upgrades, monitoring</li> </ul>"},{"location":"deployment/#3-on-premises-on-prem","title":"3. On-Premises (On-Prem)","text":"<p>Description</p> <p>Popsink can run within a customer\u2019s data center or private cloud environment, in a Kubernetes cluster.</p> <p>Key Features &amp; Benefits</p> <ul> <li>Supports Kubernetes or VM installations</li> <li>Integrates with enterprise SSO</li> <li>Minimal external dependencies</li> </ul> <p>Responsibilities</p> <ul> <li>Customer: provide the physical/virtual infrastructure, storage, networking, identity, monitoring</li> <li>Popsink: provide the software, configuration, deployment instructions, integration with identity and observability systems</li> </ul>"},{"location":"deployment/#4-air-gapped-isolated","title":"4. Air-Gapped / Isolated","text":"<p>Description</p> <p>In environments that prohibit outbound connectivity (e.g. high-security, classified, regulatory environments), Popsink supports an air-gapped deployment. All operations, updates, and communications happen without external network connectivity. Updates are delivered via signed offline bundles, and the environment supports strict change control and auditing.</p> <p>Key Features &amp; Benefits</p> <ul> <li>No outbound connectivity required</li> <li>Offline, signed update bundles (auditable)</li> <li>Controlled, auditable deployments</li> <li>End-to-end policy enforcement</li> </ul> <p>Responsibilities</p> <ul> <li>Customer: maintain the isolated network, provide mechanisms for secure update transfer, ensure auditability</li> <li>Popsink: provide offline deployment artifacts, signature verification, rollback and upgrade procedures</li> </ul>"},{"location":"roadmap/","title":"Popsink Roadmap","text":"<p>This document outlines the upcoming features and strategic initiatives in the Popsink product roadmap. Each milestone contributes to enhancing reliability, scalability, and enterprise readiness for our data integration platform.</p>"},{"location":"roadmap/#advanced-configuration-target","title":"Advanced Configuration Target","text":"<p>Goal: Provide fine-grained control over deployment and runtime configurations.</p> <p>Key Highlights:</p> <ul> <li>Support for per-target resource tuning (memory, concurrency, retries).</li> <li>Environment-specific overrides for staging, QA, and production.</li> <li>Custom configuration templates for advanced users.</li> </ul> <p>Benefits:</p> <ul> <li>Improved performance optimization.</li> <li>Simplified management of complex deployments.</li> </ul>"},{"location":"roadmap/#terraform-provider","title":"Terraform Provider","text":"<p>Goal: Enable full infrastructure automation for Popsink through Terraform.</p> <p>Key Highlights:</p> <ul> <li>Manage Popsink resources (connectors, pipelines) as code.</li> <li>Integrate with existing CI/CD pipelines.</li> <li>Version-controlled infrastructure state.</li> </ul> <p>Benefits:</p> <ul> <li>Reproducible environments.</li> <li>Streamlined deployment workflows.</li> <li>Reduced manual configuration.</li> </ul>"},{"location":"roadmap/#observability","title":"Observability","text":"<p>Goal: Improve insight into system operations and data flows.</p> <p>Key Highlights:</p> <ul> <li>Enhanced logging with contextual metadata.</li> <li>Metrics export via OpenTelemetry.</li> <li>Real-time health dashboards for pipelines and connectors.</li> </ul> <p>Benefits:</p> <ul> <li>Faster troubleshooting.</li> <li>Proactive performance monitoring.</li> <li>Transparent operational visibility.</li> </ul>"},{"location":"roadmap/#monitoring","title":"Monitoring","text":"<p>Goal: Deliver a unified monitoring experience across the Popsink platform.</p> <p>Key Highlights:</p> <ul> <li>Built-in alerting and anomaly detection.</li> <li>Integration with external tools (Grafana, Prometheus, Datadog).</li> <li>Historical trend analysis for pipeline performance.</li> </ul> <p>Benefits:</p> <ul> <li>Early detection of issues.</li> <li>Reduced downtime.</li> <li>Improved system reliability.</li> </ul>"},{"location":"roadmap/#exactly-once-connectors","title":"Exactly Once Connectors","text":"<p>Goal: Guarantee \u201cexactly-once\u201d message delivery semantics for critical data pipelines.</p> <p>Key Highlights:</p> <ul> <li>Idempotent processing mechanisms.</li> <li>Transactional delivery and checkpointing.</li> <li>Support for distributed systems and message queues.</li> </ul> <p>Benefits:</p> <ul> <li>Elimination of duplicates and data loss.</li> <li>Strong data integrity guarantees.</li> <li>Compliance with financial and regulated data flows.</li> </ul>"},{"location":"roadmap/#iso-27001-compliance","title":"ISO 27001 Compliance","text":"<p>Goal: Achieve full compliance with ISO 27001 standards.</p> <p>Key Highlights:</p> <ul> <li>Enhanced access control policies.</li> <li>Documented security management processes.</li> <li>Regular audits and continuous risk assessment.</li> </ul> <p>Benefits:</p> <ul> <li>Strengthened trust with enterprise customers.</li> <li>Verified information security posture.</li> <li>Alignment with global security best practices.</li> </ul>"},{"location":"roadmap/#hybrid-deployment-self-serve","title":"Hybrid Deployment Self-Serve","text":"<p>Goal: Support hybrid and multi-cloud deployments.</p> <p>Key Highlights:</p> <ul> <li>Ability to run Popsink across cloud and on-premise environments.</li> <li>Secure data processing without leaving customer networks.</li> <li>Seamless coordination between distributed agents.</li> </ul> <p>Benefits:</p> <ul> <li>Flexibility for enterprise architectures.</li> <li>Compliance with data residency requirements.</li> <li>Cost optimization across environments.</li> </ul>"},{"location":"roadmap/#sso-self-serve","title":"SSO Self-Serve","text":"<p>Goal: Empower organizations to manage Single Sign-On independently.</p> <p>Key Highlights:</p> <ul> <li>Self-service SSO configuration via admin dashboard.</li> <li>Support for SAML, OIDC, and OAuth2 providers.</li> <li>Role-based access synchronization with identity providers.</li> </ul> <p>Benefits:</p> <ul> <li>Simplified user management.</li> <li>Stronger authentication controls.</li> <li>Reduced dependency on support teams.</li> </ul>"},{"location":"roadmap/#mcp-model-context-protocol-server","title":"MCP (Model Context Protocol Server)","text":"<p>Goal: Integrate Popsink with the emerging Model Context Protocol (MCP) ecosystem to enable context-aware, AI-driven operations.</p> <p>Key Highlights:</p> <ul> <li>Implement a dedicated MCP server for Popsink.</li> <li>Allow AI agents and copilots to query, configure, and monitor Popsink through standard protocol interfaces.</li> <li>Provide secure, structured access to Popsink metadata, configuration, and pipeline states.</li> <li>Enable interoperability with external LLM tools and orchestration platforms.</li> </ul> <p>Benefits:</p> <ul> <li>Seamless integration with AI assistants and automation tools.</li> <li>Unlocks natural language interaction with Popsink environments.</li> <li>Foundation for context-rich, intelligent operations and observability.</li> </ul>"},{"location":"source/","title":"Source Connectors","text":"<p>This section provides a comprehensive guide on Source Connectors, a crucial component of the Popsink platform that enables you to integrate streaming data from various sources into your data infrastructure seamlessly.</p>"},{"location":"source/#what-are-source-connectors","title":"What are Source Connectors?","text":"<p>Source Connectors are modular, reusable components that connect Popsink to various data-producing services, databases, and applications. They are responsible for continuously capturing data changes and streaming those changes to Popsink in real time.</p> <p>Imagine a Source Connector as a bridge that continuously transports data from a source (such as databases, SaaS applications, or custom APIs) to your Popsink data pipeline, without any manual export or import. It ensures that your data platform reflects the most current state of your data sources.</p>"},{"location":"source/#features-of-source-connectors","title":"Features of Source Connectors","text":"<ul> <li>Real-time Streaming: Popsink Source Connectors operate with streaming technologies, ensuring that data is captured and delivered with minimal latency.</li> <li>Scalability: They are designed to handle high volumes of data and scale with your needs. Whether you're dealing with a few hundred records a minute or millions, Source Connectors can handle the load.</li> <li>Resilience: Source Connectors are robust and can gracefully handle network failures and interruptions, automatically reconnecting and resuming data transfer when possible.</li> <li>Compatibility: They are built to be compatible with a wide range of data sources including modern SaaS applications, traditional databases, and custom APIs.</li> <li>Incremental Updates: Popsink's Source Connectors can transfer data incrementally, reducing bandwidth usage and ensuring that only new or changed data is streamed.</li> <li>Security: Data security is paramount, so all data transferred through Source Connectors is encrypted in transit.</li> </ul>"},{"location":"source/#how-do-source-connectors-work","title":"How do Source Connectors Work?","text":"<p>Popsink's Source Connectors are designed to be simple to set up and manage:</p> <ol> <li>Configuration: Start by configuring a Source Connector with the necessary credentials and permissions to access your data source.</li> <li>Connection: Once configured, the Source Connector establishes a connection to the source, often using native APIs provided by the data source.</li> <li>Data Capture: The Source Connector then listens for changes to the data in real time. This could be new records being added, updates to existing records, or deletions.</li> <li>Streaming: As changes are detected, they are streamed to Popsink, where they can be processed, transformed, or moved into Popsink's data storage or another destination of your choice.</li> <li>Management: Through Popsink's user interface, you can monitor the health and performance of your Source Connectors, schedule maintenance windows, and update configurations as needed.</li> </ol>"},{"location":"source/#common-use-cases-for-source-connectors","title":"Common Use Cases for Source Connectors","text":"<ul> <li>Real-Time Analytics: Stream changes from your operational databases to Popsink to power real-time dashboards and analytics.</li> <li>Data Integration: Unify data from multiple sources to create a single source of truth for your organization.</li> <li>Event-Driven Architecture: Capture events from various sources to trigger workflows and processes in real time.</li> <li>Change Data Capture: Minimize the resource impact on your source systems by only capturing and transferring changes.</li> </ul>"},{"location":"source/#getting-started-with-source-connectors","title":"Getting Started with Source Connectors","text":"<p>Setting up a Source Connector in Popsink is straightforward:</p> <ol> <li>Navigate to the Source Connectors section of the Popsink platform.</li> <li>Select 'Add Source Connector' and choose the type of connector that matches your data source.</li> <li>Provide the necessary credentials and configuration details.</li> <li>Define the data streams you wish to capture.</li> <li>Save and start the Source Connector.</li> </ol> <p>Popsink's intuitive user interface will guide you through each step, ensuring a hassle-free setup.</p>"},{"location":"source/#conclusion","title":"Conclusion","text":"<p>Source Connectors are the foundational elements that empower your Popsink data platform to be a comprehensive, real-time data integration solution. By leveraging these connectors, your organization can harness the full potential of your data as it streams from the source, leading to more informed decisions and a more reactive business model.</p> <p>Should you require further assistance or have any questions, our support team is available to help you make the most of Popsink's powerful data streaming capabilities.</p> <p>Oracle</p>"},{"location":"target/","title":"Target Connectors","text":"<p>In this section of Popsink\u2019s user documentation, we focus on Target Connectors, which play a vital role in the data flow within the Popsink ecosystem. By understanding Target Connectors, you can maximize the efficiency and effectiveness of your data operations on our platform.</p>"},{"location":"target/#what-are-target-connectors","title":"What are Target Connectors?","text":"<p>Target Connectors serve as the endpoints for your data journey within Popsink. They allow you to route the data streamed through Popsink to various destinations such as data warehouses, data lakes, or other SaaS platforms where you can store, analyze, or utilize your data.</p> <p>Think of Target Connectors as the receivers in a game of data pass - they\u2019re designed to catch the data from your source systems and safely store it where you need it.</p>"},{"location":"target/#features-of-target-connectors","title":"Features of Target Connectors","text":"<ul> <li>Flexibility: Popsink\u2019s Target Connectors can interface with a wide variety of destinations, accommodating different data storage and processing needs.</li> <li>Batch and Streaming: Whether your use case demands batch loading or real-time streaming, Target Connectors are equipped to handle both methodologies.</li> <li>Customization: You can configure Target Connectors to map data to the specific schema of the target system, ensuring compatibility and consistency.</li> <li>Efficiency: They are optimized to transfer data swiftly and securely, minimizing latency and maximizing throughput.</li> <li>Reliability: With built-in error handling and recovery mechanisms, Target Connectors are reliable components that ensure data integrity.</li> <li>Security: Popsink places high importance on security, with all data transferred by Target Connectors being encrypted in transit and at rest.</li> </ul>"},{"location":"target/#how-do-target-connectors-work","title":"How do Target Connectors Work?","text":"<p>Target Connectors integrate seamlessly within the Popsink data pipeline:</p> <ol> <li>Selection: Choose the appropriate Target Connector for your desired destination within the Popsink platform.</li> <li>Configuration: Provide the destination-specific credentials and define the data mapping and transformation rules as needed.</li> <li>Initialization: The Target Connector establishes a secure connection to your chosen destination, ready to receive data.</li> <li>Data Transfer: Data arriving from the source is processed according to your configuration and then transferred to the target destination.</li> <li>Monitoring: Through the Popsink dashboard, you can monitor the data flow, observe performance metrics, and troubleshoot any issues that arise.</li> </ol>"},{"location":"target/#common-use-cases-for-target-connectors","title":"Common Use Cases for Target Connectors","text":"<ul> <li>Data Warehousing: Stream data into your data warehouse for complex querying, reporting, and analytics.</li> <li>Real-Time Data Sync: Keep various systems in sync by streaming updated data in real time.</li> <li>Machine Learning: Populate your data science environments with fresh data for model training and inference.</li> <li>Application Data Feeds: Power your applications with a constant feed of data for a wide array of operational uses.</li> </ul>"},{"location":"target/#getting-started-with-target-connectors","title":"Getting Started with Target Connectors","text":"<p>Implementing a Target Connector in Popsink involves a few simple steps:</p> <ol> <li>Access the Target Connectors area within the Popsink user interface.</li> <li>Click on \u2018Add Target Connector\u2019 and select the destination type that aligns with your requirements.</li> <li>Enter the required destination credentials and configurations, such as connection strings and data format preferences.</li> <li>Map the incoming data fields to the destination\u2019s schema to ensure a smooth data transfer.</li> <li>Activate the Target Connector and watch as Popsink begins to route data to your chosen target.</li> </ol> <p>Our platform is designed to guide you through the setup process, making it as intuitive as possible.</p>"},{"location":"target/#conclusion","title":"Conclusion","text":"<p>Target Connectors are key to maximizing the impact of your data strategies with Popsink. They enable you to effectively channel the data captured by Source Connectors to a variety of destinations for further processing and analysis. By integrating with Popsink\u2019s robust Target Connectors, your data can be transformed into actionable insights, driving business growth and innovation.</p> <p>For any additional support or queries regarding Target Connectors, the Popsink team is dedicated to providing you with the necessary assistance to enhance your data integration experience.</p>"},{"location":"changelog/v1.78/","title":"v1.78 08/02/2024","text":""},{"location":"changelog/v1.78/#features","title":"Features","text":"<ul> <li>Hubspot source connector : Choose your resources</li> <li>Hubspot source connector : Initial load</li> <li>BigQuery target connector : History table and Upsert materialized view</li> <li>Bring your own Kafka</li> </ul>"},{"location":"changelog/v1.78/#fix","title":"Fix","text":"<ul> <li>Dashboard data models search</li> </ul>"},{"location":"changelog/v1.83/","title":"v1.83 18/03/2024","text":""},{"location":"changelog/v1.83/#features","title":"Features","text":"<ul> <li>Messages are now Avro encoded</li> <li>Frontend updates</li> <li>Mysql source connector with SSH tunnel</li> <li>Better HubSpot source initial load</li> </ul>"},{"location":"changelog/v1.84/","title":"v1.84 03/04/2024","text":""},{"location":"changelog/v1.84/#features","title":"Features","text":"<ul> <li>Introducing ClickHouse target connector</li> <li>Frontend fixes</li> <li>Fix on data models statistics</li> </ul>"},{"location":"changelog/v3.2302/","title":"v3.2302 01/10/2024","text":""},{"location":"changelog/v3.2302/#changelog-summary","title":"Changelog Summary","text":""},{"location":"changelog/v3.2302/#new-features-enhancements","title":"New Features &amp; Enhancements:","text":"<ul> <li>Added parent record support to Attio (#4183)</li> <li>HubSpot association initial load (#4199)</li> <li>Salesforce push topic support (#4290)</li> <li>Added migration process for new database (#4310)</li> <li>Added retry and error handling improvements for HubSpot (#4477, #4483)</li> <li>Implemented Clickhouse target (#4573)</li> </ul>"},{"location":"changelog/v3.2302/#onboarding-improvements","title":"Onboarding Improvements:","text":"<ul> <li>Fixed onboarding issues, including OAuth connector handling (#4191)</li> <li>Trigger backfill during onboarding (#4225)</li> </ul>"},{"location":"changelog/v3.2302/#bug-fixes","title":"Bug Fixes:","text":"<ul> <li>Fixed MSSQL issues and configurations (#4219, #4251)</li> <li>Resolved HubSpot token and target build problems (#4441, #4509)</li> <li>Fixed Airtable source integration (#4317, #4478)</li> <li>Addressed multiple Salesforce-related issues (#4412, #4498)</li> <li>Fixed soft deletion renaming (#4582)</li> </ul>"},{"location":"changelog/v3.2302/#performance-optimization","title":"Performance &amp; Optimization:","text":"<ul> <li>Improved connectors list and subscription detail requests (#4301, #4292)</li> <li>Enhanced e2e tests (#4155, #4316)</li> <li>Optimized Kafka-connect images and avoided IBM-related issues (#4556)</li> </ul>"},{"location":"changelog/v3.2302/#refinements","title":"Refinements:","text":"<ul> <li>Unified manifests labels (#4198)</li> <li>Improved error messaging and user experience (#4376)</li> <li>Standardized source/target data tables (#4544)</li> </ul>"},{"location":"changelog/v3.2302/#version-updates","title":"Version Updates:","text":"<ul> <li>Multiple version bumps for stability and feature releases (#4261, #4341, #4527)</li> <li>Released versions: <code>0.3.229</code>, <code>0.3.2298</code>, <code>0.3.2299</code>, <code>0.3.2300</code>, <code>0.3.2301</code></li> </ul>"},{"location":"changelog/v3.2302/#miscellaneous","title":"Miscellaneous:","text":"<ul> <li>Improved logging and monitoring systems (#4169, #4418)</li> <li>Fixed email UTF-8 encoding issues (#4431)</li> <li>Preload schema webhook slack (#4517)</li> </ul> <p>This summary includes major feature releases, critical fixes, and version updates based on the commits.</p>"},{"location":"changelog/v3.24/","title":"v3.24 14/10/2024","text":""},{"location":"changelog/v3.24/#changelog-summary","title":"Changelog Summary","text":""},{"location":"changelog/v3.24/#features","title":"Features:","text":"<ul> <li>Connectors:</li> <li>Added search filter functionality (#4568)</li> <li>Added a category feature to target/source connectors (#4598)</li> <li> <p>New target support added (#4506)</p> </li> <li> <p>Datamodel:</p> </li> <li>Added a detailed usage tab in the data model (#4269)</li> <li> <p>Refresh logic implemented for data model list in connector detail (#4554)</p> </li> <li> <p>Onboarding:</p> </li> <li>Added notification for onboarding (#4554)</li> <li> <p>Removed \"About\" link during onboarding (#4577)</p> </li> <li> <p>Region Management:</p> </li> <li> <p>Request region functionality added (#4551)</p> </li> <li> <p>Whitelisting:</p> </li> <li>Added/removed table whitelisting (#4547)</li> <li>Fixed whitelisting issue (#4594)</li> </ul>"},{"location":"changelog/v3.24/#bug-fixes","title":"Bug Fixes:","text":"<ul> <li>Fixed issue with visible existing popsink tags on update (#4551)</li> <li>Replay initialization load issue fixed for subscriptions (#4612)</li> </ul>"},{"location":"changelog/v3.24/#updates","title":"Updates:","text":"<ul> <li>General config updates (#4619)</li> </ul>"},{"location":"changelog/v3.24/#release","title":"Release:","text":"<ul> <li>Version 0.3.24 released for production (#4614)</li> </ul>"},{"location":"changelog/v3.29/","title":"v3.29 13/11/2024","text":""},{"location":"changelog/v3.29/#changelog-summary","title":"Changelog Summary","text":""},{"location":"changelog/v3.29/#features","title":"Features:","text":"<ul> <li> <p>Connectors:</p> <ul> <li>Added group ID support (#4624).</li> <li>Introduced lifecycle management for connectors, datamodels, subscriptions, and schemas (#4841).</li> <li>Added support for Snowpipe streaming and schema evolution (#4859).</li> <li>Enabled popsink source domain (#4953).</li> <li>Implemented single subscription pause/play (#4989).</li> <li>Added admin commands for managing connectors, datamodels, and schemas (#4992, #5035).</li> <li>Configured one consumer per source (#5032).</li> </ul> </li> <li> <p>Integrations:</p> <ul> <li>Enhanced HubSpot functionality with retry on 429 errors and support for unique property creation (#4890, #4820).</li> <li>Improved BigQuery target logging (#4807).</li> <li>Service Account BQ experience updated (#4973).</li> <li>Bulk API introduced for Salesforce (#4727).</li> </ul> </li> <li> <p>UI/UX Improvements:</p> <ul> <li>Redesigned usage page (#4550).</li> <li>Updated initial load button design (#4692).</li> <li>New loading experience introduced (#4952).</li> <li>Updated environment creation flow (#4974).</li> </ul> </li> <li> <p>Admin &amp; Worker Enhancements:</p> <ul> <li>Added worker configuration lifecycle (#4878).</li> <li>Improved logs and added worker logging (#4750, #4943).</li> <li>Added support for user-configurable workers (#4747).</li> </ul> </li> <li> <p>Other Features:</p> <ul> <li>Free Trial extended to 30 days (#4812).</li> <li>Enabled blocking of consumer start and improved front status display (#5027).</li> </ul> </li> </ul>"},{"location":"changelog/v3.29/#fixes","title":"Fixes:","text":"<ul> <li>Fixed multiple HubSpot issues, including object IDs and custom object paths (#4627, #4819, #4824).</li> <li>Resolved Salesforce deletion and API issues (#4844).</li> <li>Addressed Snowflake source issues (#4834).</li> <li>Improved schema pool handling and avoided ID conflicts on new versions (#5011).</li> <li>Fixed out-of-memory errors by updating memory limits (#5008).</li> <li>Handled 403 loops and signout conditions (#5042, #5000).</li> <li>Fixed nullable values in datagen source (#4764).</li> <li>Corrected typos and improved naming conventions (#4919, #4633).</li> <li>Fixed mapping and divider configurations (#5018, #4869).</li> </ul>"},{"location":"changelog/v3.7/","title":"v3.7 29/01/2025","text":""},{"location":"changelog/v3.7/#changelog-summary","title":"Changelog Summary","text":""},{"location":"changelog/v3.7/#connectors-integrations","title":"Connectors &amp; Integrations","text":"<ul> <li>Fixes and improvements for BigQuery, Snowflake, MongoDB, HubSpot, Salesforce, Slack, Airtable, Oracle, MSSQL, JDBC, and Attio connectors.  </li> <li>Improved Popsink, Webhook UX, and HubSpot logging.  </li> <li>Support for Stripe payments and portals.  </li> </ul>"},{"location":"changelog/v3.7/#performance-optimization","title":"Performance &amp; Optimization","text":"<ul> <li>Fixed N+1 query issues to optimize performance.  </li> <li>More efficient subscription management and caching.  </li> <li>Async batch handling and recursion fixes.  </li> </ul>"},{"location":"changelog/v3.7/#frontend-ux-enhancements","title":"Frontend &amp; UX Enhancements","text":"<ul> <li>Improved mapping UI, subscription status display, and error pages.  </li> <li>Fixed icons, colors, labels, and button behaviors.  </li> <li>Auto-reload logs and scrollable panels for connector steps.  </li> <li>Updated multi-error alerts and v-autocomplete for invites.  </li> </ul>"},{"location":"changelog/v3.7/#bug-fixes-miscellaneous","title":"Bug Fixes &amp; Miscellaneous","text":"<ul> <li>Fixed event names, query parameters, initialization failures, and credential component issues.  </li> <li>Improved tablelist updates, retry handling, and external service mocks.  </li> <li>Prevented tombstone records in JDBC and fixed nullable Avro types.  </li> <li>403 handling refined (no forced signout).  </li> </ul>"},{"location":"changelog/v3.8/","title":"v3.8 25/03/2025","text":""},{"location":"changelog/v3.8/#changelog-summary","title":"Changelog Summary","text":""},{"location":"changelog/v3.8/#authentication-security","title":"Authentication &amp; Security","text":"<ul> <li>Improved OAuth token handling (code token and extra attributes).  </li> <li>Critical CVE fix for frontend security.  </li> <li>Updated SSL handling for Aiven and Snowflake precision settings.  </li> <li>Removed old environment variables and Mercure.  </li> </ul>"},{"location":"changelog/v3.8/#database-backend-improvements","title":"Database &amp; Backend Improvements","text":"<ul> <li>Improved Snowflake, MongoDB, Clickhouse, and Redpanda integration.  </li> <li>Clickhouse now fully async for better performance.  </li> <li>Incremental load support added.  </li> <li>Multi-primary key support for workers.  </li> <li>PostgreSQL optimizations (fewer tombstones, better identifier management).  </li> <li>Fixes for JDBC memory, IBM i, and Teradata targets.  </li> <li>Optimized worker status updates and logging.  </li> </ul>"},{"location":"changelog/v3.8/#connectors-integrations","title":"Connectors &amp; Integrations","text":"<ul> <li>Bug fixes and enhancements for BigQuery, HubSpot, Salesforce, Stripe, Webhooks, Airtable, MSSQL, Oracle, and JDBC.  </li> <li>Dedicated deployment for Attio webhooks and Attio BigQuery integration.  </li> <li>Databricks and Teradata targets introduced.  </li> <li>Salesforce source fixes.  </li> <li>Better handling of schema changes for Webhooks and connectors.  </li> </ul>"},{"location":"changelog/v3.8/#performance-optimization","title":"Performance &amp; Optimization","text":"<ul> <li>N+1 query fixes and optimizations across backend.  </li> <li>Retries and timeout handling improved for production stability.  </li> <li>Default retention time adjustments for optimized storage.  </li> <li>Snowflake updates to avoid dashes in table names.  </li> </ul>"},{"location":"changelog/v3.8/#frontend-ux-enhancements","title":"Frontend &amp; UX Enhancements","text":"<ul> <li>Multiple UI fixes, including subscription details, button behaviors, and icon updates.  </li> <li>Nuxt 3.16 migration for frontend framework.</li> <li>Error messages now more specific and informative.  </li> <li>Improved redirects when backend is down.  </li> </ul>"},{"location":"changelog/v3.8/#miscellaneous-other-fixes","title":"Miscellaneous &amp; Other Fixes","text":"<ul> <li>Webhook target and source fixes.  </li> <li>SSH tunnel improvements for IBM i.  </li> <li>Cron usage enhancements.  </li> <li>Better logging and debugging:  </li> <li>More informative logs with prefixes.  </li> <li>Removed unnecessary hot reload in Gunicorn.  </li> <li>Leftover invoke task removed.  </li> <li>Fixes for load visibility and resource initialization.  </li> </ul>"},{"location":"connectors/source/application/","title":"Application Source","text":"<p>The Application Source Connector allows you to directly send data to Popsink using Python, Node, Go, Java or other programming languages. It is the most efficient way to build a direct integration between your application and Popsink. Start by creating a connector then you will be able to register the topics you wish to send data to.</p>"},{"location":"connectors/source/attio/","title":"Attio Source","text":"<p>The Attio Source Connector integrates with Attio, a modern Customer Relationship Management (CRM) platform designed for data-driven teams. Attio offers a flexible and customizable approach to manage customer data, interactions, and relationships. It allows users to create custom objects, fields, and workflows to match their specific business processes. The connector enables real-time synchronization of data from Attio to your data pipeline, facilitating analytics, reporting, and integration with other business systems. This connector is particularly useful for companies looking to leverage their CRM data for advanced analytics, customer insights, and cross-functional collaboration.</p>"},{"location":"connectors/source/attio/#prerequisites","title":"Prerequisites","text":"<ul> <li>Attio Account with Connection Privileges: Ensure you have an active Attio account with the necessary permissions to access and replicate data.</li> </ul>"},{"location":"connectors/source/attio/#connecting-attio","title":"Connecting Attio","text":"<p>In the source selection menu, select the Attio connector and click the \"Connect\" button.</p> <p></p> <p>A new window will open, prompting you to log in to your Attio account. After logging in, grant the necessary permissions to allow Popsink to access your Attio data.</p> <p></p> <p>Once authenticated, you will be able to give your connector a name and select the Attio objects you wish to track. In the \"Table selection\", you will be presented with a list of available objects in your Attio CRM. Select the objects you wish to replicate to Popsink. Once selected, click \"Create connector\"</p> <p></p> <p>Your connector is ready! You can now use the \"Subscribe to all\" button to sync all objects from the connector with the destination of your choice.</p> <p></p>"},{"location":"connectors/source/attio/#key-features","title":"Key Features","text":"<ul> <li> <p>Real-time Data Synchronization: The Attio CRM Connector ensures real-time data synchronization, capturing changes as they happen in your Attio CRM and reflecting them in your target systems.</p> </li> <li> <p>Customizable Object Selection: You can choose specific objects from Attio to replicate, allowing you to tailor the data integration to your business needs.</p> </li> <li> <p>Schema Evolution and Compatibility: The connector automatically detects changes in the Attio objects schema and adjusts the data replication process accordingly, ensuring seamless data integration even as your CRM data structure evolves.</p> </li> <li> <p>Fault-tolerant and Scalable: Built with fault tolerance and scalability in mind, the Attio CRM Connector can resume data replication from the last known state in case of disruptions, ensuring data consistency and minimal downtime.</p> </li> <li> <p>Initial Data Load: The connector performs an initial full data load of the selected objects from Attio, setting up a comprehensive foundation for ongoing synchronization.</p> </li> </ul>"},{"location":"connectors/source/attio/#security","title":"Security","text":"<ul> <li>OAuth 2.0 Authentication: The connector uses OAuth 2.0 for secure and reliable authentication, ensuring your Attio credentials are protected.</li> </ul>"},{"location":"connectors/source/attio/#conclusion","title":"Conclusion","text":"<p>The Attio CRM Connector is a robust solution for integrating your Attio data with Popsink, offering real-time synchronization, scalability, and security. With customizable object selection and advanced filtering options, it adapts to your specific data integration needs, driving enhanced business intelligence and operational efficiency.</p>"},{"location":"connectors/source/bigquery/","title":"BigQuery Source","text":"<p>The BigQuery Source integration in PopSink allows you to seamlessly ingest data from a BigQuery database into PopSink pipelines. With this connector, you can extract structured data for processing, transformation, and further downstream operations.</p>"},{"location":"connectors/source/bigquery/#prerequisites","title":"Prerequisites","text":"<p>The table should be configure with : <pre><code>enable_change_history=TRUE\n</code></pre></p>"},{"location":"connectors/source/bigquery/#permissions","title":"Permissions","text":"<ul> <li>bigquery.tables.getData</li> </ul>"},{"location":"connectors/source/datagen/","title":"Datagen Source","text":"<p>The Datagen Source Connector provide a practical and efficient way to create synthetic data for testing. It acts as a data generator that creates artificial data based on the specific schema that you define.</p>"},{"location":"connectors/source/eventhub/","title":"Eventhub Source","text":"<p>The EventHub Source Connector integrates with Azure Event Hubs, a highly scalable, real-time data streaming and event ingestion Platform-as-a-Service (PaaS) offered by Microsoft Azure. It provides a distributed, fault-tolerant, and highly available messaging service that can handle millions of events per second, making it suitable for big data, analytics, and real-time processing scenarios.</p>"},{"location":"connectors/source/firestore/","title":"Firestore Source","text":"<p>The Firestore Source Connector allows you to easily ingest from the Firestore databases using a Google Cloud service account and whitelist specific Firestore collections that you want to access. This document will guide you through the necessary steps to get started with the Firestore Connector.</p>"},{"location":"connectors/source/firestore/#prerequisites","title":"Prerequisites","text":"<ul> <li>A Firestore database with existing collections.</li> <li>A Google Cloud service account with the appropriate Firestore database permissions and the JSON key file associated with the service account.</li> </ul>"},{"location":"connectors/source/hubspot/","title":"HubSpot Source","text":"<p>The HubSpot Source Connector integrates with HubSpot, a comprehensive inbound marketing, sales, and customer service platform. HubSpot offers a wide range of tools for Customer Relationship Management (CRM), marketing automation, content management, and sales pipeline tracking. This connector allows you to extract and stream data from various HubSpot modules, including contacts, companies, deals, tickets, and marketing campaigns. It enables real-time synchronization of customer data, interaction history, and marketing analytics from HubSpot to your data pipeline. This integration is particularly valuable for businesses looking to consolidate their customer data, perform advanced analytics, create comprehensive customer profiles, or build data-driven marketing and sales strategies across multiple platforms.</p>"},{"location":"connectors/source/ibmi/","title":"IBMi (AS/400) Source","text":"<p>The IBMi (AS/400) Source Connector integrates with IBM i, formerly known as IBM AS/400 and iSeries, a powerful and reliable midrange computer system widely used in enterprise environments. This connector enables the extraction and streaming of data from IBMi systems, which are known for hosting critical business applications and databases in industries such as manufacturing, finance, and healthcare. It allows organizations to tap into their legacy IBMi data, including information from DB2 for i databases and various file systems. By connecting IBMi to modern data pipelines, this connector facilitates data modernization efforts, enabling real-time analytics, cross-platform data integration, and the ability to leverage legacy data in cloud-based or hybrid environments. This is particularly valuable for organizations looking to modernize their data infrastructure while maintaining their investments in IBMi systems.</p>"},{"location":"connectors/source/kafka/","title":"Kafka Source","text":"<p>The Kafka Source Connector integrates with Apache Kafka, a distributed, fault-tolerant, and highly-scalable event streaming platform designed for handling real-time data streams. It enables the efficient publishing, storing, and processing of large volumes of events, making it ideal for building data pipelines, messaging systems, and real-time analytics applications. Kafka is widely used across various industries for its high throughput, low latency, and strong durability guarantees.</p>"},{"location":"connectors/source/mongodb/","title":"MongoDB Source","text":"<p>The MongoDB Source Connector is a powerful and efficient solution designed to facilitate seamless data integration between your MongoDB databases and Popsink. This connector helps you synchronize with MongoDB in real-time, ensuring that your target systems remain updated with the latest information in real-time, driving business intelligence, analytics, and operational efficiency.</p>"},{"location":"connectors/source/mongodb/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>A <code>Replica Set</code> name: a replication set is a group of MongoDB instances sharing the same data and is defined in <code>replication.replSetName</code> for each instance in their respective configuration files (see here).</p> </li> <li> <p>A user with:</p> </li> <li> <p><code>read</code> privileges on the <code>oplog</code> database.</p> </li> <li> <p><code>read</code> privileges on the <code>config</code> database.</p> </li> <li> <p><code>listDatabases</code> privileges.</p> </li> <li> <p>Cluster-wide <code>find</code> and <code>changeStream</code> privileges.</p> </li> </ul>"},{"location":"connectors/source/mongodb/#key-features","title":"Key Features","text":"<ul> <li> <p>Real-time Change Data Capture (CDC): The MongoDB Source Connector employs a CDC mechanism using the native MongoDB logical decoding feature, capturing and streaming changes (inserts, updates, and deletes) as they occur in your database.</p> </li> <li> <p>Fault-tolerant and Scalable: The MongoDB Source Connector is built with fault tolerance and scalability in mind. It is capable of resuming data replication from the last known offset in case of failures, ensuring data consistency and minimal downtime.</p> </li> <li> <p>Initial Load: The connector automatically performs an initial full table load.</p> </li> <li> <p>Advanced Filtering: The MongoDB Source Connector provides a range of filtering options, including table and schema filters, allowing you to selectively replicate specific tables and schemas based on your needs.</p> </li> </ul>"},{"location":"connectors/source/mongodb/#security","title":"Security","text":"<p>The connector supports SSL/TLS encryption for secure communication between the connector and your MongoDB database.</p>"},{"location":"connectors/source/mssql/","title":"MSSQL Source","text":"<p>The MSSQL Source Connector is a powerful and efficient solution designed to facilitate seamless data integration between your Microsoft SQL Server (MSSQL) databases and Popsink. This connector helps you synchronize with Microsoft SQL Server in real-time, ensuring that your target systems remain updated with the latest information in real-time, driving business intelligence, analytics, and operational efficiency.</p>"},{"location":"connectors/source/mssql/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Key Features</li> <li>Security</li> <li>Prerequisites</li> <li>Creating a Dedicated Role</li> <li>Enabling CDC</li> <li>Housekeeping Scripts</li> </ol>"},{"location":"connectors/source/mssql/#key-features","title":"Key Features","text":"<ul> <li>Real-time Change Data Capture (CDC): the MSSQL Source Connector employs a CDC mechanism using the native Microsoft SQL Server logical decoding feature, capturing and streaming changes (inserts, updates, and deletes) as they occur in your database.</li> <li>Fault-tolerant and Scalable: The MSSQL Source Connector is built with fault tolerance and scalability in mind. It is capable of resuming data replication from the last known offset in case of failures, ensuring data consistency and minimal downtime.</li> <li>Initial Load: The connector automatically performs an initial full table load.</li> <li>Advanced Filtering: The MSSQL Source Connector provides a range of filtering options, including table and schema filters, allowing you to selectively replicate specific tables and schemas based on your needs.</li> </ul>"},{"location":"connectors/source/mssql/#security","title":"Security","text":"<p>The connector supports SSL/TLS encryption for secure communication between the connector and your Microsoft SQL Server database.</p>"},{"location":"connectors/source/mssql/#prerequisites","title":"Prerequisites","text":"<ul> <li>You will need to have Change Data Capture enabled on the tables you want to ingest. See Enabling CDC</li> <li>You will need a user with the necessary permissions. See Creating a Dedicated Role</li> </ul>"},{"location":"connectors/source/mssql/#relevant-roles","title":"Relevant Roles","text":"<ul> <li>sysadmin: role required for enabling CDC at the database level.</li> <li>db_owner: role required for enabling CDC at the table level.</li> </ul>"},{"location":"connectors/source/mssql/#creating-a-dedicated-role","title":"Creating a Dedicated Role","text":"<p>This step creates a dedicated replication ROLE, assigns it to your USER and grants it the necessary permissions to work with </p>"},{"location":"connectors/source/mssql/#steps","title":"Steps","text":"<ol> <li>Create the Replication Role: <pre><code>USE [{{your_database}}];\nGO\nCREATE ROLE cdc_role;\nGO\n</code></pre></li> <li>Assign the Replication Role to a User: <pre><code>USE [{{your_database}}];\nGO\nEXEC sp_addrolemember 'cdc_role', '{{your_user}}';\nGO\n</code></pre></li> <li>Grant CDC Permissions: <pre><code>USE [{{your_database}}];\nGO\nGRANT EXECUTE ON SCHEMA::cdc TO cdc_role;\nGO\n</code></pre></li> <li>Grant Permissions to Check Version, Encryption, and Track Schema: <pre><code>USE master;\nGO\nGRANT VIEW SERVER STATE TO cdc_role;\nGO\n\nUSE {{your_database}};\nGO\nGRANT SELECT ON OBJECT::INFORMATION_SCHEMA.TABLES TO cdc_role;\nGO\n</code></pre></li> </ol>"},{"location":"connectors/source/mssql/#enabling-cdc","title":"Enabling CDC","text":"<p>To enable CDC for your data, you need to do two things: 1) Enable CDC at the Database level, and 2) Enable CDC at the Table level. </p>"},{"location":"connectors/source/mssql/#for-databases","title":"For Databases","text":"<ol> <li> <p>Enable CDC on a Database: <pre><code>USE [{{your_database}}];\nGO\nEXEC sys.sp_cdc_enable_db;\nGO\n</code></pre></p> </li> <li> <p>Enable CDC on Multiple Databases: <pre><code>DECLARE @databases CURSOR;\nSET @databases = CURSOR FOR\nSELECT name FROM sys.databases WHERE name IN ({{your_database_list}});\n\nOPEN @databases;\n\nDECLARE @dbName NVARCHAR(50);\n\nFETCH NEXT FROM @databases INTO @dbName;\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    EXEC('USE ' + @dbName + '; EXEC sys.sp_cdc_enable_db;');\n    FETCH NEXT FROM @databases INTO @dbName;\nEND;\n\nCLOSE @databases;\nDEALLOCATE @databases;\n</code></pre></p> </li> </ol>"},{"location":"connectors/source/mssql/#for-tables","title":"For Tables","text":"<ol> <li> <p>Enable CDC on a Table: <pre><code>USE [{{your_database}}];\nGO\nEXEC sys.sp_cdc_enable_table\n    @source_schema = N'dbo',\n    @source_name   = N'{{your_table}}',\n    @role_name     = N'cdc_role', -- use @role_name = NULL if you haven't set up a role\n    @supports_net_changes = 1;\nGO\n</code></pre></p> </li> <li> <p>Enable CDC on multiple Tables: <pre><code>DECLARE @tables CURSOR;\nSET @tables = CURSOR FOR\nSELECT schema_name(t.schema_id) as schema_name, t.name as table_name\nFROM sys.tables t\nWHERE t.name IN ({{your_table_list}});\n\nOPEN @tables;\n\nDECLARE @schemaName NVARCHAR(50);\nDECLARE @tableName NVARCHAR(50);\n\nFETCH NEXT FROM @tables INTO @schemaName, @tableName;\n\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    EXEC('USE {{your_database}}; EXEC sys.sp_cdc_enable_table @source_schema = ''' + @schemaName + ''', @source_name = ''' + @tableName + ''', @role_name = ''cdc_user'' + @supports_net_changes = 1;');\n    FETCH NEXT FROM @tables INTO @schemaName, @tableName;\nEND;\n\nCLOSE @tables;\nDEALLOCATE @tables;\n</code></pre></p> </li> </ol>"},{"location":"connectors/source/mssql/#for-all","title":"For All","text":"<ol> <li>Enable CDC on multiple Tables in multiple Databases: <pre><code>-- Enable CDC on all databases'\nDECLARE @dbName NVARCHAR(128);\nDECLARE @tableName NVARCHAR(128);\nDECLARE @sql NVARCHAR(MAX);\n\n-- Cursor for all databases\nDECLARE db_cursor CURSOR FOR\nSELECT name\nFROM sys.databases\n-- [Optional] WHERE name LIKE 'something-%';\n\n-- Open the cursor and fetch the first database\nOPEN db_cursor;\nFETCH NEXT FROM db_cursor INTO @dbName;\n\n-- Loop through all databases\nWHILE @@FETCH_STATUS = 0\nBEGIN\n    -- Enable CDC on the database if not already enabled\n    SET @sql = 'IF NOT EXISTS (SELECT 1 FROM sys.databases WHERE name = ''' + @dbName + ''' AND is_cdc_enabled = 1)\n                BEGIN\n                    EXEC(''USE [' + @dbName + ']; EXEC sys.sp_cdc_enable_db'')\n                END';\n    EXEC sp_executesql @sql;\n\n    -- Cursor for all tables in the current database\n    DECLARE table_cursor CURSOR FOR\n    SELECT QUOTENAME(SCHEMA_NAME(schema_id)) + '.' + QUOTENAME(name)\n    FROM sys.tables\n    WHERE is_tracked_by_cdc = 0; -- Only select tables not already tracked by CDC, you may add more conditions\n\n    -- Open the cursor for tables\n    SET @sql = 'USE [' + @dbName + ']';\n    EXEC sp_executesql @sql;\n\n    OPEN table_cursor;\n    FETCH NEXT FROM table_cursor INTO @tableName;\n\n    -- Loop through all tables\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        -- Enable CDC on the table\n        SET @sql = 'USE [' + @dbName + ']; EXEC sys.sp_cdc_enable_table @source_schema = N''' + SCHEMA_NAME(schema_id) + ''', @source_name = N''' + @tableName + ''', @role_name = NULL, @supports_net_changes = 1';\n        EXEC sp_executesql @sql;\n\n        -- Fetch the next table\n        FETCH NEXT FROM table_cursor INTO @tableName;\n    END;\n\n    -- Close and deallocate the table cursor\n    CLOSE table_cursor;\n    DEALLOCATE table_cursor;\n\n    -- Fetch the next database\n    FETCH NEXT FROM db_cursor INTO @dbName;\nEND;\n\n-- Close and deallocate the database cursor\nCLOSE db_cursor;\nDEALLOCATE db_cursor;\n</code></pre></li> </ol>"},{"location":"connectors/source/mssql/#housekeeping-scripts","title":"Housekeeping Scripts","text":"<p>Here are a few useful scripts that can help you manage the CDC lifecycle.</p>"},{"location":"connectors/source/mssql/#purging-logs","title":"Purging Logs","text":"<p>Enabling Logs can take up space on your database so it's best practice to purge them regularly. There is a tradeoff between the log retention and the operational resilience of your replication pipeline. A longer retention means you will need more time to recover from outages before having to resync. Shorter retention takes up less space but gives you less time to recover.</p> <ol> <li>Purge CDC Logs: <pre><code>-- Set the database and the retention period\nUSE YourDatabaseName;\nGO\n\nDECLARE @retentionDays INT = 7; -- Set the retention period in days\n\n-- Convert retention days to a cutoff LSN\nDECLARE @retentionDateTime DATETIME = DATEADD(DAY, -@retentionDays, GETDATE());\nDECLARE @cutoffLSN BINARY(10);\n\n-- Retrieve the minimum LSN based on the retention date\nSELECT @cutoffLSN = sys.fn_cdc_map_time_to_lsn('smallest greater than or equal', @retentionDateTime);\n\n-- Check if the cutoff LSN is valid\nIF @cutoffLSN IS NOT NULL\nBEGIN\n    DECLARE @capture_instance NVARCHAR(200);\n    DECLARE @sql NVARCHAR(MAX);\n\n    -- Cursor to go through each capture instance\n    DECLARE instance_cursor CURSOR FOR\n    SELECT capture_instance\n    FROM cdc.change_tables;\n\n    OPEN instance_cursor;\n\n    FETCH NEXT FROM instance_cursor INTO @capture_instance;\n\n    WHILE @@FETCH_STATUS = 0\n    BEGIN\n        -- Generate the cleanup command for each capture instance\n        SET @sql = N'EXEC sys.sp_cdc_cleanup_change_table @capture_instance = ''' + @capture_instance + ''', @low_water_mark = ''' + CONVERT(NVARCHAR(100), @cutoffLSN, 1) + ''';';\n\n        -- Execute the cleanup command\n        EXEC sp_executesql @sql;\n\n        FETCH NEXT FROM instance_cursor INTO @capture_instance;\n    END;\n\n    CLOSE instance_cursor;\n    DEALLOCATE instance_cursor;\n\n    PRINT 'CDC logs purged successfully up to ' + CONVERT(NVARCHAR(30), @retentionDateTime, 121);\nEND\nELSE\nBEGIN\n    PRINT 'No valid LSN found for the specified retention period.';\nEND\nGO\n</code></pre></li> </ol>"},{"location":"connectors/source/mssql/#check-if-cdc-is-enabled","title":"Check if CDC is Enabled","text":"<ol> <li> <p>Check if it is Enabled on a Database: <pre><code>USE master\nGO\nselect name, is_cdc_enabled\nfrom sys.databases\nwhere name = '{{your_database}}'\nGO\n</code></pre>     0 means CDC is not enabled, 1 means it is.</p> </li> <li> <p>Check if it is Enabled on a Table: <pre><code>USE [{{your_database}}];\nGO\nselect name,type,type_desc,is_tracked_by_cdc\nfrom sys.tables\nwhere name = \u2018&lt;table_name&gt;\u2019\nGO\n</code></pre>    0 means CDC is not enabled, 1 means it is.</p> </li> </ol>"},{"location":"connectors/source/mssql/#disable-cdc","title":"Disable CDC","text":"<ol> <li>Disable CDC on a Database: <pre><code>USE [{{your_database}}];\nGO\nEXEC sys.sp_cdc_disable_db;\nGO\n</code></pre></li> <li>Disable CDC on a Table: <pre><code>USE [{{your_database}}];\nGO\nEXEC sys.sp_cdc_disable_table\n    @source_schema = N'dbo',\n    @source_name   = N'{{your_table}}',\n    @capture_instance = N'dbo_{{your_table}}';\nGO\n</code></pre></li> </ol>"},{"location":"connectors/source/mysql/","title":"MySQL Source","text":"<p>The MySQL Source Connector is a powerful and efficient solution designed to facilitate seamless data integration between your MySQL databases and Popsink. This connector helps you synchronize with MySQL in real-time, ensuring that your target systems remain updated with the latest information in real-time, driving business intelligence, analytics, and operational efficiency.</p>"},{"location":"connectors/source/mysql/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Binlogs enabled in FULL. See.</p> </li> <li> <p>A user with the following privileges on the target source(s):</p> </li> </ul> <pre><code>SELECT\nRELOAD\nSHOW DATABASES\nREPLICATION SLAVE\nREPLICATION CLIENT\n</code></pre> <p>if you want to connect with a ssh tunnel. Create the use with :</p> <pre><code>CREATE USER 'user'@'%' IDENTIFIED BY 'password';\n</code></pre>"},{"location":"connectors/source/mysql/#key-features","title":"Key Features","text":"<ul> <li> <p>Real-time Change Data Capture (CDC): the MySQL Source Connector employs a CDC mechanism using the native MySQL Server logical decoding feature, capturing and streaming changes (inserts, updates, and deletes) as they occur in your database.</p> </li> <li> <p>Fault-tolerant and Scalable: The MySQL Source Connector is built with fault tolerance and scalability in mind. It is capable of resuming data replication from the last known offset in case of failures, ensuring data consistency and minimal downtime.</p> </li> <li> <p>Initial Load: The connector automatically performs an initial full table load.</p> </li> <li> <p>Advanced Filtering: The MySQL Source Connector provides a range of filtering options, including table and schema filters, allowing you to selectively replicate specific tables and schemas based on your needs.</p> </li> </ul>"},{"location":"connectors/source/mysql/#security","title":"Security","text":"<p>The connector supports SSL/TLS encryption for secure communication between the connector and your MySQL database.</p>"},{"location":"connectors/source/oracle/","title":"Oracle Source","text":"<p>The Oracle Source Connector is an advanced tool designed to synchronize Oracle databases with Popsink efficiently and in real-time. It enables the real-time transfer of data, ensuring that the latest database changes are mirrored to the target systems. This capability is crucial for maintaining up-to-date business intelligence, enabling real-time analytics, and enhancing operational workflows.</p>"},{"location":"connectors/source/oracle/#prerequisites","title":"Prerequisites","text":"<p>Before deploying the Oracle Source Connector, certain prerequisites must be met to ensure a smooth integration process:</p> <ol> <li>Whitelisting Popsink's IP Address: Ensure that Popsink's IP address is whitelisted to allow uninterrupted communication between Oracle databases and Popsink.</li> <li>Database Log Mode Configuration: The Oracle database Archive Mode should be set to ArchiveLog.</li> <li> <p>Supplemental Logging: Supplemental Logs should be enable on the source you wish to replicate. This can me done at Database or Table Level :</p> </li> <li> <p>At Database Level</p> </li> </ol> <pre><code>ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;\n</code></pre> <ul> <li>At Table Level</li> </ul> <pre><code>ALTER TABLE **{db.name}** ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;\n</code></pre> <p>Note: If using AWS RDS, additional steps may be required. Please consult the relevant AWS RDS documentation and do feel free to reach out for help.</p>"},{"location":"connectors/source/oracle/#required-permissions","title":"Required Permissions","text":"<p>Although you could use a <code>superuser</code>, we do recommend setting up dedicated users for security reasons. The user account that the Oracle Source Connector utilizes must have sufficient privileges. The following SQL statements outline the necessary permissions:</p> <pre><code>GRANT CREATE SESSION TO {username} CONTAINER=ALL;\nGRANT SET CONTAINER TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$DATABASE to {username} CONTAINER=ALL;\nGRANT FLASHBACK ANY TABLE TO {username} CONTAINER=ALL;\nGRANT SELECT ANY TABLE TO {username} CONTAINER=ALL;\nGRANT SELECT_CATALOG_ROLE TO {username} CONTAINER=ALL;\nGRANT EXECUTE_CATALOG_ROLE TO {username} CONTAINER=ALL;\nGRANT SELECT ANY TRANSACTION TO {username} CONTAINER=ALL;\nGRANT LOGMINING TO {username} CONTAINER=ALL;\nGRANT CREATE TABLE TO {username} CONTAINER=ALL;\nGRANT LOCK ANY TABLE TO {username} CONTAINER=ALL;\nGRANT CREATE SEQUENCE TO {username} CONTAINER=ALL;\nGRANT EXECUTE ON DBMS_LOGMNR TO {username} CONTAINER=ALL;\nGRANT EXECUTE ON DBMS_LOGMNR_D TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$LOG TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$LOG_HISTORY TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$LOGMNR_LOGS TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$LOGMNR_CONTENTS TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$LOGMNR_PARAMETERS TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$LOGFILE TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$ARCHIVED_LOG TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$ARCHIVE_DEST_STATUS TO {username} CONTAINER=ALL;\nGRANT SELECT ON V_$TRANSACTION TO {username} CONTAINER=ALL;\n</code></pre> <p>Replace <code>{username}</code> with the actual username being used for the connection.</p>"},{"location":"connectors/source/oracle/#steps","title":"Steps","text":"<p>Go to: Sources -&gt; Create New then select the Oracle connector and Continue</p> <p>In the Credentials sections fill in the required information.</p>"},{"location":"connectors/source/oracle/#host","title":"<code>host</code>","text":"<ul> <li>Description: The hostname or IP address of the Oracle database server.</li> <li>Type: <code>string</code></li> <li>Example: <code>oracle-db-server.example.com</code></li> </ul>"},{"location":"connectors/source/oracle/#port","title":"<code>port</code>","text":"<ul> <li>Description: The port number on which the Oracle database server is listening.</li> <li>Type: <code>integer</code></li> <li>Default: <code>1521</code> (default port for Oracle database)</li> <li>Example: <code>1521</code></li> </ul>"},{"location":"connectors/source/oracle/#user","title":"<code>user</code>","text":"<ul> <li>Description: The username used to connect to the Oracle database.</li> <li>Type: <code>string</code></li> <li>Example: <code>popsink_user</code></li> </ul>"},{"location":"connectors/source/oracle/#password","title":"<code>password</code>","text":"<ul> <li>Description: The password associated with the specified user for authentication.</li> <li>Type: <code>string</code></li> <li>Example: <code>p@ssw0rd123</code></li> </ul>"},{"location":"connectors/source/oracle/#database","title":"<code>database</code>","text":"<ul> <li>Description: The specific Oracle database (also referred to as a service name) to connect to.</li> <li>Type: <code>string</code></li> <li>Example: <code>ORCL</code></li> </ul>"},{"location":"connectors/source/oracle/#server-name","title":"<code>server name</code>","text":"<ul> <li>Description: A logical name that identifies the Oracle server instance in Popsink, which can be useful for distinguishing between multiple sources.</li> <li>Type: <code>string</code></li> <li>Example: <code>oracle_source_01</code></li> </ul>"},{"location":"connectors/source/oracle/#server-id","title":"<code>server id</code>","text":"<ul> <li>Description: A unique numeric identifier for the server instance. This is used by the connector for identifying itself to the database, which is particularly important for databases with multiple replicas.</li> <li>Type: <code>integer</code></li> <li>Constraints: Must be a positive integer and unique across all Oracle Source Connectors.</li> <li>Example: <code>5501</code></li> </ul> <p>You can use Check Credentials at any moment to verify the validity of your inputs.</p> <p>Once the validity check has passed, the next step is the standard Informations page where you may give the connector a name and select which of your teams should own this connector.</p> <p>Create the connector and you are now done. The connector may take a few minutes to synchronize with the source database.</p>"},{"location":"connectors/source/oracle/#conclusion","title":"Conclusion","text":"<p>The Oracle Source Connector is an essential component for creating a reliable data pipeline between Oracle databases and Popsink. By following the guidelines provided in this document, you can ensure a successful setup and enjoy a robust, real-time data integration experience.</p>"},{"location":"connectors/source/postgres/","title":"Postgres Source","text":"<p>The Postgres Source Connector is a powerful and efficient solution designed to facilitate seamless data integration between your PostgreSQL databases and Popsink. This connector helps you synchronize with PostgreSQL in real-time, ensuring that your target systems remain updated with the latest information in real-time, driving business intelligence, analytics, and operational efficiency.</p>"},{"location":"connectors/source/postgres/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Your Postgres should be in <code>logical</code> mode (use <code>SHOW wal_level</code>). More info here.</p> </li> <li> <p>A user with <code>REPLICATION</code> rights on the tables you wish to connect to. One way to do this is (for others, check here):</p> </li> </ul> <pre><code>CREATE ROLE replication_role REPLICATION;\nGRANT replication_role TO &lt;your_user&gt;;\n</code></pre> <ul> <li> <p>Are you using PostgreSQL on Heroku? Here\u2019s a great guide to migrating.</p> </li> <li> <p>Each table should have is <code>REPLICA IDENTITY</code> set to <code>FULL</code></p> </li> </ul> <pre><code>ALTER TABLE mytable REPLICA IDENTITY FULL\n</code></pre> <ul> <li>You have to create publications for your tables</li> </ul> <pre><code>CREATE PUBLICATION popsink FOR TABLE &lt;your table list here&gt;;\n</code></pre> <ul> <li>The user should have the rights to list tables.</li> </ul>"},{"location":"connectors/source/postgres/#key-features","title":"Key Features","text":"<ul> <li> <p>Real-time Change Data Capture (CDC): The Postgres Source Connector employs a CDC mechanism using the native PostgreSQL logical decoding feature, capturing and streaming changes (inserts, updates, and deletes) as they occur in your database.</p> </li> <li> <p>Schema Evolution and Compatibility: This connector supports schema evolution, automatically detecting changes in the PostgreSQL database schema and adapting the data stream accordingly.</p> </li> <li> <p>Fault-tolerant and Scalable: The Postgres Source Connector is built with fault tolerance and scalability in mind. It is capable of resuming data replication from the last known offset in case of failures, ensuring data consistency and minimal downtime.</p> </li> <li> <p>Initial Load: The connector automatically performs an initial full table load.</p> </li> <li> <p>Advanced Filtering: The Postgres Source Connector provides a range of filtering options, including table and schema filters, allowing you to selectively replicate specific tables and schemas based on your needs.</p> </li> </ul>"},{"location":"connectors/source/postgres/#security","title":"Security","text":"<p>The connector supports SSL/TLS encryption for secure communication between the connector and your PostgreSQL database.</p>"},{"location":"connectors/source/salesforce/","title":"Salesforce Source","text":"<p>The Salesforce Source Connector integrates with Salesforce, a leading cloud-based Customer Relationship Management (CRM) platform. Salesforce offers a comprehensive suite of applications for sales, customer service, marketing automation, analytics, and application development. This connector enables real-time extraction and streaming of data from various Salesforce objects, including accounts, contacts, leads, opportunities, custom objects, and more. It supports both bulk and incremental data synchronization, allowing for efficient data transfer and up-to-date information flows. The Salesforce connector is particularly valuable for organizations looking to centralize their customer data, perform advanced analytics, create 360-degree customer views, or integrate Salesforce data with other business systems. It enables data-driven decision making across departments by making Salesforce data readily available for business intelligence, machine learning, and other data processing pipelines.</p>"},{"location":"connectors/source/salesforce/#permissions","title":"Permissions","text":"<ul> <li>To display objects</li> <li>To display attributes of objects</li> <li>To list and get records</li> <li>To list, read and create PushTopic</li> </ul>"},{"location":"connectors/source/snowflake/","title":"Snowflake source","text":"<p>The Snowflake Source integration in PopSink allows you to seamlessly ingest data from a Snowflake database into PopSink pipelines. With this connector, you can extract structured data for processing, transformation, and further downstream operations.</p>"},{"location":"connectors/source/snowflake/#prerequisites","title":"Prerequisites","text":"<p>The table should be configure with : <pre><code>CHANGE_TRACKING = TRUE\n</code></pre></p>"},{"location":"connectors/source/webhook/","title":"Webhook Source","text":"<p>The Webhook Source Connector allows you to directly send data to Popsink using webhooks. It is the most efficient way to build a direct integration between a streaming service and Popsink. Start by creating a connector then you will be able to register topics/schemas to send data to using you application.</p>"},{"location":"connectors/target/airtable/","title":"Airtable Target","text":"<p>The Airtable Target Connector facilitates seamless integration between Popsink and Airtable, a cloud-based software platform that combines the functionality of a database with the visual interface of a spreadsheet. This connector enables streaming data from Popsink directly into Airtable bases, tables, and fields. It supports both batch updates and near real-time data synchronization, automatically handling data mapping and field creation or updates within Airtable. The Airtable connector is particularly valuable for organizations looking to maintain flexible, visually intuitive databases that can be easily modified and shared across teams. It enables data teams to leverage Airtable's unique features such as linked records, attachments, and customizable views, while keeping data up-to-date with information from various sources. This connector is ideal for use cases involving project management, inventory tracking, customer relationship management, or any scenario where a highly customizable, user-friendly database is required. It allows businesses to combine the power of structured data pipelines with the ease of use and collaboration features of Airtable, making it especially useful for teams that need to quickly adapt their data structures to changing business needs.</p>"},{"location":"connectors/target/application/","title":"Application Target","text":"<p>The Application Target Connector allows you to consume data from Popsink using Python, Node, Go, Java or other programming languages. It is the most efficient way to build a direct integration between your application and Popsink. Start by creating a connector then you will be able to subscribe to existing topics/schemas to receive data in your application.</p>"},{"location":"connectors/target/bigquery/","title":"BigQuery Target","text":"<p>The BigQuery Target Connector enables seamless integration with Google BigQuery, a fully-managed, serverless data warehouse that enables super-fast SQL queries using the processing power of Google's infrastructure. This connector allows you to stream data from Popsink directly into BigQuery tables, supporting both batch and real-time data ingestion. It automatically handles schema mapping, data type conversion, and can create or update tables as needed. The BigQuery connector is particularly useful for organizations looking to perform large-scale data analytics, run complex queries on massive datasets, or combine streaming data with historical data for comprehensive business intelligence. It enables data teams to leverage BigQuery's powerful analytics capabilities while maintaining low-latency data pipelines from various sources through Popsink.</p>"},{"location":"connectors/target/bigquery/#permissions","title":"Permissions","text":"<ul> <li>bigquery.tables.get</li> <li>bigquery.tables.create</li> <li>bigquery.tables.delete</li> <li>bigquery.tables.updateData</li> <li>bigquery.tables.update</li> <li>bigquery.jobs.create</li> </ul>"},{"location":"connectors/target/clickhouse/","title":"ClickHouse Target","text":"<p>Welcome to the ClickHouse Target Connector documentation. This guide is designed to help you effectively integrate and utilize ClickHouse as a data sink for your CDC (Change Data Capture) data pipelines. The ClickHouse Target Connector allows you to seamlessly transfer data from your tools, applications and services to a ClickHouse database, leveraging its high performance for analytics and large-scale data storage.</p>"},{"location":"connectors/target/clickhouse/#overview","title":"Overview","text":"<p>ClickHouse is an open-source columnar database management system that is optimized for OLAP (Online Analytical Processing) scenarios. It is designed to process billions of rows and gigabytes of data per second with low latency. Using the ClickHouse Target Connector, you can push data from various sources into your ClickHouse instance, making it available for analysis and reporting.</p>"},{"location":"connectors/target/clickhouse/#features","title":"Features","text":"<ul> <li>High Performance: Utilizes ClickHouse's capabilities for handling large volumes of data with high insertion speeds.</li> <li>Real-time Ingestion: Popsink sinks data in real-time to your Clickhouse tables.</li> <li>Data Consistency: Includes features for handling duplicates and ensuring data consistency.</li> <li>Incremental Writes: Popsink leverages Change Data Capture and ClickHouse\u2019s ReplacingMergeTree to write incremental updates and deletes to your tables. You can read more about forcing deduplication in the FINAL modifier documentation.</li> </ul>"},{"location":"connectors/target/clickhouse/#prerequisites","title":"Prerequisites","text":"<p>Before setting up the ClickHouse Target Connector, ensure you have the following:</p> <ul> <li>A running ClickHouse server accessible from the service.</li> <li>A user with appropriate credentials and permissions to access and write to the ClickHouse database. Should you wish to create a new user, here is how you could do so:</li> </ul> <pre><code>CREATE ROLE POPSINK_ROLE;\nGRANT SELECT, CREATE, SHOW, INSERT  ON &lt;my_database&gt;.* TO POPSINK_ROLE;\n\nCREATE USER &lt;popsink_user&gt; IDENTIFIED WITH sha256_password BY '&lt;my_password&gt;'\nGRANT POPSINK_ROLE TO &lt;popsink_user&gt;;\n</code></pre>"},{"location":"connectors/target/clickhouse/#configuration","title":"Configuration","text":"<p>To configure the ClickHouse Target Connector, follow these steps:</p> <ul> <li>Username: if you followed the Prerequisites, this will be <code>&lt;popsink_user&gt;</code>. Otherwise use the username you wish to use.</li> <li>Password: if you followed the Prerequisites, this will be <code>&lt;my_password&gt;</code>. Otherwise use the corresponding password for the username in the previous step.</li> <li>Host: You can find the Host in the \u201cConnect\u201d option of your Clickhouse Console, it should look like this: <code>6dw0f8sj4.us-east-1.aws.clickhouse.cloud</code></li> <li>Port: For Clickhouse Cloud this is generally <code>8443</code></li> <li>Database Name: if you followed the Prerequisites, this will be <code>&lt;my_database&gt;</code>. Otherwise specify the name of the database you wish to write in.</li> </ul>"},{"location":"connectors/target/cosmosdb/","title":"CosmosDB Target","text":"<p>The CosmosDB Target Connector facilitates seamless integration with Azure Cosmos DB, Microsoft's globally distributed, multi-model database service. This connector enables real-time streaming of data from Popsink into Cosmos DB containers, supporting various APIs including SQL, MongoDB, Cassandra, Gremlin, and Table. It handles automatic schema mapping, data type conversion, and can create or update containers as needed. The CosmosDB connector is particularly valuable for applications requiring low-latency data access at global scale, such as IoT telemetry, real-time analytics, and personalization engines. It allows organizations to leverage Cosmos DB's multi-region writes, automatic indexing, and flexible consistency models while maintaining efficient data pipelines from diverse sources through Popsink. This connector is ideal for businesses looking to build highly responsive and globally distributed applications with real-time data synchronization capabilities.</p>"},{"location":"connectors/target/deltalake/","title":"DeltaLake Target","text":"<p>The DeltaLake Target Connector enables seamless integration with Delta Lake, an open-source storage layer that brings ACID transactions to Apache Spark and big data workloads. This connector allows you to stream data from Popsink directly into Delta Lake tables, supporting both batch and real-time data ingestion. It handles schema evolution, data type conversion, and can automatically create or update tables as needed. The DeltaLake connector is particularly useful for organizations looking to build reliable data lakes, implement lakehouse architectures, or enhance their existing Spark-based data pipelines. It enables data teams to leverage Delta Lake's key features such as ACID transactions, scalable metadata handling, time travel (data versioning), and unified batch and streaming data processing. This connector is ideal for businesses requiring a robust and performant solution for large-scale data analytics, machine learning, and data science workflows while ensuring data reliability and consistency.</p>"},{"location":"connectors/target/hubspot/","title":"Hubspot Target","text":"<p>The Hubspot Target Connector enables seamless integration between Popsink and HubSpot, a leading inbound marketing, sales, and customer service platform. This connector allows you to stream data from Popsink directly into various HubSpot objects such as contacts, companies, deals, tickets, and custom objects. It supports both batch updates and real-time data synchronization, automatically handling data mapping and property creation or updates within HubSpot. The Hubspot connector is particularly valuable for organizations looking to enrich their CRM data with information from other systems, automate marketing and sales processes based on real-time data insights, or maintain a unified customer view across multiple platforms. It enables marketing, sales, and customer service teams to leverage up-to-date data for personalized engagement, lead scoring, and customer lifecycle management, while maintaining efficient data flows from various sources through Popsink.</p>"},{"location":"connectors/target/hudi/","title":"Hudi Target","text":"<p>The Hudi Target Connector facilitates integration with Apache Hudi (Hadoop Upserts Deletes and Incrementals), an open-source data management framework for incrementally processing and managing big data. This connector enables streaming data from Popsink directly into Hudi datasets, supporting both batch and near real-time data ingestion. It handles upserts, deletes, and incremental data processing efficiently, automatically managing schema evolution and data consistency. The Hudi connector is particularly useful for organizations building large-scale data lakes or implementing a lakehouse architecture, as it combines the flexibility of a data lake with database-like ACID transactions and incremental processing capabilities. It enables data teams to implement change data capture (CDC), create time travel queries, and perform efficient snapshot and incremental data retrieval. This connector is ideal for use cases requiring strict data quality and consistency, such as regulatory compliance, audit trails, or building scalable, real-time data pipelines while maintaining historical data versions.</p>"},{"location":"connectors/target/ibmi/","title":"IBMi (AS/400) Target","text":"<p>The IBMi (AS/400) Target Connector enables seamless integration between Popsink and IBM i systems, formerly known as AS/400 and iSeries. This connector allows you to stream data from Popsink directly into IBMi databases, physical files, or data areas. It supports both batch updates and near real-time data synchronization, automatically handling data type conversion and file or table creation or updates within the IBMi environment. The IBMi connector is particularly valuable for organizations looking to modernize their legacy systems while maintaining critical business operations on the IBMi platform. It enables real-time data integration between modern cloud or on-premises applications and IBMi systems, facilitating scenarios such as operational data stores, data warehousing, or hybrid cloud architectures. This connector is ideal for businesses in industries like manufacturing, finance, and healthcare that rely on IBMi for core operations but need to integrate with contemporary data ecosystems, enabling them to leverage the reliability and security of IBMi while benefiting from modern data streaming and processing capabilities.</p>"},{"location":"connectors/target/iceberg/","title":"Iceberg Target","text":"<p>The Iceberg Target Connector enables seamless integration with Apache Iceberg, an open table format designed for huge analytic datasets. This connector allows you to stream data from Popsink directly into Iceberg tables, supporting both batch and near real-time data ingestion. It handles schema evolution, data type conversion, and can automatically create or update tables as needed. The Iceberg connector is particularly useful for organizations building large-scale data lakes or data warehouses that require high performance, flexibility, and reliability. It enables data teams to leverage Iceberg's key features such as ACID transactions, time travel queries, partition evolution, and schema evolution without affecting concurrent reads. This connector is ideal for use cases involving complex analytics, machine learning pipelines, or multi-function analytics on petabyte-scale datasets. It allows businesses to maintain data consistency and performance at scale while integrating data from various sources through Popsink, making it especially valuable for cloud data platforms and organizations transitioning to modern data architectures.</p>"},{"location":"connectors/target/mongodb/","title":"MongoDB Target","text":"<p>The MongoDB Target Connector allows you to stream data from Popsink into a MongoDB database. This connector is ideal for applications that require a flexible, scalable NoSQL database to store and manage large volumes of semi-structured or unstructured data. By configuring this connector, you can seamlessly integrate Popsink data with your MongoDB collections, enabling real-time updates and synchronization. It's particularly useful for developers and data engineers who need to build dynamic applications, perform real-time analytics, or maintain a consistent data pipeline across various sources. The integration supports various data formats and can handle high throughput, ensuring efficient and reliable data flow into your MongoDB database.</p>"},{"location":"connectors/target/mssql/","title":"MSSQL Target","text":"<p>The SQL Server Target Connector enables you to stream data from Popsink directly into a SQL Server database. This connector is ideal for scenarios where you need to store and manage relational data in a SQL Server environment. It supports various data formats and allows for real-time updates to SQL Server tables. By configuring this connector, you can ensure that your SQL Server database is continuously synchronized with data from Popsink, facilitating data integration, reporting, and analysis. It's particularly valuable for applications that rely on structured data and require robust querying capabilities provided by SQL Server.</p>"},{"location":"connectors/target/mssql/#sql-server-target-connection-setup-guide","title":"\ud83d\uddc3\ufe0f SQL Server Target Connection Setup Guide","text":"<p>This guide provides step-by-step instructions to configure a SQL Server as a target connection in Popsink, allowing you to stream and load processed data into your Microsoft SQL Server instance.</p>"},{"location":"connectors/target/mssql/#prerequisites","title":"\u2705 Prerequisites","text":"<p>Before configuring the target, ensure you have the following:</p> <ul> <li>A running Microsoft SQL Server instance (on-premise or cloud-hosted)</li> <li>A user account with <code>CREATE TABLE</code>, <code>INSERT</code> and <code>UPDATE</code> privileges on the target database</li> <li>Network access from Popsink to the SQL Server host (ensure firewall &amp; security group rules allow inbound traffic)</li> </ul>"},{"location":"connectors/target/mssql/#connection-parameters","title":"\ud83d\udd0c Connection Parameters","text":"<p>When setting up the target in Popsink, you'll need to provide the following:</p> Parameter Description Host The IP address or DNS name of your SQL Server (e.g., <code>sql.mycompany.com</code>) Port The port number used by SQL Server (default: <code>1433</code>) Database Name of the target database where data will be written Username SQL Server login with appropriate privileges Password Password for the specified username"},{"location":"connectors/target/mssql/#setting-up-the-connection-in-popsink","title":"\ud83c\udfd7\ufe0f Setting Up the Connection in Popsink","text":"<ol> <li> <p>Navigate to Targets    In the Popsink dashboard, go to Connections &gt; Targets &gt; Add New Target.</p> </li> <li> <p>Choose SQL Server    Select Microsoft SQL Server from the list of target types.</p> </li> <li> <p>Enter Connection Details    Fill in the form using the connection parameters listed above.</p> </li> <li> <p>Test Connection    Click Test Connection to verify that Popsink can reach your SQL Server.</p> </li> <li> <p>Save    Once validated, click Save. You can now use this target in your pipelines.</p> </li> </ol>"},{"location":"connectors/target/mssql/#table-schema-considerations","title":"\ud83e\udde9 Table &amp; Schema Considerations","text":"<ul> <li>Popsink supports automatic table creation.</li> <li>Source data models must have primary keys if upserts are enabled.</li> </ul>"},{"location":"connectors/target/mssql/#security-notes","title":"\ud83d\udd10 Security Notes","text":"<ul> <li>Ensure the SQL Server user has least privilege access needed to insert and update data only in the required schema/tables.</li> <li>For cloud-hosted SQL Server (e.g., Azure SQL Database), ensure Popsink IPs are whitelisted.</li> </ul>"},{"location":"connectors/target/mssql/#troubleshooting","title":"\ud83d\udee0\ufe0f Troubleshooting","text":"Issue Suggested Resolution Cannot connect to host Verify firewall rules, DNS resolution, and network reachability Login failed for user Confirm username/password and SQL Server authentication mode"},{"location":"connectors/target/mysql/","title":"MySQL Target","text":"<p>The MySQL Target Connector allows you to transfer data from Popsink into a MySQL database. This connector is well-suited for managing and analyzing structured data using MySQL's relational database capabilities. It supports real-time and batch data updates, ensuring that your MySQL tables are kept current with data from Popsink. You can configure the connector to handle different data formats and specify how data should be mapped to your database schema. This integration is ideal for applications requiring reliable, scalable database solutions for transaction management, reporting, and data analytics.</p>"},{"location":"connectors/target/oracle/","title":"Oracle Target","text":"<p>The Oracle Target Connector enables seamless data transfer from Popsink into an Oracle Database. This connector is ideal for managing and analyzing structured data within Oracle's robust relational database system. It supports both real-time and batch data updates, allowing you to keep your Oracle tables synchronized with Popsink data. The connector facilitates integration by mapping data to your Oracle schema and handling various data formats. This is particularly valuable for organizations using Oracle for enterprise applications, data warehousing, or complex analytics that require reliable and scalable database solutions.</p>"},{"location":"connectors/target/pinecone/","title":"Pinecone Target","text":"<p>The Pinecone Target Connector allows you to stream data from Popsink into Pinecone, a vector database designed for managing and searching high-dimensional data. This connector is ideal for use cases involving machine learning models, recommendation systems, and semantic search applications. By configuring this connector, you can efficiently integrate Popsink data into Pinecone, facilitating real-time updates and ensuring that your vector database remains current with the latest data. This integration supports various data formats and allows for efficient management of vector embeddings, enhancing your ability to perform advanced search and retrieval operations.</p>"},{"location":"connectors/target/postgres/","title":"Postgres Target","text":"<p>The Postgres Target Connector enables efficient integration between Popsink and PostgreSQL, a powerful, open-source object-relational database system. This connector allows you to stream data from Popsink directly into PostgreSQL tables, supporting both batch updates and real-time data synchronization. It automatically handles schema mapping, data type conversion, and can create or update tables as needed. The Postgres connector is particularly valuable for organizations looking to maintain transactional databases, power analytical applications, or serve as a backend for web and mobile applications. It enables data teams to leverage PostgreSQL's advanced features such as JSON support, full-text search, and extensibility through custom functions and data types. This connector is ideal for use cases requiring strong data consistency, complex queries, and support for both structured and semi-structured data. It allows businesses to maintain up-to-date PostgreSQL databases with data flowing from various sources through Popsink, making it suitable for a wide range of applications from small-scale projects to large enterprise systems requiring robust and reliable data storage and retrieval.</p>"},{"location":"connectors/target/pubsub/","title":"Pubsub Target","text":"<p>The Pubsub Target Connector enables data streaming from Popsink to a Pub/Sub messaging system, such as Google Cloud Pub/Sub or a similar publish-subscribe service. This connector facilitates real-time data distribution by allowing you to publish messages or events to a specific topic or channel within the Pub/Sub system. By configuring this connector, you can ensure that data from Popsink is delivered in near real-time to subscribers or downstream systems. It's particularly useful for applications requiring asynchronous data processing, event-driven architectures, or scalable message distribution.</p>"},{"location":"connectors/target/slack/","title":"Slack Target","text":"<p>The Slack Target Connector enables you to send data from Popsink directly into Slack channels. This integration is useful for keeping teams informed in real time by streaming relevant data, alerts, or updates into their Slack workspace. You can configure the connector to post messages, update existing messages, or trigger specific Slack workflows based on the incoming data. It's particularly valuable for teams that use Slack for collaboration, incident management, or real-time communication.</p>"},{"location":"connectors/target/snowflake/","title":"Snowflake Target","text":"<p>The Snowflake Target Connector is a robust tool designed to facilitate the seamless integration of Change Data Capture (CDC) updates into Snowflake data warehouses. Leveraging Snowpipe streaming functionality, this connector efficiently streams CDC updates into Snowflake, where they are written as inserts. Subsequently, a materialized view is employed to construct a copy of the source table, ensuring real-time data replication.</p>"},{"location":"connectors/target/snowflake/#key-features","title":"Key Features","text":"<ul> <li>CDC Streaming: Utilizes Snowpipe streaming to capture real-time changes from the source system.</li> <li>Insert Operation: Writes CDC updates as inserts into the target Snowflake database, preserving data integrity.</li> <li>Materialized View: Constructs a materialized view to mirror the source table, enabling easy access to replicated data.</li> <li>Time Travel Support: Retains historical data for time travel queries, facilitating data analysis and auditing.</li> <li>Private Authentication: Relies on Snowflake's private authentication mechanism for secure data transmission.</li> </ul>"},{"location":"connectors/target/snowflake/#getting-started","title":"Getting Started","text":"<p>To begin using the Snowflake Target Connector, follow these steps:</p> <ol> <li>Prerequisites:</li> <li>A Snowflake account where you whish to sync your data</li> <li> <p>A key pair (no pass phrase) for authentication with Snowflake <pre><code>openssl genrsa 2048 | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8 -nocrypt\n\nopenssl rsa -in rsa_key.p8 -pubout -out rsa_key.pub\n</code></pre></p> </li> <li> <p>In snowflake update user with the public key.</p> </li> </ol> <pre><code>ALTER USER {user} SET RSA_PUBLIC_KEY='{public_key}';\n</code></pre> <ul> <li>Copy the private key without the header and footer. <pre><code>-----BEGIN PRIVATE KEY-----\n-----END PRIVATE KEY-----\n</code></pre></li> <li>Configuration:</li> <li>In the Target section, select the Snowflake connector</li> <li>Fill in the required configuration, including the Snowflake key</li> </ul>"},{"location":"connectors/target/snowflake/#conclusion","title":"Conclusion","text":"<p>The Snowflake Target Connector offers a reliable and efficient solution for streaming CDC updates into Snowflake data warehouses. By leveraging Snowpipe streaming and materialized views, it enables seamless replication of real-time data while preserving historical information for analysis and auditing purposes. With built-in support for Snowflake's private authentication mechanism, it ensures secure and reliable data transmission, making it an indispensable tool for data integration workflows.</p>"},{"location":"connectors/target/teradata/","title":"Teradata Target","text":"<p>The Teradata Target Connector for PopSink enables seamless data ingestion from various sources into a Teradata database. This connector ensures efficient, reliable, and scalable data transfers while supporting batch and streaming ingestion patterns.</p>"},{"location":"connectors/target/teradata/#prerequisites","title":"Prerequisites","text":"<p>Before configuring the Teradata Target Connector, ensure the following:</p> <ul> <li>A running Teradata database instance.</li> <li>Appropriate database credentials with required privileges.</li> <li>Network connectivity between PopSink and the Teradata instance.</li> </ul>"},{"location":"connectors/target/webhook/","title":"Webhook Target","text":"<p>The Webhook Target Connector allows you to receive data from Popsink over a defined webhook. It is the most efficient way to build a direct integration between a streaming service and Popsink. Wou will be able to select existing streams from your Popsink catalog to send them to this webhook link.</p>"},{"location":"on-prem/api/","title":"Api","text":""},{"location":"on-prem/api/#fastapi-010","title":"FastAPI 0.1.0","text":""},{"location":"on-prem/api/#servers","title":"Servers","text":"Description URL /api /api"},{"location":"on-prem/api/#users","title":"users","text":""},{"location":"on-prem/api/#get-users","title":"GET /users","text":"<p>Users:List Users</p> Description <p>Get all users.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"09ff20de-fe80-423b-a59d-2af7f094ffc3\",\n            \"email\": \"derp@meme.org\",\n            \"is_active\": true,\n            \"is_superuser\": true,\n            \"is_verified\": true,\n            \"active_env_id\": null\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/UserRead\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[UserRead]\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-usersmechange-password","title":"POST /users/me/change-password","text":"<p>Users:Change Password</p> Description <p>Change the current user's password.</p> <p>Args:     password_data: Password change data     user: Current authenticated user</p> <p>Returns:     Updated user information</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"old_password\": \"string\",\n    \"new_password\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"old_password\": {\n            \"type\": \"string\",\n            \"title\": \"Old Password\"\n        },\n        \"new_password\": {\n            \"type\": \"string\",\n            \"title\": \"New Password\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"old_password\",\n        \"new_password\"\n    ],\n    \"title\": \"UserPasswordChange\",\n    \"description\": \"Change user password.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"3e8d6b73-9d01-4d45-bd8b-e77ac16b97a7\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-usersexport-all","title":"GET /users/export-all","text":"<p>Export all users, envs, teams, and their relations</p> Description <p>Export all users, environments, teams, and their relationships as a structured data object. Requires admin privileges.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"users\": [\n        {\n            \"id\": \"7d1b062c-97db-4295-9979-2268b98debc0\",\n            \"email\": \"derp@meme.org\",\n            \"is_active\": true,\n            \"is_superuser\": true,\n            \"is_verified\": true,\n            \"active_env_id\": null\n        }\n    ],\n    \"envs\": [\n        {\n            \"name\": \"string\",\n            \"use_retention\": true,\n            \"retention_configuration\": null,\n            \"id\": \"d7d8aa65-cc2c-4148-8e18-7336ad66e787\"\n        }\n    ],\n    \"teams\": [\n        {\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"env_id\": null,\n            \"id\": \"a4f1b344-427f-42f1-851b-221ac1dfeef2\"\n        }\n    ],\n    \"env_members\": [\n        {\n            \"user_id\": \"1f3b1828-3390-4bfd-810e-810d62b183eb\",\n            \"env_id\": \"4f75af56-deb1-40ef-9455-79e716940bf5\",\n            \"admin\": true\n        }\n    ],\n    \"team_members\": [\n        {\n            \"user_id\": \"e336ab40-6d82-48a8-9e5c-4b93c13c0498\",\n            \"team_id\": \"0746b8ad-244a-4853-97ab-beaa9a48d836\",\n            \"admin\": true\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"users\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/UserExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Users\",\n            \"description\": \"List of all users in the system\"\n        },\n        \"envs\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Envs\",\n            \"description\": \"List of all environments in the system\"\n        },\n        \"teams\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Teams\",\n            \"description\": \"List of all teams in the system\"\n        },\n        \"env_members\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvMemberExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Env Members\",\n            \"description\": \"List of all user-environment membership relationships\"\n        },\n        \"team_members\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamMemberExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Team Members\",\n            \"description\": \"List of all user-team membership relationships\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"users\",\n        \"envs\",\n        \"teams\",\n        \"env_members\",\n        \"team_members\"\n    ],\n    \"title\": \"ExportData\",\n    \"description\": \"Complete data export model containing all system entities and their relationships.\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-usersimport-all","title":"POST /users/import-all","text":"<p>Import all users, envs, teams, and their relations</p> Description <p>Import all users, environments, teams, and their relationships from a structured data object. Requires admin privileges. This will overwrite all existing data.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"users\": [\n        {\n            \"id\": \"706718f4-9d57-4e13-afaf-3ed04ba95332\",\n            \"email\": \"derp@meme.org\",\n            \"is_active\": true,\n            \"is_superuser\": true,\n            \"is_verified\": true,\n            \"active_env_id\": null\n        }\n    ],\n    \"envs\": [\n        {\n            \"name\": \"string\",\n            \"use_retention\": true,\n            \"retention_configuration\": null,\n            \"id\": \"abb8f294-3c1f-4950-a8c8-3ce40d5ab30a\"\n        }\n    ],\n    \"teams\": [\n        {\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"env_id\": null,\n            \"id\": \"b5a81603-23f9-453f-947c-5f56c4180e9c\"\n        }\n    ],\n    \"env_members\": [\n        {\n            \"user_id\": \"0b4ef1d5-c252-44cf-a367-044b72a5558b\",\n            \"env_id\": \"d21d328c-856f-43d4-9d4b-cdc8893458ee\",\n            \"admin\": true\n        }\n    ],\n    \"team_members\": [\n        {\n            \"user_id\": \"12b6e1fa-ac31-4d44-bdd3-34b551aa6a65\",\n            \"team_id\": \"e2366f21-512e-4549-9b53-a0d0470b870b\",\n            \"admin\": true\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"users\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/UserExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Users\",\n            \"description\": \"List of all users in the system\"\n        },\n        \"envs\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Envs\",\n            \"description\": \"List of all environments in the system\"\n        },\n        \"teams\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Teams\",\n            \"description\": \"List of all teams in the system\"\n        },\n        \"env_members\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvMemberExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Env Members\",\n            \"description\": \"List of all user-environment membership relationships\"\n        },\n        \"team_members\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamMemberExport\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Team Members\",\n            \"description\": \"List of all user-team membership relationships\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"users\",\n        \"envs\",\n        \"teams\",\n        \"env_members\",\n        \"team_members\"\n    ],\n    \"title\": \"ExportData\",\n    \"description\": \"Complete data export model containing all system entities and their relationships.\"\n}\n</code></pre> <p> Response 204 No Content </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-usersme","title":"GET /users/me","text":"<p>Users:Current User</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"7246f1e4-4f5a-448e-9da9-3683ae2d899d\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 401 Unauthorized </p>"},{"location":"on-prem/api/#patch-usersme","title":"PATCH /users/me","text":"<p>Users:Patch Current User</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"password\": null,\n    \"email\": null,\n    \"is_active\": null,\n    \"is_superuser\": null,\n    \"is_verified\": null,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"password\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Password\"\n        },\n        \"email\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Active\"\n        },\n        \"is_superuser\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Superuser\"\n        },\n        \"is_verified\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Verified\"\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"UserSafeUpdate\",\n    \"description\": \"Update a user without password.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"6698c168-d7b5-4203-b96e-e074eed13491\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 401 Unauthorized </p> <p> Response 400 Bad Request </p> application/json <pre><code>{\n    \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}\n</code></pre> <pre><code>{\n    \"detail\": {\n        \"code\": \"UPDATE_USER_INVALID_PASSWORD\",\n        \"reason\": \"Password should beat least 3 characters\"\n    }\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ErrorModel\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-usersid","title":"GET /users/{id}","text":"<p>Users:User</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"fdf086b7-d8b8-483f-a0be-613001c399d0\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 401 Unauthorized </p> <p> Response 403 Forbidden </p> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#patch-usersid","title":"PATCH /users/{id}","text":"<p>Users:Patch User</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"password\": null,\n    \"email\": null,\n    \"is_active\": null,\n    \"is_superuser\": null,\n    \"is_verified\": null,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"password\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Password\"\n        },\n        \"email\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Active\"\n        },\n        \"is_superuser\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Superuser\"\n        },\n        \"is_verified\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Verified\"\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"UserSafeUpdate\",\n    \"description\": \"Update a user without password.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"5f22b9b8-f717-4e3d-8cca-11cac23e011d\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 401 Unauthorized </p> <p> Response 403 Forbidden </p> <p> Response 404 Not Found </p> <p> Response 400 Bad Request </p> application/json <pre><code>{\n    \"detail\": \"UPDATE_USER_EMAIL_ALREADY_EXISTS\"\n}\n</code></pre> <pre><code>{\n    \"detail\": {\n        \"code\": \"UPDATE_USER_INVALID_PASSWORD\",\n        \"reason\": \"Password should beat least 3 characters\"\n    }\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ErrorModel\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#delete-usersid","title":"DELETE /users/{id}","text":"<p>Users:Delete User</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>id</code> path string No <p> Response 204 No Content </p> <p> Response 401 Unauthorized </p> <p> Response 403 Forbidden </p> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#auth","title":"auth","text":""},{"location":"on-prem/api/#post-authjwtlogin","title":"POST /auth/jwt/login","text":"<p>Auth:Jwt.Login</p> <p>Request body</p> application/x-www-form-urlencoded <p><pre><code>{\n    \"grant_type\": null,\n    \"username\": \"string\",\n    \"password\": \"string\",\n    \"scope\": \"string\",\n    \"client_id\": null,\n    \"client_secret\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"grant_type\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"pattern\": \"^password$\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Grant Type\"\n        },\n        \"username\": {\n            \"type\": \"string\",\n            \"title\": \"Username\"\n        },\n        \"password\": {\n            \"type\": \"string\",\n            \"title\": \"Password\"\n        },\n        \"scope\": {\n            \"type\": \"string\",\n            \"title\": \"Scope\",\n            \"default\": \"\"\n        },\n        \"client_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Client Id\"\n        },\n        \"client_secret\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Client Secret\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"username\",\n        \"password\"\n    ],\n    \"title\": \"Body_auth_jwt_login_auth_jwt_login_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <pre><code>{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI\",\n    \"token_type\": \"bearer\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"access_token\": {\n            \"type\": \"string\",\n            \"title\": \"Access Token\"\n        },\n        \"token_type\": {\n            \"type\": \"string\",\n            \"title\": \"Token Type\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"access_token\",\n        \"token_type\"\n    ],\n    \"title\": \"BearerResponse\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <pre><code>{\n    \"detail\": \"LOGIN_BAD_CREDENTIALS\"\n}\n</code></pre> <pre><code>{\n    \"detail\": \"LOGIN_USER_NOT_VERIFIED\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ErrorModel\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-authjwtlogout","title":"POST /auth/jwt/logout","text":"<p>Auth:Jwt.Logout</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 401 Unauthorized </p>"},{"location":"on-prem/api/#post-authregister","title":"POST /auth/register","text":"<p>Register:Register</p> <p>Request body</p> application/json <p><pre><code>{\n    \"email\": \"derp@meme.org\",\n    \"password\": \"string\",\n    \"is_active\": null,\n    \"is_superuser\": true,\n    \"is_verified\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"password\": {\n            \"type\": \"string\",\n            \"title\": \"Password\"\n        },\n        \"is_active\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Is Verified\",\n            \"default\": false\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"email\",\n        \"password\"\n    ],\n    \"title\": \"UserCreate\",\n    \"description\": \"Create a user.\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"id\": \"82ce60ab-b59d-4fb1-88db-9c72e1a9526d\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <pre><code>{\n    \"detail\": \"REGISTER_USER_ALREADY_EXISTS\"\n}\n</code></pre> <pre><code>{\n    \"detail\": {\n        \"code\": \"REGISTER_INVALID_PASSWORD\",\n        \"reason\": \"Password should beat least 3 characters\"\n    }\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ErrorModel\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-authforgot-password","title":"POST /auth/forgot-password","text":"<p>Reset:Forgot Password</p> <p>Request body</p> application/json <p><pre><code>{\n    \"email\": \"derp@meme.org\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"email\"\n    ],\n    \"title\": \"Body_reset_forgot_password_auth_forgot_password_post\"\n}\n</code></pre> <p> Response 202 Accepted </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-authreset-password","title":"POST /auth/reset-password","text":"<p>Reset:Reset Password</p> <p>Request body</p> application/json <p><pre><code>{\n    \"token\": \"string\",\n    \"password\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"token\": {\n            \"type\": \"string\",\n            \"title\": \"Token\"\n        },\n        \"password\": {\n            \"type\": \"string\",\n            \"title\": \"Password\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"token\",\n        \"password\"\n    ],\n    \"title\": \"Body_reset_reset_password_auth_reset_password_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 400 Bad Request </p> application/json <pre><code>{\n    \"detail\": \"RESET_PASSWORD_BAD_TOKEN\"\n}\n</code></pre> <pre><code>{\n    \"detail\": {\n        \"code\": \"RESET_PASSWORD_INVALID_PASSWORD\",\n        \"reason\": \"Password should be at least 3 characters\"\n    }\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ErrorModel\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-authrequest-verify-token","title":"POST /auth/request-verify-token","text":"<p>Verify:Request-Token</p> <p>Request body</p> application/json <p><pre><code>{\n    \"email\": \"derp@meme.org\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"email\"\n    ],\n    \"title\": \"Body_verify_request_token_auth_request_verify_token_post\"\n}\n</code></pre> <p> Response 202 Accepted </p> application/json Schema of the response body <pre><code>\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-authverify","title":"POST /auth/verify","text":"<p>Verify:Verify</p> <p>Request body</p> application/json <p><pre><code>{\n    \"token\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"token\": {\n            \"type\": \"string\",\n            \"title\": \"Token\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"token\"\n    ],\n    \"title\": \"Body_verify_verify_auth_verify_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"e29ef00e-378e-44d0-a794-6f51f38c2073\",\n    \"email\": \"derp@meme.org\",\n    \"is_active\": true,\n    \"is_superuser\": true,\n    \"is_verified\": true,\n    \"active_env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\"\n        },\n        \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"title\": \"Email\"\n        },\n        \"is_active\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Active\",\n            \"default\": true\n        },\n        \"is_superuser\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Superuser\",\n            \"default\": false\n        },\n        \"is_verified\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Verified\",\n            \"default\": false\n        },\n        \"active_env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Active Env Id\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"email\",\n        \"active_env_id\"\n    ],\n    \"title\": \"UserRead\",\n    \"description\": \"Read a user.\"\n}\n</code></pre> <p> Response 400 Bad Request </p> application/json <pre><code>{\n    \"detail\": \"VERIFY_USER_BAD_TOKEN\"\n}\n</code></pre> <pre><code>{\n    \"detail\": \"VERIFY_USER_ALREADY_VERIFIED\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"additionalProperties\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ErrorModel\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#healthchecks","title":"healthchecks","text":""},{"location":"on-prem/api/#get-healthchecks","title":"GET /healthchecks","text":"<p>Healthchecks:Api</p> Description <p>Get the status of the api.</p> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\",\n            \"title\": \"Status\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"status\"\n    ],\n    \"title\": \"HealthCheck\",\n    \"description\": \"Healthcheck pydantic model.\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-healthchecksk8s","title":"GET /healthchecks/k8s","text":"<p>Healthchecks:K8S</p> Description <p>Get the status of kubernetes.</p> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\",\n            \"title\": \"Status\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"status\"\n    ],\n    \"title\": \"HealthCheck\",\n    \"description\": \"Healthcheck pydantic model.\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-healthchecksdb","title":"GET /healthchecks/db","text":"<p>Healthchecks:Db</p> Description <p>Get the status of the database.</p> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\",\n            \"title\": \"Status\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"status\"\n    ],\n    \"title\": \"HealthCheck\",\n    \"description\": \"Healthcheck pydantic model.\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-healthchecksdebug","title":"GET /healthchecks/debug","text":"<p>Healthchecks:Debug</p> Description <p>Display debugs infos.</p> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"header\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"header\": {\n            \"type\": \"object\",\n            \"title\": \"Header\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"header\"\n    ],\n    \"title\": \"Debug\",\n    \"description\": \"Debug model.\"\n}\n</code></pre>"},{"location":"on-prem/api/#probes","title":"probes","text":""},{"location":"on-prem/api/#get-livez","title":"GET /livez","text":"<p>Probes:Livez</p> Description <p>Get the liveness probe.</p> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\",\n            \"title\": \"Status\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"status\"\n    ],\n    \"title\": \"HealthCheck\",\n    \"description\": \"Healthcheck pydantic model.\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-readyz","title":"GET /readyz","text":"<p>Probes:Livez</p> Description <p>Get the readiness probe.</p> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\",\n            \"title\": \"Status\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"status\"\n    ],\n    \"title\": \"HealthCheck\",\n    \"description\": \"Healthcheck pydantic model.\"\n}\n</code></pre>"},{"location":"on-prem/api/#schemas","title":"schemas","text":""},{"location":"on-prem/api/#post-schemassubject","title":"POST /schemas/{subject}","text":"<p>Schemas:Register</p> Description <p>Register a schema.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>subject</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"schema\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"schema\": {\n            \"type\": \"string\",\n            \"title\": \"Schema\",\n            \"description\": \"The raw schema definition, typically in Avro or JSON Schema format.\",\n            \"examples\": [\n                \"{'type': 'record', 'name': 'User', 'fields': [{'name': 'id', 'type': 'string'}]}\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"schema\"\n    ],\n    \"title\": \"SchemaCreate\",\n    \"description\": \"Serializer for creating a new schema.\\n\\nAttributes:\\n    schema_content (str): The raw content of the schema (e.g., Avro, JSON Schema).\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"id\": \"9ba3ffaa-7e18-411d-857b-1fce21d30480\",\n    \"version\": 0\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the schema.\"\n        },\n        \"version\": {\n            \"type\": \"integer\",\n            \"title\": \"Version\",\n            \"description\": \"Version of the schema.\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"version\"\n    ],\n    \"title\": \"SchemaRead\",\n    \"description\": \"Serializer for reading a schema record.\\n\\nAttributes:\\n    id (UUID): Unique identifier of the schema.\\n    version (int): Schema version number.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#pipelines","title":"pipelines","text":""},{"location":"on-prem/api/#get-pipelines","title":"GET /pipelines/","text":"<p>List pipelines</p> Description <p>Retrieve a paginated list of pipelines with optional filters for state, search keyword, and team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>search</code> query None No Search term to filter pipelines by name or description. <code>size</code> query integer 50 No <code>state</code> query None No Filter pipelines by state (e.g., BUILDING, PAUSED). <code>team_id</code> query None No Filter pipelines by the ID of the team they belong to. <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"ef3fdaba-eaaf-4e8f-baf2-cafd5d838785\",\n            \"source_name\": \"string\",\n            \"source_type\": null,\n            \"transform\": 0,\n            \"target_name\": \"string\",\n            \"target_type\": null,\n            \"name\": \"string\",\n            \"state\": \"draft\",\n            \"owner\": \"string\"\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/PipelineList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[PipelineList]\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-pipelines","title":"POST /pipelines/","text":"<p>Create a new pipeline</p> Description <p>Register a new pipeline in the system, requires write permissions on the team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"team_id\": \"8e310587-43c0-4396-9341-c9559a4fd1f3\",\n    \"state\": \"draft\",\n    \"json_configuration\": {\n        \"source_name\": \"postgres-source\",\n        \"source_type\": null,\n        \"source_config\": {},\n        \"target_name\": \"kafka-target\",\n        \"target_type\": null,\n        \"target_config\": {},\n        \"smt_name\": \"string\",\n        \"smt_config\": [\n            null\n        ],\n        \"draft_step\": \"string\"\n    }\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the pipeline\",\n            \"examples\": [\n                \"data-ingest-pipeline\"\n            ]\n        },\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"ID of the team that owns the pipeline\"\n        },\n        \"state\": {\n            \"$ref\": \"#/components/schemas/PipelineState\",\n            \"description\": \"Current state of the pipeline\"\n        },\n        \"json_configuration\": {\n            \"$ref\": \"#/components/schemas/PipelineConfigAsSerializer-Input\",\n            \"description\": \"Complete configuration of the pipeline\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"team_id\",\n        \"state\",\n        \"json_configuration\"\n    ],\n    \"title\": \"PipelineCreate\",\n    \"description\": \"Request model for creating a new pipeline.\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"state\": \"draft\",\n    \"json_configuration\": {\n        \"source_name\": \"postgres-source\",\n        \"source_type\": null,\n        \"source_config\": {},\n        \"target_name\": \"kafka-target\",\n        \"target_type\": null,\n        \"target_config\": {},\n        \"smt_name\": \"string\",\n        \"smt_config\": [\n            null\n        ],\n        \"draft_step\": \"string\"\n    },\n    \"id\": \"fd415176-21ac-4130-a84a-ddb17ed6b506\",\n    \"team_name\": \"string\",\n    \"team_id\": \"9e8ab2cf-996b-4eae-b8ae-7917561cece0\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the pipeline\"\n        },\n        \"state\": {\n            \"$ref\": \"#/components/schemas/PipelineState\",\n            \"description\": \"Current state of the pipeline\"\n        },\n        \"json_configuration\": {\n            \"$ref\": \"#/components/schemas/PipelineConfigAsSerializer-Output\",\n            \"description\": \"Pipeline configuration structure\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the pipeline\"\n        },\n        \"team_name\": {\n            \"type\": \"string\",\n            \"title\": \"Team Name\",\n            \"description\": \"Name of the team that owns the pipeline\"\n        },\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"UUID of the owning team\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"state\",\n        \"json_configuration\",\n        \"id\",\n        \"team_name\",\n        \"team_id\"\n    ],\n    \"title\": \"PipelineRead\",\n    \"description\": \"Response model for reading a pipeline's details.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-pipelinescount-status","title":"GET /pipelines/count-status","text":"<p>Count pipelines by status</p> Description <p>Return the number of pipelines grouped by their state in the current environment.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"all\": 0,\n    \"draft\": 0,\n    \"live\": 0,\n    \"paused\": 0,\n    \"error\": 0,\n    \"building\": 0\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"all\": {\n            \"type\": \"integer\",\n            \"title\": \"All\",\n            \"description\": \"Total number of pipelines\",\n            \"default\": 0\n        },\n        \"draft\": {\n            \"type\": \"integer\",\n            \"title\": \"Draft\",\n            \"description\": \"Number of pipelines in draft state\",\n            \"default\": 0\n        },\n        \"live\": {\n            \"type\": \"integer\",\n            \"title\": \"Live\",\n            \"description\": \"Number of active (live) pipelines\",\n            \"default\": 0\n        },\n        \"paused\": {\n            \"type\": \"integer\",\n            \"title\": \"Paused\",\n            \"description\": \"Number of paused pipelines\",\n            \"default\": 0\n        },\n        \"error\": {\n            \"type\": \"integer\",\n            \"title\": \"Error\",\n            \"description\": \"Number of pipelines with errors\",\n            \"default\": 0\n        },\n        \"building\": {\n            \"type\": \"integer\",\n            \"title\": \"Building\",\n            \"description\": \"Number of pipelines being built\",\n            \"default\": 0\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"PipelinesStatusCounter\",\n    \"description\": \"Counts of pipelines by their status.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre>"},{"location":"on-prem/api/#patch-pipelinespipeline_id","title":"PATCH /pipelines/{pipeline_id}","text":"<p>Update a pipeline</p> Description <p>Update properties of an existing pipeline, requires write permission on the pipeline.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to update <p>Request body</p> application/json <p><pre><code>{\n    \"name\": null,\n    \"team_id\": null,\n    \"state\": null,\n    \"json_configuration\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Name\",\n            \"description\": \"Updated name of the pipeline\"\n        },\n        \"team_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Team Id\",\n            \"description\": \"Updated team ID\"\n        },\n        \"state\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/PipelineState\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Updated pipeline state\"\n        },\n        \"json_configuration\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/PipelineConfigAsSerializer-Input\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Updated configuration\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"PipelineUpdate\",\n    \"description\": \"Request model for updating an existing pipeline.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"state\": \"draft\",\n    \"json_configuration\": {\n        \"source_name\": \"postgres-source\",\n        \"source_type\": null,\n        \"source_config\": {},\n        \"target_name\": \"kafka-target\",\n        \"target_type\": null,\n        \"target_config\": {},\n        \"smt_name\": \"string\",\n        \"smt_config\": [\n            null\n        ],\n        \"draft_step\": \"string\"\n    },\n    \"id\": \"4bc0a0dc-e987-4171-902a-fa6d328b896a\",\n    \"team_name\": \"string\",\n    \"team_id\": \"d4a8c5f3-2e76-4bc4-9eae-bdb95f10ee8f\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the pipeline\"\n        },\n        \"state\": {\n            \"$ref\": \"#/components/schemas/PipelineState\",\n            \"description\": \"Current state of the pipeline\"\n        },\n        \"json_configuration\": {\n            \"$ref\": \"#/components/schemas/PipelineConfigAsSerializer-Output\",\n            \"description\": \"Pipeline configuration structure\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the pipeline\"\n        },\n        \"team_name\": {\n            \"type\": \"string\",\n            \"title\": \"Team Name\",\n            \"description\": \"Name of the team that owns the pipeline\"\n        },\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"UUID of the owning team\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"state\",\n        \"json_configuration\",\n        \"id\",\n        \"team_name\",\n        \"team_id\"\n    ],\n    \"title\": \"PipelineRead\",\n    \"description\": \"Response model for reading a pipeline's details.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#delete-pipelinespipeline_id","title":"DELETE /pipelines/{pipeline_id}","text":"<p>Delete a pipeline</p> Description <p>Delete the specified pipeline, requires delete permission.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to delete <p> Response 204 No Content </p> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-pipelinespipeline_id","title":"GET /pipelines/{pipeline_id}","text":"<p>Get pipeline details</p> Description <p>Retrieve detailed information of a pipeline by its ID.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to get <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"state\": \"draft\",\n    \"json_configuration\": {\n        \"source_name\": \"postgres-source\",\n        \"source_type\": null,\n        \"source_config\": {},\n        \"target_name\": \"kafka-target\",\n        \"target_type\": null,\n        \"target_config\": {},\n        \"smt_name\": \"string\",\n        \"smt_config\": [\n            null\n        ],\n        \"draft_step\": \"string\"\n    },\n    \"id\": \"e5169dd6-1f4b-418f-9853-d08f13bc3a6f\",\n    \"team_name\": \"string\",\n    \"team_id\": \"c2165667-20d0-4ff7-a794-134f27c95a92\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the pipeline\"\n        },\n        \"state\": {\n            \"$ref\": \"#/components/schemas/PipelineState\",\n            \"description\": \"Current state of the pipeline\"\n        },\n        \"json_configuration\": {\n            \"$ref\": \"#/components/schemas/PipelineConfigAsSerializer-Output\",\n            \"description\": \"Pipeline configuration structure\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the pipeline\"\n        },\n        \"team_name\": {\n            \"type\": \"string\",\n            \"title\": \"Team Name\",\n            \"description\": \"Name of the team that owns the pipeline\"\n        },\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"UUID of the owning team\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"state\",\n        \"json_configuration\",\n        \"id\",\n        \"team_name\",\n        \"team_id\"\n    ],\n    \"title\": \"PipelineRead\",\n    \"description\": \"Response model for reading a pipeline's details.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-pipelinespipeline_idstart","title":"POST /pipelines/{pipeline_id}/start","text":"<p>Start pipeline execution</p> Description <p>Start the pipeline's worker process, requires write permission on the pipeline's team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to start <p> Response 200 OK </p> application/json <p><pre><code>\"draft\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\",\n    \"enum\": [\n        \"draft\",\n        \"building\",\n        \"paused\",\n        \"error\",\n        \"live\"\n    ],\n    \"title\": \"PipelineState\",\n    \"description\": \"Handle pipeline states.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-pipelinespipeline_idpause","title":"POST /pipelines/{pipeline_id}/pause","text":"<p>Pause pipeline execution</p> Description <p>Pause the running pipeline, requires access permission.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to pause <p> Response 200 OK </p> application/json <p><pre><code>\"draft\"\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"type\": \"string\",\n    \"enum\": [\n        \"draft\",\n        \"building\",\n        \"paused\",\n        \"error\",\n        \"live\"\n    ],\n    \"title\": \"PipelineState\",\n    \"description\": \"Handle pipeline states.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-pipelinespipeline_idlogs","title":"GET /pipelines/{pipeline_id}/logs","text":"<p>Get pipeline logs</p> Description <p>Retrieve logs of a pipeline execution.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to get logs for <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"uuid\": \"string\",\n    \"status\": \"Running\",\n    \"count_errors\": \"3\",\n    \"logs\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"uuid\": {\n            \"type\": \"string\",\n            \"title\": \"Uuid\",\n            \"description\": \"UUID of the pipeline run or worker\"\n        },\n        \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"Running\",\n                \"NotFound\",\n                \"Pending\",\n                \"Succeeded\",\n                \"Failed\",\n                \"Unknown\"\n            ],\n            \"title\": \"Status\",\n            \"description\": \"Status of the current pipeline run\"\n        },\n        \"count_errors\": {\n            \"type\": \"string\",\n            \"title\": \"Count Errors\",\n            \"description\": \"Number of errors encountered during run\",\n            \"example\": \"3\"\n        },\n        \"logs\": {\n            \"type\": \"string\",\n            \"title\": \"Logs\",\n            \"description\": \"Logs produced by the pipeline worker\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"uuid\",\n        \"status\",\n        \"count_errors\",\n        \"logs\"\n    ],\n    \"title\": \"PipelineLogs\",\n    \"description\": \"Status and logs for a pipeline worker.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-pipelinespipeline_idstatus","title":"GET /pipelines/{pipeline_id}/status","text":"<p>Get pipeline status</p> Description <p>Get the current status of the pipeline, refreshing state from worker logs.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to get status for <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"state\": \"draft\",\n    \"json_configuration\": {\n        \"source_name\": \"postgres-source\",\n        \"source_type\": null,\n        \"source_config\": {},\n        \"target_name\": \"kafka-target\",\n        \"target_type\": null,\n        \"target_config\": {},\n        \"smt_name\": \"string\",\n        \"smt_config\": [\n            null\n        ],\n        \"draft_step\": \"string\"\n    },\n    \"id\": \"96f557ed-3578-452b-850d-f0c5c851393a\",\n    \"team_name\": \"string\",\n    \"team_id\": \"02783cdc-66cf-4e2d-8725-a543ab882bad\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the pipeline\"\n        },\n        \"state\": {\n            \"$ref\": \"#/components/schemas/PipelineState\",\n            \"description\": \"Current state of the pipeline\"\n        },\n        \"json_configuration\": {\n            \"$ref\": \"#/components/schemas/PipelineConfigAsSerializer-Output\",\n            \"description\": \"Pipeline configuration structure\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the pipeline\"\n        },\n        \"team_name\": {\n            \"type\": \"string\",\n            \"title\": \"Team Name\",\n            \"description\": \"Name of the team that owns the pipeline\"\n        },\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"UUID of the owning team\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"state\",\n        \"json_configuration\",\n        \"id\",\n        \"team_name\",\n        \"team_id\"\n    ],\n    \"title\": \"PipelineRead\",\n    \"description\": \"Response model for reading a pipeline's details.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-pipelinespipeline_idconfiguration","title":"GET /pipelines/{pipeline_id}/configuration","text":"<p>Export pipeline configuration</p> Description <p>Export the JSON configuration of the pipeline.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to export config for <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"source_name\": \"postgres-source\",\n    \"source_type\": null,\n    \"source_config\": {},\n    \"target_name\": \"kafka-target\",\n    \"target_type\": null,\n    \"target_config\": {},\n    \"smt_name\": \"string\",\n    \"smt_config\": [\n        null\n    ],\n    \"draft_step\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"source_name\": {\n            \"type\": \"string\",\n            \"title\": \"Source Name\",\n            \"description\": \"Name of the source connector\",\n            \"example\": \"postgres-source\"\n        },\n        \"source_type\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/ConnectorType\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Type of the source connector\"\n        },\n        \"source_config\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"integer\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"type\": \"object\",\n            \"title\": \"Source Config\",\n            \"description\": \"Configuration parameters for the source connector\"\n        },\n        \"target_name\": {\n            \"type\": \"string\",\n            \"title\": \"Target Name\",\n            \"description\": \"Name of the target connector\",\n            \"example\": \"kafka-target\"\n        },\n        \"target_type\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/ConnectorType\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Type of the target connector\"\n        },\n        \"target_config\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"integer\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"type\": \"object\",\n            \"title\": \"Target Config\",\n            \"description\": \"Configuration parameters for the target connector\"\n        },\n        \"smt_name\": {\n            \"type\": \"string\",\n            \"title\": \"Smt Name\",\n            \"description\": \"Name of the SMT (Simple Message Transform) applied\"\n        },\n        \"smt_config\": {\n            \"items\": {\n                \"anyOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MapperFunctionConfiguration-Output\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/EmptyFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/FlattenerFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SplitterFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/StringifyListFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/StringifyFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/UnenvelopeFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyFilterFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyMoverFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/DictMoverFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyNormalizerFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/HashFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/EncryptFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/FilteringFunctionConfiguration\"\n                    }\n                ]\n            },\n            \"type\": \"array\",\n            \"title\": \"Smt Config\",\n            \"description\": \"List of transformation configurations\"\n        },\n        \"draft_step\": {\n            \"type\": \"string\",\n            \"title\": \"Draft Step\",\n            \"description\": \"Current draft step of the pipeline (e.g., 'config', 'review')\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"source_name\",\n        \"source_type\",\n        \"source_config\",\n        \"target_name\",\n        \"target_type\",\n        \"target_config\",\n        \"smt_name\",\n        \"smt_config\",\n        \"draft_step\"\n    ],\n    \"title\": \"PipelineConfigAsSerializer\",\n    \"description\": \"Configuration structure for a pipeline.\\n\\nDescribes connectors and transformation details.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-pipelinespipeline_idconfiguration","title":"POST /pipelines/{pipeline_id}/configuration","text":"<p>Import pipeline configuration</p> Description <p>Update pipeline configuration by importing a new JSON config,requires write permission.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>pipeline_id</code> path string No UUID of the pipeline to import config for <p>Request body</p> application/json <p><pre><code>{\n    \"source_name\": \"postgres-source\",\n    \"source_type\": null,\n    \"source_config\": {},\n    \"target_name\": \"kafka-target\",\n    \"target_type\": null,\n    \"target_config\": {},\n    \"smt_name\": \"string\",\n    \"smt_config\": [\n        null\n    ],\n    \"draft_step\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"source_name\": {\n            \"type\": \"string\",\n            \"title\": \"Source Name\",\n            \"description\": \"Name of the source connector\",\n            \"example\": \"postgres-source\"\n        },\n        \"source_type\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/ConnectorType\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Type of the source connector\"\n        },\n        \"source_config\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"integer\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"type\": \"object\",\n            \"title\": \"Source Config\",\n            \"description\": \"Configuration parameters for the source connector\"\n        },\n        \"target_name\": {\n            \"type\": \"string\",\n            \"title\": \"Target Name\",\n            \"description\": \"Name of the target connector\",\n            \"example\": \"kafka-target\"\n        },\n        \"target_type\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/ConnectorType\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Type of the target connector\"\n        },\n        \"target_config\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"integer\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"type\": \"object\",\n            \"title\": \"Target Config\",\n            \"description\": \"Configuration parameters for the target connector\"\n        },\n        \"smt_name\": {\n            \"type\": \"string\",\n            \"title\": \"Smt Name\",\n            \"description\": \"Name of the SMT (Simple Message Transform) applied\"\n        },\n        \"smt_config\": {\n            \"items\": {\n                \"anyOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MapperFunctionConfiguration-Input\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/EmptyFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/FlattenerFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SplitterFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/StringifyListFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/StringifyFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/UnenvelopeFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyFilterFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyMoverFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/DictMoverFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyNormalizerFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/HashFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/EncryptFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/FilteringFunctionConfiguration\"\n                    }\n                ]\n            },\n            \"type\": \"array\",\n            \"title\": \"Smt Config\",\n            \"description\": \"List of transformation configurations\"\n        },\n        \"draft_step\": {\n            \"type\": \"string\",\n            \"title\": \"Draft Step\",\n            \"description\": \"Current draft step of the pipeline (e.g., 'config', 'review')\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"source_name\",\n        \"source_type\",\n        \"source_config\",\n        \"target_name\",\n        \"target_type\",\n        \"target_config\",\n        \"smt_name\",\n        \"smt_config\",\n        \"draft_step\"\n    ],\n    \"title\": \"PipelineConfigAsSerializer\",\n    \"description\": \"Configuration structure for a pipeline.\\n\\nDescribes connectors and transformation details.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"source_name\": \"postgres-source\",\n    \"source_type\": null,\n    \"source_config\": {},\n    \"target_name\": \"kafka-target\",\n    \"target_type\": null,\n    \"target_config\": {},\n    \"smt_name\": \"string\",\n    \"smt_config\": [\n        null\n    ],\n    \"draft_step\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"source_name\": {\n            \"type\": \"string\",\n            \"title\": \"Source Name\",\n            \"description\": \"Name of the source connector\",\n            \"example\": \"postgres-source\"\n        },\n        \"source_type\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/ConnectorType\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Type of the source connector\"\n        },\n        \"source_config\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"integer\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"type\": \"object\",\n            \"title\": \"Source Config\",\n            \"description\": \"Configuration parameters for the source connector\"\n        },\n        \"target_name\": {\n            \"type\": \"string\",\n            \"title\": \"Target Name\",\n            \"description\": \"Name of the target connector\",\n            \"example\": \"kafka-target\"\n        },\n        \"target_type\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/ConnectorType\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Type of the target connector\"\n        },\n        \"target_config\": {\n            \"additionalProperties\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"integer\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"type\": \"object\",\n            \"title\": \"Target Config\",\n            \"description\": \"Configuration parameters for the target connector\"\n        },\n        \"smt_name\": {\n            \"type\": \"string\",\n            \"title\": \"Smt Name\",\n            \"description\": \"Name of the SMT (Simple Message Transform) applied\"\n        },\n        \"smt_config\": {\n            \"items\": {\n                \"anyOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MapperFunctionConfiguration-Output\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/EmptyFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/FlattenerFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SplitterFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/StringifyListFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/StringifyFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/UnenvelopeFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyFilterFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyMoverFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/DictMoverFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/KeyNormalizerFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/HashFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/EncryptFunctionConfiguration\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/FilteringFunctionConfiguration\"\n                    }\n                ]\n            },\n            \"type\": \"array\",\n            \"title\": \"Smt Config\",\n            \"description\": \"List of transformation configurations\"\n        },\n        \"draft_step\": {\n            \"type\": \"string\",\n            \"title\": \"Draft Step\",\n            \"description\": \"Current draft step of the pipeline (e.g., 'config', 'review')\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"source_name\",\n        \"source_type\",\n        \"source_config\",\n        \"target_name\",\n        \"target_type\",\n        \"target_config\",\n        \"smt_name\",\n        \"smt_config\",\n        \"draft_step\"\n    ],\n    \"title\": \"PipelineConfigAsSerializer\",\n    \"description\": \"Configuration structure for a pipeline.\\n\\nDescribes connectors and transformation details.\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-pipelinesstatusall-non-draft","title":"GET /pipelines/status/all-non-draft","text":"<p>List status of all non-draft pipelines</p> Description <p>Retrieve a paginated list of all pipelines that are not in DRAFT state. Supports filtering by state (excluding DRAFT by default), team, and search. Returns pipeline status and summary information.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>search</code> query None No Search term to filter pipelines by name or description. <code>size</code> query integer 50 No <code>state</code> query None No Filter pipelines by state (e.g., BUILDING, PAUSED, LIVE, ERROR). If omitted, returns all non-draft pipelines. <code>team_id</code> query None No Filter pipelines by the ID of the team they belong to. <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"25cbf6c1-3b8c-4e99-b127-17a5a6a640ed\",\n            \"name\": \"string\",\n            \"state\": \"draft\"\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/PipelineStateList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[PipelineStateList]\"\n}\n</code></pre> <p> Response 403 Forbidden </p> application/json <pre><code>{\n    \"detail\": \"Unauthorized.\"\n}\n</code></pre> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"type\": \"string\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"detail\"\n    ],\n    \"title\": \"ResponseModel403\",\n    \"description\": \"Response model for 403 Forbidden.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#brokers","title":"brokers","text":""},{"location":"on-prem/api/#post-brokers","title":"POST /brokers/","text":"<p>Brokers:Test</p> Description <p>Test the broker credentials.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"bootstrap_server\": \"string\",\n    \"security_protocol\": \"PLAINTEXT\",\n    \"sasl_mechanism\": \"OAUTHBEARER\",\n    \"sasl_username\": \"string\",\n    \"sasl_password\": \"string\",\n    \"ca_cert\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"bootstrap_server\": {\n            \"type\": \"string\",\n            \"title\": \"Bootstrap Server\"\n        },\n        \"security_protocol\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"PLAINTEXT\",\n                \"SASL_PLAINTEXT\",\n                \"SASL_SSL\",\n                \"SSL\"\n            ],\n            \"title\": \"Security Protocol\"\n        },\n        \"sasl_mechanism\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"OAUTHBEARER\",\n                \"PLAIN\",\n                \"SCRAM-SHA-256\",\n                \"SCRAM-SHA-512\",\n                \"GSSAPI\"\n            ],\n            \"title\": \"Sasl Mechanism\"\n        },\n        \"sasl_username\": {\n            \"type\": \"string\",\n            \"title\": \"Sasl Username\"\n        },\n        \"sasl_password\": {\n            \"type\": \"string\",\n            \"title\": \"Sasl Password\"\n        },\n        \"ca_cert\": {\n            \"type\": \"string\",\n            \"title\": \"Ca Cert\",\n            \"default\": \"\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"bootstrap_server\",\n        \"security_protocol\",\n        \"sasl_mechanism\",\n        \"sasl_username\",\n        \"sasl_password\"\n    ],\n    \"title\": \"BrokerConfiguration\",\n    \"description\": \"Broker configuration.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"status\": true\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"type\": \"boolean\",\n            \"title\": \"Status\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"status\"\n    ],\n    \"title\": \"BrokerCheckStatus\",\n    \"description\": \"Broker check status.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#env_member","title":"env_member","text":""},{"location":"on-prem/api/#get-envsmembers","title":"GET /envs/members","text":"<p>Env Member:List</p> Description <p>List the environment members of the specified environment.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"cf8d19b3-63ef-4ef3-afc6-1c2b5d570ba3\",\n            \"user_id\": \"cde09d05-7741-4a18-a13d-f893f9cc3a37\",\n            \"email\": \"string\",\n            \"admin\": true\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvMemberList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[EnvMemberList]\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-envsmembersme","title":"GET /envs/members/me","text":"<p>Env Member:Get Me</p> Description <p>Read the environment member of the current user.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"user_id\": \"dba18a6d-3215-4203-badb-649e2bbd566e\",\n    \"env_id\": \"e4a487f4-8b2f-4628-9a17-9e37f4bcedf9\",\n    \"admin\": true,\n    \"id\": \"704f9363-be8f-4b88-a8c9-ca0bfc871625\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"User Id\",\n            \"description\": \"Unique identifier of the user being added\",\n            \"examples\": [\n                \"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n            ]\n        },\n        \"env_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Env Id\",\n            \"description\": \"Unique identifier of the env\",\n            \"examples\": [\n                \"a7d1f2fc-6e92-4dcd-b1f6-4200e4e9f1f3\"\n            ]\n        },\n        \"admin\": {\n            \"type\": \"boolean\",\n            \"title\": \"Admin\",\n            \"description\": \"Whether the user has admin privileges in the env\",\n            \"examples\": [\n                true\n            ]\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the env member entry\",\n            \"examples\": [\n                \"b154b9c4-4b28-4c6b-97c2-fdab3ed37f0e\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"user_id\",\n        \"env_id\",\n        \"admin\",\n        \"id\"\n    ],\n    \"title\": \"EnvMemberRead\",\n    \"description\": \"Response model for reading a env member.\"\n}\n</code></pre>"},{"location":"on-prem/api/#envs","title":"envs","text":""},{"location":"on-prem/api/#post-envs","title":"POST /envs/","text":"<p>Envs:Create</p> Description <p>Create env.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"use_retention\": true,\n    \"retention_configuration\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the environment\",\n            \"examples\": [\n                \"staging\"\n            ]\n        },\n        \"use_retention\": {\n            \"type\": \"boolean\",\n            \"title\": \"Use Retention\",\n            \"description\": \"Whether message retention is enabled for this environment\",\n            \"examples\": [\n                true\n            ]\n        },\n        \"retention_configuration\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/BrokerConfiguration\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Retention policy configuration if retention is enabled\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"use_retention\"\n    ],\n    \"title\": \"EnvCreate\",\n    \"description\": \"Model used to create a new Env.\\n\\nIncludes the environment name and optional broker retention configuration.\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"use_retention\": true,\n    \"retention_configuration\": null,\n    \"id\": \"8b9ff329-9028-4bab-8cb1-1fb818bdbe47\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the environment\",\n            \"examples\": [\n                \"staging\"\n            ]\n        },\n        \"use_retention\": {\n            \"type\": \"boolean\",\n            \"title\": \"Use Retention\",\n            \"description\": \"Whether message retention is enabled for this environment\",\n            \"examples\": [\n                true\n            ]\n        },\n        \"retention_configuration\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/BrokerConfiguration\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Retention policy configuration if retention is enabled\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the environment\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"use_retention\",\n        \"id\"\n    ],\n    \"title\": \"EnvRead\",\n    \"description\": \"Model returned when reading an Env.\\n\\nIncludes all creation fields plus the unique Env identifier.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-envs","title":"GET /envs/","text":"<p>Envs:List</p> Description <p>Envs for environment members.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"10fc75e7-af6f-4e5c-ab72-571132fe9725\",\n            \"name\": \"string\"\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[EnvList]\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-envsenv_id","title":"GET /envs/{env_id}","text":"<p>Envs:Get</p> Description <p>Read an env.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>env_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"use_retention\": true,\n    \"retention_configuration\": null,\n    \"id\": \"9a98fb72-7e3b-4f0d-9a76-60104ad3aa32\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the environment\",\n            \"examples\": [\n                \"staging\"\n            ]\n        },\n        \"use_retention\": {\n            \"type\": \"boolean\",\n            \"title\": \"Use Retention\",\n            \"description\": \"Whether message retention is enabled for this environment\",\n            \"examples\": [\n                true\n            ]\n        },\n        \"retention_configuration\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/BrokerConfiguration\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Retention policy configuration if retention is enabled\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the environment\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"use_retention\",\n        \"id\"\n    ],\n    \"title\": \"EnvRead\",\n    \"description\": \"Model returned when reading an Env.\\n\\nIncludes all creation fields plus the unique Env identifier.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#patch-envsenv_id","title":"PATCH /envs/{env_id}","text":"<p>Envs:Update</p> Description <p>Update an env. Only env admins can update environments.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>env_id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"name\": null,\n    \"use_retention\": null,\n    \"retention_configuration\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Name\",\n            \"description\": \"Name of the environment\",\n            \"examples\": [\n                \"staging\"\n            ]\n        },\n        \"use_retention\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Use Retention\",\n            \"description\": \"Whether message retention is enabled for this environment\",\n            \"examples\": [\n                true\n            ]\n        },\n        \"retention_configuration\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/BrokerConfiguration\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Retention policy configuration if retention is enabled\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"EnvUpdate\",\n    \"description\": \"Model used to update an existing Env.\\n\\nAll fields are optional to allow partial updates.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"use_retention\": true,\n    \"retention_configuration\": null,\n    \"id\": \"420954eb-7573-48ae-b010-5b58e47181ca\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the environment\",\n            \"examples\": [\n                \"staging\"\n            ]\n        },\n        \"use_retention\": {\n            \"type\": \"boolean\",\n            \"title\": \"Use Retention\",\n            \"description\": \"Whether message retention is enabled for this environment\",\n            \"examples\": [\n                true\n            ]\n        },\n        \"retention_configuration\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/BrokerConfiguration\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Retention policy configuration if retention is enabled\"\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the environment\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"use_retention\",\n        \"id\"\n    ],\n    \"title\": \"EnvRead\",\n    \"description\": \"Model returned when reading an Env.\\n\\nIncludes all creation fields plus the unique Env identifier.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#connector-types","title":"connector types","text":""},{"location":"on-prem/api/#post-kafka-sourcecheck-credentials","title":"POST /kafka-source/check-credentials","text":"<p>Kafka-Source:Check-Credentials</p> Description <p>Check the kafka source credentials.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"topic\": \"string\",\n    \"consumer_group_id\": null,\n    \"sasl_username\": \"string\",\n    \"sasl_password\": \"string\",\n    \"bootstrap_servers\": \"string\",\n    \"security_protocol\": \"PLAINTEXT\",\n    \"sasl_mechanism\": \"OAUTHBEARER\",\n    \"include_metadata\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"topic\": {\n            \"type\": \"string\",\n            \"title\": \"Topic\",\n            \"description\": \"Kafka topic to consume from\",\n            \"examples\": [\n                \"user_events\"\n            ]\n        },\n        \"consumer_group_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Consumer Group Id\",\n            \"description\": \"Optional consumer group ID for Kafka consumption\",\n            \"examples\": [\n                \"pipeline-group-1\"\n            ]\n        },\n        \"sasl_username\": {\n            \"type\": \"string\",\n            \"title\": \"Sasl Username\",\n            \"description\": \"SASL username for authentication\",\n            \"examples\": [\n                \"kafka_user\"\n            ]\n        },\n        \"sasl_password\": {\n            \"type\": \"string\",\n            \"title\": \"Sasl Password\",\n            \"description\": \"SASL password for authentication\",\n            \"examples\": [\n                \"securePassword123!\"\n            ]\n        },\n        \"bootstrap_servers\": {\n            \"type\": \"string\",\n            \"title\": \"Bootstrap Servers\",\n            \"description\": \"Comma-separated list of Kafka bootstrap servers\",\n            \"examples\": [\n                \"kafka1:9092,kafka2:9092\"\n            ]\n        },\n        \"security_protocol\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"PLAINTEXT\",\n                \"SASL_PLAINTEXT\",\n                \"SASL_SSL\",\n                \"SSL\"\n            ],\n            \"title\": \"Security Protocol\",\n            \"description\": \"Kafka security protocol to use\",\n            \"examples\": [\n                \"SASL_SSL\"\n            ]\n        },\n        \"sasl_mechanism\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"OAUTHBEARER\",\n                \"PLAIN\",\n                \"SCRAM-SHA-256\",\n                \"SCRAM-SHA-512\",\n                \"GSSAPI\"\n            ],\n            \"title\": \"Sasl Mechanism\",\n            \"description\": \"SASL mechanism used for authentication\",\n            \"examples\": [\n                \"SCRAM-SHA-512\"\n            ]\n        },\n        \"include_metadata\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Include Metadata\",\n            \"description\": \"Whether to include Kafka message metadata in the response\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"topic\",\n        \"consumer_group_id\",\n        \"sasl_username\",\n        \"sasl_password\",\n        \"bootstrap_servers\",\n        \"security_protocol\",\n        \"sasl_mechanism\"\n    ],\n    \"title\": \"KafkaSourceCredentials\",\n    \"description\": \"Credentials and configuration for accessing a Kafka source.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"is_success\": true,\n    \"message\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"is_success\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Success\"\n        },\n        \"message\": {\n            \"type\": \"string\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"is_success\",\n        \"message\"\n    ],\n    \"title\": \"CredentialsResponse\",\n    \"description\": \"Credential response.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-kafka-sourcefetch-messages","title":"POST /kafka-source/fetch-messages","text":"<p>Kafka-Source:Fetch-Messages</p> Description <p>Fetch some messages from the connector configuration.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"topic\": \"string\",\n    \"consumer_group_id\": null,\n    \"sasl_username\": \"string\",\n    \"sasl_password\": \"string\",\n    \"bootstrap_servers\": \"string\",\n    \"security_protocol\": \"PLAINTEXT\",\n    \"sasl_mechanism\": \"OAUTHBEARER\",\n    \"include_metadata\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"topic\": {\n            \"type\": \"string\",\n            \"title\": \"Topic\",\n            \"description\": \"Kafka topic to consume from\",\n            \"examples\": [\n                \"user_events\"\n            ]\n        },\n        \"consumer_group_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Consumer Group Id\",\n            \"description\": \"Optional consumer group ID for Kafka consumption\",\n            \"examples\": [\n                \"pipeline-group-1\"\n            ]\n        },\n        \"sasl_username\": {\n            \"type\": \"string\",\n            \"title\": \"Sasl Username\",\n            \"description\": \"SASL username for authentication\",\n            \"examples\": [\n                \"kafka_user\"\n            ]\n        },\n        \"sasl_password\": {\n            \"type\": \"string\",\n            \"title\": \"Sasl Password\",\n            \"description\": \"SASL password for authentication\",\n            \"examples\": [\n                \"securePassword123!\"\n            ]\n        },\n        \"bootstrap_servers\": {\n            \"type\": \"string\",\n            \"title\": \"Bootstrap Servers\",\n            \"description\": \"Comma-separated list of Kafka bootstrap servers\",\n            \"examples\": [\n                \"kafka1:9092,kafka2:9092\"\n            ]\n        },\n        \"security_protocol\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"PLAINTEXT\",\n                \"SASL_PLAINTEXT\",\n                \"SASL_SSL\",\n                \"SSL\"\n            ],\n            \"title\": \"Security Protocol\",\n            \"description\": \"Kafka security protocol to use\",\n            \"examples\": [\n                \"SASL_SSL\"\n            ]\n        },\n        \"sasl_mechanism\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"OAUTHBEARER\",\n                \"PLAIN\",\n                \"SCRAM-SHA-256\",\n                \"SCRAM-SHA-512\",\n                \"GSSAPI\"\n            ],\n            \"title\": \"Sasl Mechanism\",\n            \"description\": \"SASL mechanism used for authentication\",\n            \"examples\": [\n                \"SCRAM-SHA-512\"\n            ]\n        },\n        \"include_metadata\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Include Metadata\",\n            \"description\": \"Whether to include Kafka message metadata in the response\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"topic\",\n        \"consumer_group_id\",\n        \"sasl_username\",\n        \"sasl_password\",\n        \"bootstrap_servers\",\n        \"security_protocol\",\n        \"sasl_mechanism\"\n    ],\n    \"title\": \"KafkaSourceCredentials\",\n    \"description\": \"Credentials and configuration for accessing a Kafka source.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"messages\": [\n        {}\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"messages\": {\n            \"items\": {\n                \"type\": \"object\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Messages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"messages\"\n    ],\n    \"title\": \"Messages\",\n    \"description\": \"Messages.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-oracle-targetcheck-credentials","title":"POST /oracle-target/check-credentials","text":"<p>Oracle-Target:Check-Credentials</p> Description <p>Check oracle target credentials.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"database\": \"string\",\n    \"user\": \"string\",\n    \"password\": \"string\",\n    \"host\": \"string\",\n    \"port\": \"string\",\n    \"server_name\": \"string\",\n    \"server_id\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"database\": {\n            \"type\": \"string\",\n            \"title\": \"Database\",\n            \"description\": \"Oracle database name\",\n            \"examples\": [\n                \"ORCL\"\n            ]\n        },\n        \"user\": {\n            \"type\": \"string\",\n            \"title\": \"User\",\n            \"description\": \"Username for the Oracle database\",\n            \"examples\": [\n                \"admin_user\"\n            ]\n        },\n        \"password\": {\n            \"type\": \"string\",\n            \"title\": \"Password\",\n            \"description\": \"Password for the Oracle database\",\n            \"examples\": [\n                \"StrongPass123\"\n            ]\n        },\n        \"host\": {\n            \"type\": \"string\",\n            \"title\": \"Host\",\n            \"description\": \"Hostname or IP address of the Oracle server\",\n            \"examples\": [\n                \"192.168.1.100\"\n            ]\n        },\n        \"port\": {\n            \"type\": \"string\",\n            \"title\": \"Port\",\n            \"description\": \"Port number used to connect to the Oracle server\",\n            \"examples\": [\n                \"1521\"\n            ]\n        },\n        \"server_name\": {\n            \"type\": \"string\",\n            \"title\": \"Server Name\",\n            \"description\": \"Oracle server name (e.g., service name)\",\n            \"examples\": [\n                \"XE\"\n            ]\n        },\n        \"server_id\": {\n            \"type\": \"string\",\n            \"title\": \"Server Id\",\n            \"description\": \"Oracle server identifier (e.g., SID)\",\n            \"examples\": [\n                \"oraclesrv01\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"database\",\n        \"user\",\n        \"password\",\n        \"host\",\n        \"port\",\n        \"server_name\",\n        \"server_id\"\n    ],\n    \"title\": \"OracleTargetCredentials\",\n    \"description\": \"Credentials and connection details for writing to an Oracle target.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"is_success\": true,\n    \"message\": \"string\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"is_success\": {\n            \"type\": \"boolean\",\n            \"title\": \"Is Success\"\n        },\n        \"message\": {\n            \"type\": \"string\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"is_success\",\n        \"message\"\n    ],\n    \"title\": \"CredentialsResponse\",\n    \"description\": \"Credential response.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#jobs-smt","title":"jobs-smt","text":""},{"location":"on-prem/api/#post-smtprocess_mapper","title":"POST /smt/process_mapper","text":"<p>Job-Smt:Process-Mapper</p> Description <p>Process mapper.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": [\n        {\n            \"table_name\": \"string\",\n            \"fields\": [\n                {\n                    \"key\": \"string\",\n                    \"path\": \"string\",\n                    \"static\": \"string\",\n                    \"nullable\": true\n                }\n            ]\n        }\n    ],\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/MapperTableConfig\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Config\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_mapper_smt_process_mapper_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    {}\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"type\": \"object\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Mapper Smt Process Mapper Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_flattener","title":"POST /smt/process_flattener","text":"<p>Job-Smt:Process-Flattener</p> Description <p>Process flattener.</p> <p>Request body</p> application/json Schema of the request body <pre><code>{\n    \"type\": \"object\",\n    \"title\": \"Message\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Flattener Smt Process Flattener Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_splitter","title":"POST /smt/process_splitter","text":"<p>Job-Smt:Process-Splitter</p> Description <p>Process splitter.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"root_table_name\": \"string\",\n        \"popsink_pk\": \"string\",\n        \"pk\": null,\n        \"abbreviate_len\": null\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/SplitterConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_splitter_smt_process_splitter_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    {}\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"type\": \"object\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Splitter Smt Process Splitter Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_stringify_list","title":"POST /smt/process_stringify_list","text":"<p>Job-Smt:Process-Stringify-List</p> Description <p>Process stringify list.</p> <p>Request body</p> application/json Schema of the request body <pre><code>{\n    \"type\": \"object\",\n    \"title\": \"Message\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Stringify List Smt Process Stringify List Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_stringify_key","title":"POST /smt/process_stringify_key","text":"<p>Job-Smt:Process-Stringify-Key</p> Description <p>Process stringify key.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"keys\": [\n            \"string\"\n        ]\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/KeysConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_stringify_key_smt_process_stringify_key_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Stringify Key Smt Process Stringify Key Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_unenvelope","title":"POST /smt/process_unenvelope","text":"<p>Job-Smt:Process-Unenvelope</p> Description <p>Process unenvelope.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"key\": \"string\"\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/KeyConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_unenvelope_smt_process_unenvelope_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Unenvelope Smt Process Unenvelope Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_key_filter","title":"POST /smt/process_key_filter","text":"<p>Job-Smt:Process-Key-Filter</p> Description <p>Process key filter.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"keys\": [\n            \"string\"\n        ]\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/KeysConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_key_filter_smt_process_key_filter_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Key Filter Smt Process Key Filter Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_key_mover","title":"POST /smt/process_key_mover","text":"<p>Job-Smt:Process-Key-Mover</p> Description <p>Process key mover.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": [\n        {\n            \"key\": \"string\",\n            \"key_path\": \"string\"\n        }\n    ],\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/KeyMoverConfig\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Config\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_key_mover_smt_process_key_mover_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Key Mover Smt Process Key Mover Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_dict_mover","title":"POST /smt/process_dict_mover","text":"<p>Job-Smt:Process-Dict-Mover</p> Description <p>Process dict mover.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"keys\": [\n            \"string\"\n        ]\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/KeysConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_dict_mover_smt_process_dict_mover_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Dict Mover Smt Process Dict Mover Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_sanitize_key","title":"POST /smt/process_sanitize_key","text":"<p>Job-Smt:Process-Sanitize-Key</p> Description <p>Process sanitize key.</p> <p>Request body</p> application/json Schema of the request body <pre><code>{\n    \"type\": \"object\",\n    \"title\": \"Message\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Sanitize Key Smt Process Sanitize Key Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_hash","title":"POST /smt/process_hash","text":"<p>Job-Smt:Process-Hash</p> Description <p>Process hash.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"hash_type\": \"MD5\",\n        \"paths\": [\n            \"string\"\n        ]\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/HashConfig\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_hash_smt_process_hash_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Hash Smt Process Hash Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_encryption","title":"POST /smt/process_encryption","text":"<p>Job-Smt:Process-Encryption</p> Description <p>Process encryption.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"encrypt_key\": \"string\",\n        \"paths\": [\n            \"string\"\n        ]\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/EncryptConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_encryption_smt_process_encryption_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Encryption Smt Process Encryption Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-smtprocess_filtering","title":"POST /smt/process_filtering","text":"<p>Job-Smt:Process-Filtering</p> Description <p>Process filtering.</p> <p>Request body</p> application/json <p><pre><code>{\n    \"config\": {\n        \"operator\": \"EQUAL\",\n        \"key\": \"string\",\n        \"value\": \"string\"\n    },\n    \"message\": {}\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"config\": {\n            \"$ref\": \"#/components/schemas/FilteringConfiguration\"\n        },\n        \"message\": {\n            \"type\": \"object\",\n            \"title\": \"Message\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"config\",\n        \"message\"\n    ],\n    \"title\": \"Body_job_smt_process_filtering_smt_process_filtering_post\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>[\n    [\n        {}\n    ]\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"items\": {\n            \"type\": \"object\"\n        },\n        \"type\": \"array\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response Job Smt Process Filtering Smt Process Filtering Post\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#teams","title":"teams","text":""},{"location":"on-prem/api/#post-teams","title":"POST /teams/","text":"<p>Teams:Create</p> Description <p>Create a team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p>Request body</p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"env_id\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the team\",\n            \"examples\": [\n                \"Data Avengers\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"description\": \"Short description of the team\",\n            \"examples\": [\n                \"Team managing data pipelines and infrastructure.\"\n            ]\n        },\n        \"env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Env Id\",\n            \"description\": \"Optional environment ID the team is associated with\",\n            \"examples\": [\n                \"bfe91314-1234-4c6f-bb0c-01867487cc23\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"description\"\n    ],\n    \"title\": \"TeamCreate\",\n    \"description\": \"Request model for creating a new team.\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"env_id\": null,\n    \"id\": \"3afd19b1-016a-49b1-9831-5d725b39d655\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the team\",\n            \"examples\": [\n                \"Data Avengers\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"description\": \"Short description of the team\",\n            \"examples\": [\n                \"Team managing data pipelines and infrastructure.\"\n            ]\n        },\n        \"env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Env Id\",\n            \"description\": \"Optional environment ID the team is associated with\",\n            \"examples\": [\n                \"bfe91314-1234-4c6f-bb0c-01867487cc23\"\n            ]\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier for the team\",\n            \"examples\": [\n                \"8c18a0db-3b10-4f9b-a7d3-6e837bafacb0\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"description\",\n        \"id\"\n    ],\n    \"title\": \"TeamRead\",\n    \"description\": \"Response model for reading a team.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-teams","title":"GET /teams/","text":"<p>Teams:List</p> Description <p>List the teams of the current user.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"1078f6b3-fe67-441b-8424-85964707d2b9\",\n            \"name\": \"string\"\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[TeamList]\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-teamsteam_id","title":"GET /teams/{team_id}","text":"<p>Teams:Get</p> Description <p>Read a team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>team_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"env_id\": null,\n    \"id\": \"f4e8e517-86e6-4a6b-b65c-30f5c31ff4a6\"\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"title\": \"Name\",\n            \"description\": \"Name of the team\",\n            \"examples\": [\n                \"Data Avengers\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"title\": \"Description\",\n            \"description\": \"Short description of the team\",\n            \"examples\": [\n                \"Team managing data pipelines and infrastructure.\"\n            ]\n        },\n        \"env_id\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"uuid\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Env Id\",\n            \"description\": \"Optional environment ID the team is associated with\",\n            \"examples\": [\n                \"bfe91314-1234-4c6f-bb0c-01867487cc23\"\n            ]\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier for the team\",\n            \"examples\": [\n                \"8c18a0db-3b10-4f9b-a7d3-6e837bafacb0\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"name\",\n        \"description\",\n        \"id\"\n    ],\n    \"title\": \"TeamRead\",\n    \"description\": \"Response model for reading a team.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#team_member","title":"team_member","text":""},{"location":"on-prem/api/#post-teamsteam_idmembersbulk","title":"POST /teams/{team_id}/members/bulk","text":"<p>Team Member:Bulk Create</p> Description <p>Bulk create team members.</p> <p>Add multiple users to a team as either members or owners. Returns 204 No Content on success. Users who are already team members will be skipped.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>team_id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"owners\": [\n        \"87e96bb3-3547-4d4b-baac-a74d55e29c8a\"\n    ],\n    \"members\": [\n        \"c34cfcea-ebb8-43a9-8a27-46a1314b8de2\"\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"owners\": {\n            \"items\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Owners\",\n            \"description\": \"List of user IDs to add as team owners (admin=true)\",\n            \"default\": [],\n            \"examples\": [\n                [\n                    \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n                    \"e391f2fc-7e92-4dcd-b1f6-4200e4e9f1f4\"\n                ]\n            ]\n        },\n        \"members\": {\n            \"items\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Members\",\n            \"description\": \"List of user IDs to add as team members (admin=false)\",\n            \"default\": [],\n            \"examples\": [\n                [\n                    \"f492f3fd-8f93-4ede-c2f7-5301f5ea0f5\",\n                    \"g593f4fe-9g94-4fef-d3g8-6412g6fb1g6\"\n                ]\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"TeamMemberBulkCreate\",\n    \"description\": \"Request model for creating team members with separate owner and member lists.\"\n}\n</code></pre> <p> Response 204 No Content </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-teamsteam_idmembers","title":"GET /teams/{team_id}/members","text":"<p>Team Member:List</p> Description <p>List the team members of the specified team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <code>team_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"e24a5106-5adf-4042-b71c-a48ac20e6fcd\",\n            \"user_id\": \"911b8728-2d3a-4712-863a-94dad4d2c343\",\n            \"email\": \"string\",\n            \"admin\": true\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamMemberList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[TeamMemberList]\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-teamsteam_idmembersme","title":"GET /teams/{team_id}/members/me","text":"<p>Team Member:Get</p> Description <p>Get the team member details of the current user.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>team_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"2ed7154a-b613-46de-8d72-8f20d531e00e\",\n    \"user_id\": \"75cbf5d3-ab2c-4cf7-8158-5bad25a18ff6\",\n    \"team_id\": \"1ead9739-16ef-4b53-98fa-a182660045f8\",\n    \"admin\": true\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier of the team member entry\",\n            \"examples\": [\n                \"b154b9c4-4b28-4c6b-97c2-fdab3ed37f0e\"\n            ]\n        },\n        \"user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"User Id\",\n            \"description\": \"Unique identifier of the user being added\",\n            \"examples\": [\n                \"d290f1ee-6c54-4b01-90e6-d701748f0851\"\n            ]\n        },\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"Unique identifier of the team\",\n            \"examples\": [\n                \"a7d1f2fc-6e92-4dcd-b1f6-4200e4e9f1f3\"\n            ]\n        },\n        \"admin\": {\n            \"type\": \"boolean\",\n            \"title\": \"Admin\",\n            \"description\": \"Whether the user has admin privileges in the team\",\n            \"examples\": [\n                true\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"user_id\",\n        \"team_id\",\n        \"admin\"\n    ],\n    \"title\": \"TeamMemberRead\",\n    \"description\": \"Response model for reading a team member.\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#team_request","title":"team_request","text":""},{"location":"on-prem/api/#get-teamsrequestsme","title":"GET /teams/requests/me","text":"<p>List user team requests with details</p> Description <p>List all requests addressed to the current user with user and team details.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"5af4e99d-6763-4e38-b81a-916805b602b6\",\n            \"team_id\": \"47bcfdd4-03cb-44ea-84e1-8da39b9e03a2\",\n            \"from_user_id\": \"b478aac9-73f3-44bf-9e4a-e394c0b059ca\",\n            \"to_user_id\": \"b9718979-3758-4345-ba2d-1f2b06183175\",\n            \"status\": \"PENDING\",\n            \"admin\": true,\n            \"created_at\": null,\n            \"updated_at\": null,\n            \"from_user_email\": \"string\",\n            \"team_name\": \"string\"\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamRequestListAsMember\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[TeamRequestListAsMember]\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-teamsteam_idrequests","title":"GET /teams/{team_id}/requests","text":"<p>List team requests</p> Description <p>List all requests for a given team.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <code>team_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"cb661439-7fd7-41ff-a672-a451e51a3a0b\",\n            \"team_id\": \"ff03ce07-0b00-4aff-a7f0-4e82f497aee4\",\n            \"from_user_id\": \"86e041aa-5293-45c8-a4bb-2680586b2061\",\n            \"to_user_id\": \"e473a01a-19a4-46e1-9de5-c0e5f55e4a3a\",\n            \"to_user_email\": \"string\",\n            \"status\": \"PENDING\",\n            \"admin\": true,\n            \"created_at\": null,\n            \"updated_at\": null\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/TeamRequestListAsAdmin\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[TeamRequestListAsAdmin]\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-teamsteam_idrequests","title":"POST /teams/{team_id}/requests","text":"<p>Register a team request</p> Description <p>Register a new team request. Only team admins can send requests.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>team_id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"team_id\": \"23eba6e8-c60e-48b1-af63-70ea78c4a70d\",\n    \"from_user_id\": \"f5bc5074-a44a-469c-a9b1-96f0b01fed77\",\n    \"to_user_id\": \"093f9cc6-5bd0-4581-b18c-7df57a18c026\",\n    \"status\": null,\n    \"admin\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"ID of the team to which the user is being invited\",\n            \"examples\": [\n                \"e2a1d6c7-d50e-4b97-945c-cd842a4e674f\"\n            ]\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who sends the invitation\",\n            \"examples\": [\n                \"1a5d50a9-b3de-4c63-8d46-1b7ebdee179b\"\n            ]\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the user who receives the invitation\",\n            \"examples\": [\n                \"3f9bfe97-2f1e-4c6d-9d60-83665e3d8be0\"\n            ]\n        },\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Current status of the request\",\n            \"default\": \"PENDING\",\n            \"examples\": [\n                \"PENDING\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user will be admin if they accept\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"team_id\",\n        \"from_user_id\",\n        \"to_user_id\"\n    ],\n    \"title\": \"TeamRequestCreate\",\n    \"description\": \"Request model for creating a team invitation request.\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"team_id\": \"61202457-6b1d-4d79-9996-a269040bf96c\",\n    \"from_user_id\": \"bbb86096-e36e-4ddb-9a29-031266254879\",\n    \"to_user_id\": \"f0ad3d5d-bf8f-4c66-a6c7-642bf3177528\",\n    \"status\": null,\n    \"admin\": null,\n    \"id\": \"8b27beae-e04b-474a-afaf-cf283e8cb5a0\",\n    \"created_at\": null,\n    \"updated_at\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"ID of the team to which the user is being invited\",\n            \"examples\": [\n                \"e2a1d6c7-d50e-4b97-945c-cd842a4e674f\"\n            ]\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who sends the invitation\",\n            \"examples\": [\n                \"1a5d50a9-b3de-4c63-8d46-1b7ebdee179b\"\n            ]\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the user who receives the invitation\",\n            \"examples\": [\n                \"3f9bfe97-2f1e-4c6d-9d60-83665e3d8be0\"\n            ]\n        },\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Current status of the request\",\n            \"default\": \"PENDING\",\n            \"examples\": [\n                \"PENDING\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user will be admin if they accept\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier for the team request\",\n            \"examples\": [\n                \"84f8e7cd-e040-4bfb-a2dc-16d65b8d5c16\"\n            ]\n        },\n        \"created_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Created At\",\n            \"description\": \"Timestamp when the request was created\",\n            \"examples\": [\n                \"2025-06-12T09:23:45\"\n            ]\n        },\n        \"updated_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Updated At\",\n            \"description\": \"Timestamp when the request was last updated\",\n            \"examples\": [\n                \"2025-06-12T10:00:00\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"team_id\",\n        \"from_user_id\",\n        \"to_user_id\",\n        \"id\"\n    ],\n    \"title\": \"TeamRequestRead\",\n    \"description\": \"Response model for reading a team request.\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-teamsteam_idrequestsrequest_id","title":"GET /teams/{team_id}/requests/{request_id}","text":"<p>Get a team request</p> Description <p>Get a team request by its unique ID.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>request_id</code> path string No <code>team_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"team_id\": \"2882ed41-aaf4-4c86-86ac-e8be83c94079\",\n    \"from_user_id\": \"a7c8a375-ee28-47b5-a7a9-4c08e85ba9c2\",\n    \"to_user_id\": \"a6de3d27-1260-4b33-975b-8f5b63fad7b8\",\n    \"status\": null,\n    \"admin\": null,\n    \"id\": \"d7ed1366-57ab-4d66-89ce-afec1fdf7c98\",\n    \"created_at\": null,\n    \"updated_at\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"ID of the team to which the user is being invited\",\n            \"examples\": [\n                \"e2a1d6c7-d50e-4b97-945c-cd842a4e674f\"\n            ]\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who sends the invitation\",\n            \"examples\": [\n                \"1a5d50a9-b3de-4c63-8d46-1b7ebdee179b\"\n            ]\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the user who receives the invitation\",\n            \"examples\": [\n                \"3f9bfe97-2f1e-4c6d-9d60-83665e3d8be0\"\n            ]\n        },\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Current status of the request\",\n            \"default\": \"PENDING\",\n            \"examples\": [\n                \"PENDING\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user will be admin if they accept\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier for the team request\",\n            \"examples\": [\n                \"84f8e7cd-e040-4bfb-a2dc-16d65b8d5c16\"\n            ]\n        },\n        \"created_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Created At\",\n            \"description\": \"Timestamp when the request was created\",\n            \"examples\": [\n                \"2025-06-12T09:23:45\"\n            ]\n        },\n        \"updated_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Updated At\",\n            \"description\": \"Timestamp when the request was last updated\",\n            \"examples\": [\n                \"2025-06-12T10:00:00\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"team_id\",\n        \"from_user_id\",\n        \"to_user_id\",\n        \"id\"\n    ],\n    \"title\": \"TeamRequestRead\",\n    \"description\": \"Response model for reading a team request.\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#patch-teamsteam_idrequestsrequest_id","title":"PATCH /teams/{team_id}/requests/{request_id}","text":"<p>Update a team request</p> Description <p>Update a team request by its unique ID. Users can only accept their own requests.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>request_id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"status\": null,\n    \"admin\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Updated status of the request\",\n            \"examples\": [\n                \"ACCEPTED\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Change the admin privilege of the invited user\",\n            \"examples\": [\n                true\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"TeamRequestUpdate\",\n    \"description\": \"Request model for updating a team request's status or admin role.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"team_id\": \"b96c284a-c451-4940-a18f-0b7cff7c5591\",\n    \"from_user_id\": \"78af5a5b-5515-4f6a-8583-5b6190dfa1db\",\n    \"to_user_id\": \"0c987859-a2f3-496a-9d41-9f0cc3ce273a\",\n    \"status\": null,\n    \"admin\": null,\n    \"id\": \"3ff2c8d6-60a6-4ef1-b616-46b9e0fc9e13\",\n    \"created_at\": null,\n    \"updated_at\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"team_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Team Id\",\n            \"description\": \"ID of the team to which the user is being invited\",\n            \"examples\": [\n                \"e2a1d6c7-d50e-4b97-945c-cd842a4e674f\"\n            ]\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who sends the invitation\",\n            \"examples\": [\n                \"1a5d50a9-b3de-4c63-8d46-1b7ebdee179b\"\n            ]\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the user who receives the invitation\",\n            \"examples\": [\n                \"3f9bfe97-2f1e-4c6d-9d60-83665e3d8be0\"\n            ]\n        },\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Current status of the request\",\n            \"default\": \"PENDING\",\n            \"examples\": [\n                \"PENDING\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user will be admin if they accept\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        },\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"Unique identifier for the team request\",\n            \"examples\": [\n                \"84f8e7cd-e040-4bfb-a2dc-16d65b8d5c16\"\n            ]\n        },\n        \"created_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Created At\",\n            \"description\": \"Timestamp when the request was created\",\n            \"examples\": [\n                \"2025-06-12T09:23:45\"\n            ]\n        },\n        \"updated_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Updated At\",\n            \"description\": \"Timestamp when the request was last updated\",\n            \"examples\": [\n                \"2025-06-12T10:00:00\"\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"team_id\",\n        \"from_user_id\",\n        \"to_user_id\",\n        \"id\"\n    ],\n    \"title\": \"TeamRequestRead\",\n    \"description\": \"Response model for reading a team request.\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#env_request","title":"env_request","text":""},{"location":"on-prem/api/#get-envsrequestsme","title":"GET /envs/requests/me","text":"<p>List user env requests with details</p> Description <p>List all requests addressed to the current user with user and env details.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"ab5b4ddf-b93d-488e-a784-e13dcaab4a6a\",\n            \"env_id\": \"68410465-7d75-49ee-8410-96c8633a4fd2\",\n            \"env_name\": \"string\",\n            \"from_user_id\": \"c1d5a990-3604-4a8e-a440-89cc736058c3\",\n            \"from_user_email\": \"string\",\n            \"to_user_id\": \"77943cd3-3fc6-4fe1-8ebc-049743ddc58b\",\n            \"to_user_email\": \"string\",\n            \"status\": \"PENDING\",\n            \"admin\": true,\n            \"created_at\": null,\n            \"updated_at\": null\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvRequestListAsMember\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[EnvRequestListAsMember]\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-envsenv_idrequests","title":"GET /envs/{env_id}/requests","text":"<p>List env requests</p> Description <p>List all requests for a specific environment. Only env admins can access this.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>env_id</code> path string No <code>page</code> query integer 1 No <code>size</code> query integer 50 No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"e466c2ff-1f8f-4259-84c7-c2cdda134883\",\n            \"env_id\": \"026ffd66-6339-4583-9cb6-96fc65999e90\",\n            \"from_user_id\": \"bc165fd0-1595-417e-ab87-9d453a924bf9\",\n            \"to_user_id\": \"008a78b2-41db-428e-99e5-5c262e6c3097\",\n            \"to_user_email\": \"string\",\n            \"status\": \"PENDING\",\n            \"admin\": true,\n            \"created_at\": null,\n            \"updated_at\": null\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/EnvRequestListAsAdmin\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[EnvRequestListAsAdmin]\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#post-envsenv_idrequests","title":"POST /envs/{env_id}/requests","text":"<p>Register an env request</p> Description <p>Register a new env request. Only env admins can send requests.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>env_id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"env_id\": \"ff4b7fe9-b137-407e-a6e8-2f4fd285db7e\",\n    \"from_user_id\": \"92da2563-ae47-4a53-85bb-4fbabf03849b\",\n    \"to_user_email\": \"string\",\n    \"status\": null,\n    \"admin\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"env_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Env Id\",\n            \"description\": \"ID of the environment to which the user is being invited\",\n            \"examples\": [\n                \"e2a1d6c7-d50e-4b97-945c-cd842a4e674f\"\n            ]\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who sends the invitation\",\n            \"examples\": [\n                \"1a5d50a9-b3de-4c63-8d46-1b7ebdee179b\"\n            ]\n        },\n        \"to_user_email\": {\n            \"type\": \"string\",\n            \"title\": \"To User Email\",\n            \"description\": \"Email of the user who receives the invitation\",\n            \"examples\": [\n                \"user@example.com\"\n            ]\n        },\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"Current status of the request\",\n            \"default\": \"PENDING\",\n            \"examples\": [\n                \"PENDING\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user will be admin if they accept\",\n            \"default\": false,\n            \"examples\": [\n                false\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"env_id\",\n        \"from_user_id\",\n        \"to_user_email\"\n    ],\n    \"title\": \"EnvRequestCreate\",\n    \"description\": \"Request model for creating an env invitation request.\"\n}\n</code></pre> <p> Response 201 Created </p> application/json <p><pre><code>{\n    \"id\": \"8f846a15-6021-4179-a2e6-ed08e38640c7\",\n    \"env_id\": \"f41f2233-721e-4850-bfa5-ae5ce94c624e\",\n    \"from_user_id\": \"6d08bbeb-1165-4d97-934c-e91ac99d5f10\",\n    \"to_user_id\": \"eea970e3-b652-4214-81f6-0e03bf1bc95f\",\n    \"status\": \"PENDING\",\n    \"admin\": true,\n    \"created_at\": null,\n    \"updated_at\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"ID of the env request\"\n        },\n        \"env_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Env Id\",\n            \"description\": \"ID of the target environment\"\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who created the request\"\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the invited user\"\n        },\n        \"status\": {\n            \"$ref\": \"#/components/schemas/RequestStatus\",\n            \"description\": \"Current request status\"\n        },\n        \"admin\": {\n            \"type\": \"boolean\",\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user is granted admin rights\"\n        },\n        \"created_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Created At\",\n            \"description\": \"Creation timestamp\"\n        },\n        \"updated_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Updated At\",\n            \"description\": \"Last update timestamp\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"env_id\",\n        \"from_user_id\",\n        \"to_user_id\",\n        \"status\",\n        \"admin\"\n    ],\n    \"title\": \"EnvRequestRead\",\n    \"description\": \"Response model for reading a single env request.\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-envsrequestsrequest_id","title":"GET /envs/requests/{request_id}","text":"<p>Get env request</p> Description <p>Get a specific env request by ID.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>request_id</code> path string No <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"1efdb1fc-8c45-4d03-badf-b8659a0c13a0\",\n    \"env_id\": \"e48a2964-1d52-4d42-8df7-4a075851c782\",\n    \"from_user_id\": \"2004fd03-a5a4-4c65-bdc7-c40aea6ebff1\",\n    \"to_user_id\": \"29e9a839-aa41-4af9-ab7c-8af25c8d94ad\",\n    \"status\": \"PENDING\",\n    \"admin\": true,\n    \"created_at\": null,\n    \"updated_at\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"ID of the env request\"\n        },\n        \"env_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Env Id\",\n            \"description\": \"ID of the target environment\"\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who created the request\"\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the invited user\"\n        },\n        \"status\": {\n            \"$ref\": \"#/components/schemas/RequestStatus\",\n            \"description\": \"Current request status\"\n        },\n        \"admin\": {\n            \"type\": \"boolean\",\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user is granted admin rights\"\n        },\n        \"created_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Created At\",\n            \"description\": \"Creation timestamp\"\n        },\n        \"updated_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Updated At\",\n            \"description\": \"Last update timestamp\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"env_id\",\n        \"from_user_id\",\n        \"to_user_id\",\n        \"status\",\n        \"admin\"\n    ],\n    \"title\": \"EnvRequestRead\",\n    \"description\": \"Response model for reading a single env request.\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#patch-envsrequestsrequest_id","title":"PATCH /envs/requests/{request_id}","text":"<p>Update env request</p> Description <p>Update an env request (accept/decline).</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>request_id</code> path string No <p>Request body</p> application/json <p><pre><code>{\n    \"status\": null,\n    \"admin\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the request body <pre><code>{\n    \"properties\": {\n        \"status\": {\n            \"anyOf\": [\n                {\n                    \"$ref\": \"#/components/schemas/RequestStatus\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"description\": \"New status for the request\",\n            \"examples\": [\n                \"ACCEPTED\",\n                \"DECLINED\"\n            ]\n        },\n        \"admin\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"boolean\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user will be admin if they accept\",\n            \"examples\": [\n                true\n            ]\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"EnvRequestUpdate\",\n    \"description\": \"Request model for updating an env request.\"\n}\n</code></pre> <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"id\": \"9e42efdd-65df-4d9f-94a1-a5ab65c054c5\",\n    \"env_id\": \"22733305-243c-497c-ae38-0e7d687d6ca7\",\n    \"from_user_id\": \"68ddd286-f109-4cf6-a156-850a0a9fb418\",\n    \"to_user_id\": \"72f9ca59-ac16-4539-883f-e24ec02441dd\",\n    \"status\": \"PENDING\",\n    \"admin\": true,\n    \"created_at\": null,\n    \"updated_at\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Id\",\n            \"description\": \"ID of the env request\"\n        },\n        \"env_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"Env Id\",\n            \"description\": \"ID of the target environment\"\n        },\n        \"from_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"From User Id\",\n            \"description\": \"ID of the user who created the request\"\n        },\n        \"to_user_id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"title\": \"To User Id\",\n            \"description\": \"ID of the invited user\"\n        },\n        \"status\": {\n            \"$ref\": \"#/components/schemas/RequestStatus\",\n            \"description\": \"Current request status\"\n        },\n        \"admin\": {\n            \"type\": \"boolean\",\n            \"title\": \"Admin\",\n            \"description\": \"Whether the invited user is granted admin rights\"\n        },\n        \"created_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Created At\",\n            \"description\": \"Creation timestamp\"\n        },\n        \"updated_at\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Updated At\",\n            \"description\": \"Last update timestamp\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"env_id\",\n        \"from_user_id\",\n        \"to_user_id\",\n        \"status\",\n        \"admin\"\n    ],\n    \"title\": \"EnvRequestRead\",\n    \"description\": \"Response model for reading a single env request.\"\n}\n</code></pre> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#delete-envsrequestsrequest_id","title":"DELETE /envs/requests/{request_id}","text":"<p>Delete env request</p> Description <p>Delete an env request.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>request_id</code> path string No <p> Response 204 No Content </p> <p> Response 404 Not Found </p> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#user-logs","title":"user-logs","text":""},{"location":"on-prem/api/#get-user-logs","title":"GET /user-logs","text":"<p>User Logs:List</p> Description <p>List user logs with filtering options.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <code>action</code> query None No Filter by action type (login, logout, etc.) <code>from_date</code> query None No Start date for filtering logs (ISO 8601 format). <code>page</code> query integer 1 No <code>size</code> query integer 50 No <code>to_date</code> query None No End date for filtering logs (ISO 8601 format). <code>user_id</code> query None No Filter logs for a specific user by user ID. <code>user_type</code> query None No Filter by user type (real_user or system). <p> Response 200 OK </p> application/json <p><pre><code>{\n    \"items\": [\n        {\n            \"id\": \"aceb0bc6-bf1e-4ae7-bbfe-dc30d02f3645\",\n            \"timestamp\": \"2022-04-13T15:42:05.901Z\",\n            \"user_type\": \"real_user\",\n            \"action\": \"login\",\n            \"user_id\": null,\n            \"user_email\": null\n        }\n    ],\n    \"total\": null,\n    \"page\": null,\n    \"size\": null,\n    \"pages\": null\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"items\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/UserLogList\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Items\"\n        },\n        \"total\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Total\"\n        },\n        \"page\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Page\"\n        },\n        \"size\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 1.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Size\"\n        },\n        \"pages\": {\n            \"anyOf\": [\n                {\n                    \"type\": \"integer\",\n                    \"minimum\": 0.0\n                },\n                {\n                    \"type\": \"null\"\n                }\n            ],\n            \"title\": \"Pages\"\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\n        \"items\",\n        \"total\",\n        \"page\",\n        \"size\"\n    ],\n    \"title\": \"Page[UserLogList]\"\n}\n</code></pre> <p> Response 422 Unprocessable Content </p> application/json <p><pre><code>{\n    \"detail\": [\n        {\n            \"loc\": [\n                null\n            ],\n            \"msg\": \"string\",\n            \"type\": \"string\"\n        }\n    ]\n}\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"properties\": {\n        \"detail\": {\n            \"items\": {\n                \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n        }\n    },\n    \"type\": \"object\",\n    \"title\": \"HTTPValidationError\"\n}\n</code></pre>"},{"location":"on-prem/api/#saml","title":"saml","text":""},{"location":"on-prem/api/#get-samlis_activated","title":"GET /saml/is_activated","text":"<p>Is Activated</p> Description <p>Saml is activated route.</p> <p> Response 200 OK </p> application/json Schema of the response body <pre><code>{\n    \"type\": \"object\",\n    \"title\": \"Response Is Activated Saml Is Activated Get\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-samllogin","title":"GET /saml/login","text":"<p>Saml Login</p> Description <p>Saml login route.</p> <p> Response 200 OK </p> application/json Schema of the response body"},{"location":"on-prem/api/#get-samlmetadata","title":"GET /saml/metadata","text":"<p>Metadata</p> Description <p>Saml metadata route.</p> <p> Response 200 OK </p> application/json Schema of the response body"},{"location":"on-prem/api/#post-samlcallback","title":"POST /saml/callback","text":"<p>Saml Login Callback</p> Description <p>Saml login callback route.</p> <p> Response 200 OK </p> application/json Schema of the response body"},{"location":"on-prem/api/#connectors","title":"connectors","text":""},{"location":"on-prem/api/#get-connectorssource-config","title":"GET /connectors/source-config","text":"<p>List Source Config</p> Description <p>List all source configurations.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json <p><pre><code>[\n    {\n        \"id\": \"411d9be7-3a32-41da-ba06-faffd5b6b43b\",\n        \"name\": \"string\",\n        \"type\": \"job_smt\",\n        \"config\": {}\n    }\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"$ref\": \"#/components/schemas/SourceConfigRead\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response List Source Config Connectors Source Config Get\"\n}\n</code></pre>"},{"location":"on-prem/api/#get-connectorstarget-config","title":"GET /connectors/target-config","text":"<p>List Target Config</p> Description <p>List all target configurations.</p> <p>Input parameters</p> Parameter In Type Default Nullable Description <code>OAuth2PasswordBearer</code> header string N/A No <p> Response 200 OK </p> application/json <p><pre><code>[\n    {\n        \"id\": \"fecf119b-a867-4c5d-a899-47f210942878\",\n        \"name\": \"string\",\n        \"type\": \"job_smt\",\n        \"config\": {}\n    }\n]\n</code></pre> \u26a0\ufe0f This example has been generated automatically from the schema and it is not accurate. Refer to the schema for more information.</p> Schema of the response body <pre><code>{\n    \"items\": {\n        \"$ref\": \"#/components/schemas/TargetConfigRead\"\n    },\n    \"type\": \"array\",\n    \"title\": \"Response List Target Config Connectors Target Config Get\"\n}\n</code></pre>"},{"location":"on-prem/api/#schemas_1","title":"Schemas","text":""},{"location":"on-prem/api/#actiontype","title":"ActionType","text":"<p>Type: string</p>"},{"location":"on-prem/api/#bearerresponse","title":"BearerResponse","text":"Name Type <code>access_token</code> string <code>token_type</code> string"},{"location":"on-prem/api/#body_auth_jwt_login_auth_jwt_login_post","title":"Body_auth_jwt_login_auth_jwt_login_post","text":"Name Type <code>client_id</code> <code>client_secret</code> <code>grant_type</code> <code>password</code> string <code>scope</code> string <code>username</code> string"},{"location":"on-prem/api/#body_job_smt_process_dict_mover_smt_process_dict_mover_post","title":"Body_job_smt_process_dict_mover_smt_process_dict_mover_post","text":"Name Type <code>config</code> KeysConfiguration <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_encryption_smt_process_encryption_post","title":"Body_job_smt_process_encryption_smt_process_encryption_post","text":"Name Type <code>config</code> EncryptConfiguration <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_filtering_smt_process_filtering_post","title":"Body_job_smt_process_filtering_smt_process_filtering_post","text":"Name Type <code>config</code> FilteringConfiguration <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_hash_smt_process_hash_post","title":"Body_job_smt_process_hash_smt_process_hash_post","text":"Name Type <code>config</code> HashConfig <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_key_filter_smt_process_key_filter_post","title":"Body_job_smt_process_key_filter_smt_process_key_filter_post","text":"Name Type <code>config</code> KeysConfiguration <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_key_mover_smt_process_key_mover_post","title":"Body_job_smt_process_key_mover_smt_process_key_mover_post","text":"Name Type <code>config</code> Array&lt;KeyMoverConfig&gt; <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_mapper_smt_process_mapper_post","title":"Body_job_smt_process_mapper_smt_process_mapper_post","text":"Name Type <code>config</code> Array&lt;MapperTableConfig&gt; <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_splitter_smt_process_splitter_post","title":"Body_job_smt_process_splitter_smt_process_splitter_post","text":"Name Type <code>config</code> SplitterConfiguration <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_stringify_key_smt_process_stringify_key_post","title":"Body_job_smt_process_stringify_key_smt_process_stringify_key_post","text":"Name Type <code>config</code> KeysConfiguration <code>message</code>"},{"location":"on-prem/api/#body_job_smt_process_unenvelope_smt_process_unenvelope_post","title":"Body_job_smt_process_unenvelope_smt_process_unenvelope_post","text":"Name Type <code>config</code> KeyConfiguration <code>message</code>"},{"location":"on-prem/api/#body_reset_forgot_password_auth_forgot_password_post","title":"Body_reset_forgot_password_auth_forgot_password_post","text":"Name Type <code>email</code> string(email)"},{"location":"on-prem/api/#body_reset_reset_password_auth_reset_password_post","title":"Body_reset_reset_password_auth_reset_password_post","text":"Name Type <code>password</code> string <code>token</code> string"},{"location":"on-prem/api/#body_verify_request_token_auth_request_verify_token_post","title":"Body_verify_request_token_auth_request_verify_token_post","text":"Name Type <code>email</code> string(email)"},{"location":"on-prem/api/#body_verify_verify_auth_verify_post","title":"Body_verify_verify_auth_verify_post","text":"Name Type <code>token</code> string"},{"location":"on-prem/api/#brokercheckstatus","title":"BrokerCheckStatus","text":"Name Type <code>status</code> boolean"},{"location":"on-prem/api/#brokerconfiguration","title":"BrokerConfiguration","text":"Name Type <code>bootstrap_server</code> string <code>ca_cert</code> string <code>sasl_mechanism</code> string <code>sasl_password</code> string <code>sasl_username</code> string <code>security_protocol</code> string"},{"location":"on-prem/api/#connectortype","title":"ConnectorType","text":"<p>Type: string</p>"},{"location":"on-prem/api/#credentialsresponse","title":"CredentialsResponse","text":"Name Type <code>is_success</code> boolean <code>message</code> string"},{"location":"on-prem/api/#debug","title":"Debug","text":"Name Type <code>header</code>"},{"location":"on-prem/api/#dictmoverfunctionconfiguration","title":"DictMoverFunctionConfiguration","text":"Name Type <code>function_config</code> KeysConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#emptyfunctionconfiguration","title":"EmptyFunctionConfiguration","text":"Name Type <code>function_config</code> null <code>function_type</code> null"},{"location":"on-prem/api/#encryptconfiguration","title":"EncryptConfiguration","text":"Name Type <code>encrypt_key</code> string <code>paths</code> Array&lt;string&gt;"},{"location":"on-prem/api/#encryptfunctionconfiguration","title":"EncryptFunctionConfiguration","text":"Name Type <code>function_config</code> EncryptConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#envcreate","title":"EnvCreate","text":"Name Type <code>name</code> string <code>retention_configuration</code> <code>use_retention</code> boolean"},{"location":"on-prem/api/#envexport","title":"EnvExport","text":"Name Type <code>id</code> string(uuid) <code>name</code> string <code>retention_configuration</code> <code>use_retention</code> boolean"},{"location":"on-prem/api/#envlist","title":"EnvList","text":"Name Type <code>id</code> string(uuid) <code>name</code> string"},{"location":"on-prem/api/#envmemberexport","title":"EnvMemberExport","text":"Name Type <code>admin</code> boolean <code>env_id</code> string(uuid) <code>user_id</code> string(uuid)"},{"location":"on-prem/api/#envmemberlist","title":"EnvMemberList","text":"Name Type <code>admin</code> boolean <code>email</code> string <code>id</code> string(uuid) <code>user_id</code> string(uuid)"},{"location":"on-prem/api/#envmemberread","title":"EnvMemberRead","text":"Name Type <code>admin</code> boolean <code>env_id</code> string(uuid) <code>id</code> string(uuid) <code>user_id</code> string(uuid)"},{"location":"on-prem/api/#envread","title":"EnvRead","text":"Name Type <code>id</code> string(uuid) <code>name</code> string <code>retention_configuration</code> <code>use_retention</code> boolean"},{"location":"on-prem/api/#envrequestcreate","title":"EnvRequestCreate","text":"Name Type <code>admin</code> <code>env_id</code> string(uuid) <code>from_user_id</code> string(uuid) <code>status</code> <code>to_user_email</code> string"},{"location":"on-prem/api/#envrequestlistasadmin","title":"EnvRequestListAsAdmin","text":"Name Type <code>admin</code> boolean <code>created_at</code> <code>env_id</code> string(uuid) <code>from_user_id</code> string(uuid) <code>id</code> string(uuid) <code>status</code> RequestStatus <code>to_user_email</code> string <code>to_user_id</code> string(uuid) <code>updated_at</code>"},{"location":"on-prem/api/#envrequestlistasmember","title":"EnvRequestListAsMember","text":"Name Type <code>admin</code> boolean <code>created_at</code> <code>env_id</code> string(uuid) <code>env_name</code> string <code>from_user_email</code> string <code>from_user_id</code> string(uuid) <code>id</code> string(uuid) <code>status</code> RequestStatus <code>to_user_email</code> string <code>to_user_id</code> string(uuid) <code>updated_at</code>"},{"location":"on-prem/api/#envrequestread","title":"EnvRequestRead","text":"Name Type <code>admin</code> boolean <code>created_at</code> <code>env_id</code> string(uuid) <code>from_user_id</code> string(uuid) <code>id</code> string(uuid) <code>status</code> RequestStatus <code>to_user_id</code> string(uuid) <code>updated_at</code>"},{"location":"on-prem/api/#envrequestupdate","title":"EnvRequestUpdate","text":"Name Type <code>admin</code> <code>status</code>"},{"location":"on-prem/api/#envupdate","title":"EnvUpdate","text":"Name Type <code>name</code> <code>retention_configuration</code> <code>use_retention</code>"},{"location":"on-prem/api/#errormodel","title":"ErrorModel","text":"Name Type <code>detail</code>"},{"location":"on-prem/api/#exportdata-input","title":"ExportData-Input","text":"Name Type <code>env_members</code> Array&lt;EnvMemberExport&gt; <code>envs</code> Array&lt;EnvExport&gt; <code>team_members</code> Array&lt;TeamMemberExport&gt; <code>teams</code> Array&lt;TeamExport&gt; <code>users</code> Array&lt;UserExport&gt;"},{"location":"on-prem/api/#exportdata-output","title":"ExportData-Output","text":"Name Type <code>env_members</code> Array&lt;EnvMemberExport&gt; <code>envs</code> Array&lt;EnvExport&gt; <code>team_members</code> Array&lt;TeamMemberExport&gt; <code>teams</code> Array&lt;TeamExport&gt; <code>users</code> Array&lt;UserExport&gt;"},{"location":"on-prem/api/#filteringconfiguration","title":"FilteringConfiguration","text":"Name Type <code>key</code> string <code>operator</code> string <code>value</code> string"},{"location":"on-prem/api/#filteringfunctionconfiguration","title":"FilteringFunctionConfiguration","text":"Name Type <code>function_config</code> FilteringConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#flattenerfunctionconfiguration","title":"FlattenerFunctionConfiguration","text":"Name Type <code>function_config</code> null <code>function_type</code> string"},{"location":"on-prem/api/#hashconfig","title":"HashConfig","text":"Name Type <code>hash_type</code> string <code>paths</code> Array&lt;string&gt;"},{"location":"on-prem/api/#hashfunctionconfiguration","title":"HashFunctionConfiguration","text":"Name Type <code>function_config</code> HashConfig <code>function_type</code> string"},{"location":"on-prem/api/#healthcheck","title":"HealthCheck","text":"Name Type <code>status</code> string"},{"location":"on-prem/api/#httpvalidationerror","title":"HTTPValidationError","text":"Name Type <code>detail</code> Array&lt;ValidationError&gt;"},{"location":"on-prem/api/#kafkasourcecredentials","title":"KafkaSourceCredentials","text":"Name Type <code>bootstrap_servers</code> string <code>consumer_group_id</code> <code>include_metadata</code> <code>sasl_mechanism</code> string <code>sasl_password</code> string <code>sasl_username</code> string <code>security_protocol</code> string <code>topic</code> string"},{"location":"on-prem/api/#keyconfiguration","title":"KeyConfiguration","text":"Name Type <code>key</code> string"},{"location":"on-prem/api/#keyfilterfunctionconfiguration","title":"KeyFilterFunctionConfiguration","text":"Name Type <code>function_config</code> KeysConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#keymoverconfig","title":"KeyMoverConfig","text":"Name Type <code>key</code> string <code>key_path</code> string"},{"location":"on-prem/api/#keymoverfunctionconfiguration","title":"KeyMoverFunctionConfiguration","text":"Name Type <code>function_config</code> Array&lt;KeyMoverConfig&gt; <code>function_type</code> string"},{"location":"on-prem/api/#keynormalizerfunctionconfiguration","title":"KeyNormalizerFunctionConfiguration","text":"Name Type <code>function_config</code> null <code>function_type</code> string"},{"location":"on-prem/api/#keysconfiguration","title":"KeysConfiguration","text":"Name Type <code>keys</code> Array&lt;string&gt;"},{"location":"on-prem/api/#mappercolumnconfig","title":"MapperColumnConfig","text":"Name Type <code>key</code> string <code>nullable</code> boolean <code>path</code> string <code>static</code> string"},{"location":"on-prem/api/#mapperfunctionconfiguration-input","title":"MapperFunctionConfiguration-Input","text":"Name Type <code>function_config</code> Array&lt;MapperTableConfig&gt; <code>function_type</code> string"},{"location":"on-prem/api/#mapperfunctionconfiguration-output","title":"MapperFunctionConfiguration-Output","text":"Name Type <code>function_config</code> Array&lt;MapperTableConfig&gt; <code>function_type</code> string"},{"location":"on-prem/api/#mappertableconfig","title":"MapperTableConfig","text":"Name Type <code>fields</code> Array&lt;MapperColumnConfig&gt; <code>table_name</code> string"},{"location":"on-prem/api/#messages","title":"Messages","text":"Name Type <code>messages</code> Array&lt;&gt;"},{"location":"on-prem/api/#oracletargetcredentials","title":"OracleTargetCredentials","text":"Name Type <code>database</code> string <code>host</code> string <code>password</code> string <code>port</code> string <code>server_id</code> string <code>server_name</code> string <code>user</code> string"},{"location":"on-prem/api/#page_envlist_","title":"Page_EnvList_","text":"Name Type <code>items</code> Array&lt;EnvList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_envmemberlist_","title":"Page_EnvMemberList_","text":"Name Type <code>items</code> Array&lt;EnvMemberList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_envrequestlistasadmin_","title":"Page_EnvRequestListAsAdmin_","text":"Name Type <code>items</code> Array&lt;EnvRequestListAsAdmin&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_envrequestlistasmember_","title":"Page_EnvRequestListAsMember_","text":"Name Type <code>items</code> Array&lt;EnvRequestListAsMember&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_pipelinelist_","title":"Page_PipelineList_","text":"Name Type <code>items</code> Array&lt;PipelineList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_pipelinestatelist_","title":"Page_PipelineStateList_","text":"Name Type <code>items</code> Array&lt;PipelineStateList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_teamlist_","title":"Page_TeamList_","text":"Name Type <code>items</code> Array&lt;TeamList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_teammemberlist_","title":"Page_TeamMemberList_","text":"Name Type <code>items</code> Array&lt;TeamMemberList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_teamrequestlistasadmin_","title":"Page_TeamRequestListAsAdmin_","text":"Name Type <code>items</code> Array&lt;TeamRequestListAsAdmin&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_teamrequestlistasmember_","title":"Page_TeamRequestListAsMember_","text":"Name Type <code>items</code> Array&lt;TeamRequestListAsMember&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_userloglist_","title":"Page_UserLogList_","text":"Name Type <code>items</code> Array&lt;UserLogList&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#page_userread_","title":"Page_UserRead_","text":"Name Type <code>items</code> Array&lt;UserRead&gt; <code>page</code> <code>pages</code> <code>size</code> <code>total</code>"},{"location":"on-prem/api/#pipelineconfigasserializer-input","title":"PipelineConfigAsSerializer-Input","text":"Name Type <code>draft_step</code> string <code>smt_config</code> Array&lt;&gt; <code>smt_name</code> string <code>source_config</code> <code>source_name</code> string <code>source_type</code> <code>target_config</code> <code>target_name</code> string <code>target_type</code>"},{"location":"on-prem/api/#pipelineconfigasserializer-output","title":"PipelineConfigAsSerializer-Output","text":"Name Type <code>draft_step</code> string <code>smt_config</code> Array&lt;&gt; <code>smt_name</code> string <code>source_config</code> <code>source_name</code> string <code>source_type</code> <code>target_config</code> <code>target_name</code> string <code>target_type</code>"},{"location":"on-prem/api/#pipelinecreate","title":"PipelineCreate","text":"Name Type <code>json_configuration</code> PipelineConfigAsSerializer-Input <code>name</code> string <code>state</code> PipelineState <code>team_id</code> string(uuid)"},{"location":"on-prem/api/#pipelinelist","title":"PipelineList","text":"Name Type <code>id</code> string(uuid) <code>name</code> string <code>owner</code> string <code>source_name</code> string <code>source_type</code> <code>state</code> PipelineState <code>target_name</code> string <code>target_type</code> <code>transform</code> integer"},{"location":"on-prem/api/#pipelinelogs","title":"PipelineLogs","text":"Name Type <code>count_errors</code> string <code>logs</code> string <code>status</code> string <code>uuid</code> string"},{"location":"on-prem/api/#pipelineread","title":"PipelineRead","text":"Name Type <code>id</code> string(uuid) <code>json_configuration</code> PipelineConfigAsSerializer-Output <code>name</code> string <code>state</code> PipelineState <code>team_id</code> string(uuid) <code>team_name</code> string"},{"location":"on-prem/api/#pipelinesstatuscounter","title":"PipelinesStatusCounter","text":"Name Type <code>all</code> integer <code>building</code> integer <code>draft</code> integer <code>error</code> integer <code>live</code> integer <code>paused</code> integer"},{"location":"on-prem/api/#pipelinestate","title":"PipelineState","text":"<p>Type: string</p>"},{"location":"on-prem/api/#pipelinestatelist","title":"PipelineStateList","text":"Name Type <code>id</code> string(uuid) <code>name</code> string <code>state</code> PipelineState"},{"location":"on-prem/api/#pipelineupdate","title":"PipelineUpdate","text":"Name Type <code>json_configuration</code> <code>name</code> <code>state</code> <code>team_id</code>"},{"location":"on-prem/api/#requeststatus","title":"RequestStatus","text":"<p>Type: string</p>"},{"location":"on-prem/api/#responsemodel403","title":"ResponseModel403","text":"Name Type <code>detail</code> string"},{"location":"on-prem/api/#schemacreate","title":"SchemaCreate","text":"Name Type <code>schema</code> string"},{"location":"on-prem/api/#schemaread","title":"SchemaRead","text":"Name Type <code>id</code> string(uuid) <code>version</code> integer"},{"location":"on-prem/api/#sourceconfigread","title":"SourceConfigRead","text":"Name Type <code>config</code> <code>id</code> string(uuid) <code>name</code> string <code>type</code> ConnectorType"},{"location":"on-prem/api/#splitterconfiguration","title":"SplitterConfiguration","text":"Name Type <code>abbreviate_len</code> <code>pk</code> <code>popsink_pk</code> string <code>root_table_name</code> string"},{"location":"on-prem/api/#splitterfunctionconfiguration","title":"SplitterFunctionConfiguration","text":"Name Type <code>function_config</code> SplitterConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#stringifyfunctionconfiguration","title":"StringifyFunctionConfiguration","text":"Name Type <code>function_config</code> KeysConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#stringifylistfunctionconfiguration","title":"StringifyListFunctionConfiguration","text":"Name Type <code>function_config</code> null <code>function_type</code> string"},{"location":"on-prem/api/#targetconfigread","title":"TargetConfigRead","text":"Name Type <code>config</code> <code>id</code> string(uuid) <code>name</code> string <code>type</code> ConnectorType"},{"location":"on-prem/api/#teamcreate","title":"TeamCreate","text":"Name Type <code>description</code> string <code>env_id</code> <code>name</code> string"},{"location":"on-prem/api/#teamexport","title":"TeamExport","text":"Name Type <code>description</code> string <code>env_id</code> <code>id</code> string(uuid) <code>name</code> string"},{"location":"on-prem/api/#teamlist","title":"TeamList","text":"Name Type <code>id</code> string(uuid) <code>name</code> string"},{"location":"on-prem/api/#teammemberbulkcreate","title":"TeamMemberBulkCreate","text":"Name Type <code>members</code> Array&lt;string(uuid)&gt; <code>owners</code> Array&lt;string(uuid)&gt;"},{"location":"on-prem/api/#teammemberexport","title":"TeamMemberExport","text":"Name Type <code>admin</code> boolean <code>team_id</code> string(uuid) <code>user_id</code> string(uuid)"},{"location":"on-prem/api/#teammemberlist","title":"TeamMemberList","text":"Name Type <code>admin</code> boolean <code>email</code> string <code>id</code> string(uuid) <code>user_id</code> string(uuid)"},{"location":"on-prem/api/#teammemberread","title":"TeamMemberRead","text":"Name Type <code>admin</code> boolean <code>id</code> string(uuid) <code>team_id</code> string(uuid) <code>user_id</code> string(uuid)"},{"location":"on-prem/api/#teamread","title":"TeamRead","text":"Name Type <code>description</code> string <code>env_id</code> <code>id</code> string(uuid) <code>name</code> string"},{"location":"on-prem/api/#teamrequestcreate","title":"TeamRequestCreate","text":"Name Type <code>admin</code> <code>from_user_id</code> string(uuid) <code>status</code> <code>team_id</code> string(uuid) <code>to_user_id</code> string(uuid)"},{"location":"on-prem/api/#teamrequestlistasadmin","title":"TeamRequestListAsAdmin","text":"Name Type <code>admin</code> boolean <code>created_at</code> <code>from_user_id</code> string(uuid) <code>id</code> string(uuid) <code>status</code> RequestStatus <code>team_id</code> string(uuid) <code>to_user_email</code> string <code>to_user_id</code> string(uuid) <code>updated_at</code>"},{"location":"on-prem/api/#teamrequestlistasmember","title":"TeamRequestListAsMember","text":"Name Type <code>admin</code> boolean <code>created_at</code> <code>from_user_email</code> string <code>from_user_id</code> string(uuid) <code>id</code> string(uuid) <code>status</code> RequestStatus <code>team_id</code> string(uuid) <code>team_name</code> string <code>to_user_id</code> string(uuid) <code>updated_at</code>"},{"location":"on-prem/api/#teamrequestread","title":"TeamRequestRead","text":"Name Type <code>admin</code> <code>created_at</code> <code>from_user_id</code> string(uuid) <code>id</code> string(uuid) <code>status</code> <code>team_id</code> string(uuid) <code>to_user_id</code> string(uuid) <code>updated_at</code>"},{"location":"on-prem/api/#teamrequestupdate","title":"TeamRequestUpdate","text":"Name Type <code>admin</code> <code>status</code>"},{"location":"on-prem/api/#unenvelopefunctionconfiguration","title":"UnenvelopeFunctionConfiguration","text":"Name Type <code>function_config</code> KeyConfiguration <code>function_type</code> string"},{"location":"on-prem/api/#usercreate","title":"UserCreate","text":"Name Type <code>email</code> string(email) <code>is_active</code> <code>is_superuser</code> boolean <code>is_verified</code> <code>password</code> string"},{"location":"on-prem/api/#userexport","title":"UserExport","text":"Name Type <code>active_env_id</code> <code>email</code> string(email) <code>id</code> string(uuid) <code>is_active</code> boolean <code>is_superuser</code> boolean <code>is_verified</code> boolean"},{"location":"on-prem/api/#userloglist","title":"UserLogList","text":"Name Type <code>action</code> ActionType <code>id</code> string(uuid) <code>timestamp</code> string(date-time) <code>user_email</code> <code>user_id</code> <code>user_type</code> UserType"},{"location":"on-prem/api/#userpasswordchange","title":"UserPasswordChange","text":"Name Type <code>new_password</code> string <code>old_password</code> string"},{"location":"on-prem/api/#userread","title":"UserRead","text":"Name Type <code>active_env_id</code> <code>email</code> string(email) <code>id</code> string(uuid) <code>is_active</code> boolean <code>is_superuser</code> boolean <code>is_verified</code> boolean"},{"location":"on-prem/api/#usersafeupdate","title":"UserSafeUpdate","text":"Name Type <code>active_env_id</code> <code>email</code> <code>is_active</code> <code>is_superuser</code> <code>is_verified</code> <code>password</code>"},{"location":"on-prem/api/#usertype","title":"UserType","text":"<p>Type: string</p>"},{"location":"on-prem/api/#validationerror","title":"ValidationError","text":"Name Type <code>loc</code> Array&lt;&gt; <code>msg</code> string <code>type</code> string"},{"location":"on-prem/api/#security-schemes","title":"Security schemes","text":"Name Type Scheme Description OAuth2PasswordBearer oauth2"},{"location":"on-prem/on-prem/","title":"Popsink API Documentation - Easy Step-by-Step Guide","text":""},{"location":"on-prem/on-prem/#table-of-contents","title":"Table of Contents","text":"<ol> <li>What You Need to Know</li> <li>Step 1: Create a User</li> <li>Step 2: Log In</li> <li>Step 3: Create an Environment</li> <li>Step 4: Create a Team</li> <li>Step 5: Add Team Members</li> <li>Step 6: Create a Pipeline</li> <li>Step 7: Update a Pipeline</li> <li>Step 8: Start/Stop a Pipeline</li> <li>Alternative Testing Methods</li> </ol>"},{"location":"on-prem/on-prem/#what-you-need-to-know","title":"What You Need to Know","text":""},{"location":"on-prem/on-prem/#what-is-this-guide-for","title":"What is this guide for?","text":"<p>This guide shows you exactly how to use the Popsink API to create data pipelines. Think of it like a recipe - follow each step in order and you'll get great results!</p>"},{"location":"on-prem/on-prem/#what-youll-need","title":"What you'll need:","text":"<ul> <li>A computer with internet access</li> <li>Basic copy/paste skills</li> <li>15 minutes of your time</li> </ul>"},{"location":"on-prem/on-prem/#important-notes","title":"Important Notes:","text":"<ul> <li>Server URL: All examples use <code>https://your-server/api</code> - this is your Popsink server</li> <li>Order matters: Follow steps 1-8 in order for best results</li> <li>Save your IDs: Each step gives you important IDs to use in the next step</li> </ul>"},{"location":"on-prem/on-prem/#how-the-api-works-simple-version","title":"How the API Works (Simple Version):","text":"<ol> <li>You ask \u2192 Send a request to the API</li> <li>API responds \u2192 Gives you data or confirms your action</li> <li>You use the response \u2192 Take the ID from the response to use in the next step</li> </ol> <p>The Complete Flow: 1. Create a user account (like signing up) 2. Log in to get your \"access pass\" (token) 3. Create an environment (your workspace) 4. Create a team (organize your work) 5. Add team members (invite people) 6. Create pipelines (set up data processing) 7. Control pipelines (start/stop as needed)</p>"},{"location":"on-prem/on-prem/#step-1-create-a-user","title":"Step 1: Create a User","text":""},{"location":"on-prem/on-prem/#what-youre-doing","title":"What you're doing:","text":"<p>Creating your first user account - like signing up for any website!</p>"},{"location":"on-prem/on-prem/#what-you-need","title":"What you need:","text":"<ul> <li>An email address</li> <li>A password</li> </ul>"},{"location":"on-prem/on-prem/#how-to-do-it","title":"How to do it:","text":"<p>Copy this command and paste it into your terminal: <pre><code>curl -X POST \"https://your-server/api/auth/register\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"email\": \"your-email@company.com\",\n    \"password\": \"your-password-here\",\n    \"is_active\": true,\n    \"is_superuser\": false,\n    \"is_verified\": false\n  }' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace <code>your-email@company.com</code> and <code>your-password-here</code> with your actual email and password!</p>"},{"location":"on-prem/on-prem/#what-youll-get-back","title":"What you'll get back:","text":"<pre><code>{\n  \"id\": \"3b0c298a-062e-42d1-a01b-277fa66908da\",\n  \"email\": \"your-email@company.com\",\n  \"is_active\": true,\n  \"is_superuser\": false,\n  \"is_verified\": false,\n  \"active_env_id\": null\n}\n</code></pre>"},{"location":"on-prem/on-prem/#save-this","title":"\ud83d\udcdd SAVE THIS:","text":"<p>User ID: <code>3b0c298a-062e-42d1-a01b-277fa66908da</code> \u2190 This is an example! Copy YOUR actual User ID from the response above!</p>"},{"location":"on-prem/on-prem/#step-2-log-in","title":"Step 2: Log In","text":""},{"location":"on-prem/on-prem/#what-youre-doing_1","title":"What you're doing:","text":"<p>Getting your \"access pass\" (token) so you can use the API.</p>"},{"location":"on-prem/on-prem/#how-to-do-it_1","title":"How to do it:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/auth/jwt/login\" \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d 'username=your-email@company.com&amp;password=your-password-here' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Use the same email and password from Step 1!</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_1","title":"What you'll get back:","text":"<pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"bearer\"\n}\n</code></pre>"},{"location":"on-prem/on-prem/#save-this_1","title":"\ud83d\udcdd SAVE THIS:","text":"<p>Your Token: <code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</code> \u2190 This is an example! Copy YOUR actual token from the response above!</p>"},{"location":"on-prem/on-prem/#how-to-use-your-token","title":"\ud83d\udca1 How to use your token:","text":"<p>From now on, add this to every command: <pre><code>-H \"Authorization: Bearer YOUR_TOKEN_HERE\"\n</code></pre></p>"},{"location":"on-prem/on-prem/#step-3-create-an-environment","title":"Step 3: Create an Environment","text":""},{"location":"on-prem/on-prem/#what-youre-doing_2","title":"What you're doing:","text":"<p>Creating your workspace - think of it like creating a folder to organize all your work.</p>"},{"location":"on-prem/on-prem/#why-you-need-this","title":"Why you need this:","text":"<p>Without an environment, you can't create teams or pipelines. It's like needing a building before you can have offices!</p>"},{"location":"on-prem/on-prem/#how-to-do-it_2","title":"How to do it:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/envs/\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"my-workspace\",\n    \"description\": \"My first workspace\",\n    \"use_retention\": true\n  }' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown above)!</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_2","title":"What you'll get back:","text":"<pre><code>{\n  \"name\": \"my-workspace\",\n  \"use_retention\": true,\n  \"retention_configuration\": null,\n  \"id\": \"d455a981-be17-455e-a03c-4d9c3224db72\"\n}\n</code></pre>"},{"location":"on-prem/on-prem/#save-this_2","title":"\ud83d\udcdd SAVE THIS:","text":"<p>Environment ID: <code>d455a981-be17-455e-a03c-4d9c3224db72</code> \u2190 This is an example! Copy YOUR actual Environment ID from the response above!</p>"},{"location":"on-prem/on-prem/#step-4-create-a-team","title":"Step 4: Create a Team","text":""},{"location":"on-prem/on-prem/#what-youre-doing_3","title":"What you're doing:","text":"<p>Creating a team to organize your work and invite other people to help.</p>"},{"location":"on-prem/on-prem/#what-you-need_1","title":"What you need:","text":"<ul> <li>Your token from Step 2</li> <li>A name for your team</li> </ul>"},{"location":"on-prem/on-prem/#how-to-do-it_3","title":"How to do it:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/teams/\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"My Data Team\",\n    \"description\": \"Team for processing our data\"\n  }' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown above)!</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_3","title":"What you'll get back:","text":"<pre><code>{\n  \"name\": \"My Data Team\",\n  \"description\": \"Team for processing our data\",\n  \"env_id\": \"d455a981-be17-455e-a03c-4d9c3224db72\",\n  \"id\": \"881e0fce-5caa-4f5c-82c6-5eb883c47100\"\n}\n</code></pre>"},{"location":"on-prem/on-prem/#save-this_3","title":"\ud83d\udcdd SAVE THIS:","text":"<p>Team ID: <code>881e0fce-5caa-4f5c-82c6-5eb883c47100</code> \u2190 This is an example! Copy YOUR actual Team ID from the response above!</p>"},{"location":"on-prem/on-prem/#success","title":"\ud83c\udf89 Success!","text":"<p>Notice how the <code>env_id</code> matches your environment ID? That means your team is properly connected to your workspace!</p>"},{"location":"on-prem/on-prem/#step-5-add-team-members","title":"Step 5: Add Team Members","text":""},{"location":"on-prem/on-prem/#what-youre-doing_4","title":"What you're doing:","text":"<p>Adding people to your team and giving them different roles.</p>"},{"location":"on-prem/on-prem/#what-you-need_2","title":"What you need:","text":"<ul> <li>Your token from Step 2</li> <li>Your team ID from Step 4</li> <li>User IDs of people you want to add</li> </ul>"},{"location":"on-prem/on-prem/#roles-explained","title":"Roles explained:","text":"<ul> <li>Owners: Can manage the team and do everything</li> <li>Members: Can use the team and view things</li> </ul>"},{"location":"on-prem/on-prem/#first-create-another-user-to-invite","title":"First, create another user to invite:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/auth/register\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"email\": \"teammate@company.com\",\n    \"password\": \"teammatepass123\",\n    \"is_active\": true,\n    \"is_superuser\": false,\n    \"is_verified\": false\n  }' -k\n</code></pre></p> <p>You'll get back something like: <pre><code>{\n  \"id\": \"32d4b09d-4527-40d5-923b-e166d85cb459\",\n  \"email\": \"teammate@company.com\",\n  ...\n}\n</code></pre></p>"},{"location":"on-prem/on-prem/#save-this_4","title":"\ud83d\udcdd SAVE THIS:","text":"<p>New User ID: <code>32d4b09d-4527-40d5-923b-e166d85cb459</code> \u2190 This is an example! Copy YOUR actual New User ID from the response above!</p>"},{"location":"on-prem/on-prem/#now-add-them-to-your-team","title":"Now add them to your team:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/teams/YOUR_TEAM_ID/members/bulk\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"members\": [\n      \"NEW_USER_ID_FROM_ABOVE\"\n    ]\n  }' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace: - <code>YOUR_TEAM_ID</code> with your actual team ID from Step 4 (not the example shown) - <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown) - <code>NEW_USER_ID_FROM_ABOVE</code> with the actual new user ID you just created (not the example shown)</p> <p>\ud83d\udca1 Note: The user who created the team is automatically added as an owner, so you only need to add new members here.</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_4","title":"What you'll get back:","text":"<p>If successful, you'll get no response (that's normal and means it worked!)</p>"},{"location":"on-prem/on-prem/#success_1","title":"\ud83c\udf89 Success!","text":"<p>Your team now has members and is ready to create pipelines!</p>"},{"location":"on-prem/on-prem/#step-6-create-a-pipeline","title":"Step 6: Create a Pipeline","text":""},{"location":"on-prem/on-prem/#what-youre-doing_5","title":"What you're doing:","text":"<p>Creating your first data pipeline! This is where the magic happens - it will move and process your data.</p>"},{"location":"on-prem/on-prem/#what-you-need_3","title":"What you need:","text":"<ul> <li>Your token from Step 2</li> <li>Your team ID from Step 4</li> </ul>"},{"location":"on-prem/on-prem/#what-this-pipeline-does","title":"What this pipeline does:","text":"<ul> <li>Source: Reads data from Kafka (a messaging system)</li> <li>Target: Writes data to Oracle (a database)</li> <li>Transform: Processes the data between source and target</li> </ul>"},{"location":"on-prem/on-prem/#how-to-do-it_4","title":"How to do it:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/pipelines/\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"My First Pipeline\",\n    \"team_id\": \"YOUR_TEAM_ID\",\n    \"state\": \"draft\",\n    \"json_configuration\": {\n      \"source_name\": \"kafka-source\",\n      \"source_type\": \"kafka_source\",\n      \"source_config\": {\n        \"topic\": \"user-events\",\n        \"bootstrap_servers\": \"localhost:9092\",\n        \"consumer_group_id\": \"events-consumer-group\",\n        \"sasl_username\": \"kafka_user\",\n        \"sasl_password\": \"kafka_password\",\n        \"sasl_mechanism\": \"PLAIN\",\n        \"security_protocol\": \"SASL_SSL\",\n        \"include_metadata\": false\n      },\n      \"target_name\": \"oracle-target\",\n      \"target_type\": \"oracle_target\",\n      \"target_config\": {\n        \"database\": \"ORCL\",\n        \"user\": \"oracle_user\",\n        \"password\": \"oracle_password\",\n        \"host\": \"localhost\",\n        \"port\": \"1521\",\n        \"server_name\": \"XE\",\n        \"server_id\": \"oraclesrv01\"\n      },\n      \"smt_name\": \"basic-transform\",\n      \"smt_config\": [],\n      \"draft_step\": \"config\"\n    }\n  }' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace: - <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown) - <code>YOUR_TEAM_ID</code> with your actual team ID from Step 4 (not the example shown)</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_5","title":"What you'll get back:","text":"<pre><code>{\n  \"name\": \"My First Pipeline\",\n  \"state\": \"draft\",\n  \"json_configuration\": { ... },\n  \"id\": \"5efd3d63-a6eb-4b0c-afe9-6ee1d8f5f820\",\n  \"team_name\": \"My Data Team\",\n  \"team_id\": \"881e0fce-5caa-4f5c-82c6-5eb883c47100\"\n}\n</code></pre>"},{"location":"on-prem/on-prem/#save-this_5","title":"\ud83d\udcdd SAVE THIS:","text":"<p>Pipeline ID: <code>5efd3d63-a6eb-4b0c-afe9-6ee1d8f5f820</code> \u2190 This is an example! Copy YOUR actual Pipeline ID from the response above!</p>"},{"location":"on-prem/on-prem/#success_2","title":"\ud83c\udf89 Success!","text":"<p>Your pipeline is created and ready to be configured and started!</p>"},{"location":"on-prem/on-prem/#step-7-update-a-pipeline","title":"Step 7: Update a Pipeline","text":""},{"location":"on-prem/on-prem/#what-youre-doing_6","title":"What you're doing:","text":"<p>Changing your pipeline settings - like editing a document after you've written it.</p>"},{"location":"on-prem/on-prem/#what-you-need_4","title":"What you need:","text":"<ul> <li>Your token from Step 2</li> <li>Your pipeline ID from Step 6</li> </ul>"},{"location":"on-prem/on-prem/#how-to-do-it_5","title":"How to do it:","text":"<p>Copy and paste this command: <pre><code>curl -X PATCH \"https://your-server/api/pipelines/YOUR_PIPELINE_ID\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"Updated Pipeline Name\",\n    \"json_configuration\": {\n      \"source_name\": \"updated-kafka-source\",\n      \"source_type\": \"kafka_source\",\n      \"source_config\": {\n        \"topic\": \"updated-topic\",\n        \"bootstrap_servers\": \"localhost:9092\",\n        \"consumer_group_id\": \"updated-consumer-group\",\n        \"sasl_username\": \"updated_user\",\n        \"sasl_password\": \"updated_password\",\n        \"sasl_mechanism\": \"PLAIN\",\n        \"security_protocol\": \"SASL_SSL\",\n        \"include_metadata\": false\n      },\n      \"target_name\": \"updated-oracle-target\",\n      \"target_type\": \"oracle_target\",\n      \"target_config\": {\n        \"database\": \"ORCL\",\n        \"user\": \"updated_oracle_user\",\n        \"password\": \"updated_oracle_password\",\n        \"host\": \"localhost\",\n        \"port\": \"1521\",\n        \"server_name\": \"XE\",\n        \"server_id\": \"oraclesrv01\"\n      },\n      \"smt_name\": \"updated-transform\",\n      \"smt_config\": [],\n      \"draft_step\": \"config\"\n    }\n  }' -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace: - <code>YOUR_PIPELINE_ID</code> with your actual pipeline ID from Step 6 (not the example shown) - <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown)</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_6","title":"What you'll get back:","text":"<pre><code>{\n  \"name\": \"Updated Pipeline Name\",\n  \"state\": \"draft\",\n  \"json_configuration\": { ... },\n  \"id\": \"5efd3d63-a6eb-4b0c-afe9-6ee1d8f5f820\",\n  \"team_name\": \"My Data Team\",\n  \"team_id\": \"881e0fce-5caa-4f5c-82c6-5eb883c47100\"\n}\n</code></pre>"},{"location":"on-prem/on-prem/#success_3","title":"\ud83c\udf89 Success!","text":"<p>Your pipeline has been updated with the new settings!</p>"},{"location":"on-prem/on-prem/#step-8-startstop-a-pipeline","title":"Step 8: Start/Stop a Pipeline","text":""},{"location":"on-prem/on-prem/#what-youre-doing_7","title":"What you're doing:","text":"<p>Controlling your pipeline - like turning a machine on and off.</p>"},{"location":"on-prem/on-prem/#what-you-need_5","title":"What you need:","text":"<ul> <li>Your token from Step 2</li> <li>Your pipeline ID from Step 6</li> </ul>"},{"location":"on-prem/on-prem/#start-your-pipeline","title":"\ud83d\ude80 Start your pipeline:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/pipelines/YOUR_PIPELINE_ID/start\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace: - <code>YOUR_PIPELINE_ID</code> with your actual pipeline ID from Step 6 (not the example shown) - <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown)</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_7","title":"What you'll get back:","text":"<pre><code>\"building\"\n</code></pre>"},{"location":"on-prem/on-prem/#what-building-means","title":"\ud83d\udca1 What \"building\" means:","text":"<p>Your pipeline is starting up and getting ready to process data. This is normal!</p>"},{"location":"on-prem/on-prem/#stop-pause-your-pipeline","title":"\u23f8\ufe0f Stop (pause) your pipeline:","text":"<p>Copy and paste this command: <pre><code>curl -X POST \"https://your-server/api/pipelines/YOUR_PIPELINE_ID/pause\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n  -k\n</code></pre></p> <p>\u26a0\ufe0f Important: Replace: - <code>YOUR_PIPELINE_ID</code> with your actual pipeline ID from Step 6 (not the example shown) - <code>YOUR_TOKEN_HERE</code> with your actual token from Step 2 (not the example shown)</p>"},{"location":"on-prem/on-prem/#what-youll-get-back_8","title":"What you'll get back:","text":"<pre><code>\"paused\"\n</code></pre>"},{"location":"on-prem/on-prem/#success_4","title":"\ud83c\udf89 Success!","text":"<p>You now know how to start and stop your data pipeline!</p>"},{"location":"on-prem/on-prem/#pipeline-states-explained","title":"\ud83d\udcca Pipeline States Explained:","text":"<ul> <li>draft: Pipeline is being designed</li> <li>building: Pipeline is starting up</li> <li>live: Pipeline is running and processing data</li> <li>paused: Pipeline is stopped</li> <li>error: Pipeline has a problem (check logs)</li> </ul>"},{"location":"on-prem/on-prem/#alternative-testing-methods","title":"Alternative Testing Methods","text":""},{"location":"on-prem/on-prem/#other-ways-to-test-the-api","title":"\ud83d\udee0\ufe0f Other Ways to Test the API","text":"<p>If you don't want to use curl commands, you can use these tools:</p>"},{"location":"on-prem/on-prem/#1-postman-recommended-for-beginners","title":"1. Postman (Recommended for beginners)","text":"<ul> <li>Download Postman (free)</li> <li>Create a new request</li> <li>Set the method (GET, POST, PATCH)</li> <li>Add the URL: <code>https://your-server/api/...</code></li> <li>Add headers: <code>Authorization: Bearer YOUR_TOKEN</code></li> <li>Add JSON body for POST/PATCH requests</li> <li>Click Send!</li> </ul>"},{"location":"on-prem/on-prem/#2-python-script","title":"2. Python Script","text":"<pre><code>import requests\n\n# Your token from Step 2\ntoken = \"YOUR_TOKEN_HERE\"\nheaders = {\"Authorization\": f\"Bearer {token}\"}\n\n# Example: Get all pipelines\nresponse = requests.get(\"https://your-server/api/pipelines/\", \n                       headers=headers, verify=False)\nprint(response.json())\n</code></pre>"},{"location":"on-prem/on-prem/#3-browser-devtools","title":"3. Browser DevTools","text":"<ul> <li>Open your browser</li> <li>Go to any website</li> <li>Press F12 to open DevTools</li> <li>Go to Console tab</li> <li>Paste JavaScript code like: <pre><code>fetch('https://your-server/api/pipelines/', {\n    headers: {'Authorization': 'Bearer YOUR_TOKEN_HERE'}\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data));\n</code></pre></li> </ul>"},{"location":"on-prem/on-prem/#4-httpie-command-line-tool","title":"4. HTTPie (Command line tool)","text":"<pre><code>http GET https://your-server/api/pipelines/ \\\n  Authorization:\"Bearer YOUR_TOKEN_HERE\"\n</code></pre>"},{"location":"on-prem/on-prem/#important-reminders","title":"\ud83d\udcdd Important Reminders:","text":"<p>When using any method, remember to: - Replace <code>YOUR_TOKEN_HERE</code> with your actual token (not the examples shown in this guide) - Replace all example UUIDs with your actual IDs from the API responses - Use <code>https://your-server/api</code> as the base URL - Follow the 8 steps in order - Save all the IDs you get back from YOUR actual API responses</p>"},{"location":"on-prem/on-prem/#pro-tips","title":"\ud83c\udfaf Pro Tips:","text":"<ol> <li>Start with curl: It's included on most computers</li> <li>Use Postman: If you want a visual interface</li> <li>Try Python: If you want to automate multiple steps</li> <li>Save your work: Keep a text file with all your actual IDs and tokens (not the examples from this guide)</li> </ol>"},{"location":"on-prem/on-prem/#congratulations","title":"\ud83c\udf89 Congratulations!","text":"<p>You've learned how to: - \u2705 Create user accounts - \u2705 Log in and get tokens - \u2705 Create environments (workspaces) - \u2705 Create teams - \u2705 Add team members - \u2705 Create data pipelines - \u2705 Update pipelines - \u2705 Start and stop pipelines</p> <p>You're now ready to build amazing data processing pipelines with Popsink! \ud83d\ude80</p>"},{"location":"snowflake-ibmi/db2_setup/","title":"Setup a IBMi system","text":"<p>if you're new to IBMi/AS400 or don't currently have a system to use, this section will guide you through setting a test  environment using the PUB400.com service.</p>"},{"location":"snowflake-ibmi/db2_setup/#what-is-ibmias400","title":"What is IBMi/AS400 ?","text":"<p>IBMi/AS400 (now commonly referred to as IBMi on Power Systems) is a midrange computer platform developed by IBM. Originally introduced in 1988 as the AS/400 (Application System/400), it was designed for business applications, especially in industries like finance, manufacturing, and retail.</p> <p>The system runs on the IBMi operating system, which is known for its stability, security, and integrated database (DB2). It supports both traditional RPG and COBOL applications as well as modern development using Java, PHP, and SQL.</p> <p>Although the hardware and name have evolved over the years (from AS/400 to iSeries to System i and now IBM Power Systems running IBMi), many organizations still refer to it as AS/400 due to its long legacy.</p> <p>It's therefore an entirely different platform than traditional PC computers. It's still used widely to this day in many sectors.</p>"},{"location":"snowflake-ibmi/db2_setup/#what-is-pub400","title":"What is PUB400 ?","text":"<p>PUB400.com is a public, free IBMi (formerly AS/400) server you can use to learn, experiment, and develop.</p> <p>It\u2019s basically a playground for IBMi: a system running IBMi version 7.5, made accessible to the community so people can try out IBMi tools,  write programs (RPG, COBOL, CL, SQL, etc.), use open\u2011source/modern tooling, and generally build skills.</p>"},{"location":"snowflake-ibmi/db2_setup/#1-pub400com-sign-up-connection-test","title":"1. PUB400.com sign-up &amp; connection test","text":"<p>Opening a free account is really easy, head to sign-up page and fill up this form :</p> <p></p> <p>You'll receive a first email to confirm your email address, and then, another one to give you more details  on how to use your new test system.</p> <p>IBMi/AS400 systems often requires you to go through a dedicated tn5250 terminal emulator. For our use cases,  you'll need the terminal to enable journaling on your source tables.</p> <p>We recommend you to use a JAVA-based multi-platform terminal tn5250j Make sure JAVA is installed, simply download the zip distribution and unzip it to your install folder.</p> <p>Run the command <code>java -jar ./tn5250j.jar</code> and configure your connection to pub400.com. The logon window looks like this :</p> <p></p> <p>On first login, your password will need to be changed, use [TAB] to move for one field to another.</p> <p>On the welcome page, try running the command <code>DSPLIBL</code> to display the list of libraries/schemas.</p> <p></p> <p>Now the result will look like this</p> <p></p> <p>That's great, it means that PUB400 has already created a sample schema called <code>${YOUR_USERNAME}1</code></p>"},{"location":"snowflake-ibmi/db2_setup/#2-sql-connection","title":"2. SQL connection","text":"<p>IBMi has an embedded DB2 SQL database tightly coupled with the system. Tables are files and vice versa. That's why,  there's no need to install a SQL server.</p>"},{"location":"snowflake-ibmi/db2_setup/#query-test","title":"Query test","text":"<p>Now, try to connect to our library by using an ordinary JDBC-based SQL client. In this example,  connection string is simply <code>jdbc:as400://pub400.COM;libraries={YOUR_USERNAME}1</code>. Here's a screenshot of DBeaver</p> <p></p>"},{"location":"snowflake-ibmi/db2_setup/#build-schema","title":"Build schema","text":"<p>Time to build our first test database. This database will be used later on to do replication tests with Snowflake. Run the following creation script :</p> <pre><code>-- 1. Categories Table\nCREATE TABLE Categories (\n    CategoryID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,\n    CategoryName VARCHAR(100) NOT NULL,\n    Description VARCHAR(500)\n);\n\n-- 2. Suppliers Table\nCREATE TABLE Suppliers (\n    SupplierID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,\n    SupplierName VARCHAR(150) NOT NULL,\n    ContactName VARCHAR(100),\n    Address VARCHAR(200),\n    Phone VARCHAR(50),\n    Email VARCHAR(100)\n);\n\n-- 3. Products Table\nCREATE TABLE Products (\n    ProductID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,\n    ProductName VARCHAR(150) NOT NULL,\n    CategoryID INTEGER,\n    SupplierID INTEGER,\n    UnitPrice DECIMAL(10, 2),\n    ReorderLevel INTEGER DEFAULT 10,\n    Discontinued SMALLINT DEFAULT 0,\n    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID),\n    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID)\n);\n\n-- 4. Stock Table\nCREATE TABLE Stock (\n    StockID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,\n    ProductID INTEGER NOT NULL,\n    QuantityInStock INTEGER NOT NULL,\n    LastUpdated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n\n-- 5. Purchases Table\nCREATE TABLE Purchases (\n    PurchaseID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,\n    ProductID INTEGER NOT NULL,\n    SupplierID INTEGER NOT NULL,\n    Quantity INTEGER NOT NULL,\n    PurchaseDate DATE NOT NULL,\n    UnitCost DECIMAL(10, 2),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),\n    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID)\n);\n\n-- 6. Sales Table\nCREATE TABLE Sales (\n    SaleID INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,\n    ProductID INTEGER NOT NULL,\n    Quantity INTEGER NOT NULL,\n    SaleDate DATE NOT NULL,\n    UnitPrice DECIMAL(10, 2),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n</code></pre>"},{"location":"snowflake-ibmi/db2_setup/#fill-up-the-database","title":"Fill up the database","text":"<p>Now let's insert simulated data :</p> <pre><code>INSERT INTO Categories (CategoryName, Description) VALUES\n('Electronics', 'Devices and gadgets'),\n('Groceries', 'Daily consumables and food items'),\n('Stationery', 'Office and school supplies');\n\n\nINSERT INTO Suppliers (SupplierName, ContactName, Address, Phone, Email) VALUES\n('TechSource Ltd.', 'Alice Johnson', '123 Tech Ave', '555-1234', 'alice@techsource.com'),\n('FoodWorld Inc.', 'Bob Smith', '789 Market St', '555-5678', 'bob@foodworld.com'),\n('OfficePlus', 'Carol Lee', '456 Office Rd', '555-9012', 'carol@officeplus.com');\n\n\nINSERT INTO Products (ProductName, CategoryID, SupplierID, UnitPrice, ReorderLevel, Discontinued) VALUES\n('USB Flash Drive 32GB', 1, 1, 12.99, 20, 0),\n('Organic Apples 1kg', 2, 2, 3.49, 50, 0),\n('Notebook A4', 3, 3, 1.25, 100, 0);\n\nINSERT INTO Stock (ProductID, QuantityInStock) VALUES\n(1, 150),\n(2, 300),\n(3, 500);\n\nINSERT INTO Purchases (ProductID, SupplierID, Quantity, PurchaseDate, UnitCost) VALUES\n(1, 1, 200, DATE('2025-09-10'), 10.00),\n(2, 2, 500, DATE('2025-09-15'), 2.50),\n(3, 3, 1000, DATE('2025-09-12'), 0.90);\n\nINSERT INTO Sales (ProductID, Quantity, SaleDate, UnitPrice) VALUES\n(1, 50, DATE('2025-09-18'), 14.99),\n(2, 100, DATE('2025-09-19'), 3.99),\n(3, 250, DATE('2025-09-20'), 1.50);\n</code></pre>"},{"location":"snowflake-ibmi/db2_setup/#whats-next","title":"What's next ?","text":"<p>Well done, you've just created a functional IBMi test environment. Both SQL and command line are functional.  From there, it's straightforward to develop basic queries and applications with JDBC for instance.  A lot of valuable information can be found on PUB400.COM to help you dive deeper into the command line.</p> <p>In our next step, we will use the terminal to configure our source tables with journaling enabled. </p>"},{"location":"snowflake-ibmi/journaling/","title":"DB2 Journaling","text":""},{"location":"snowflake-ibmi/journaling/#what-is-journaling","title":"What is journaling ?","text":"<p>Journaling is a mechanism used in database systems to log all data modification operations (such as INSERT, UPDATE,  and DELETE) to a sequential transaction log (journal) separate from the base tables.  This log provides a reliable, auditable trail of changes, supports crash recovery, and enables data consistency across system failures.</p> <p>For mission-critical environments, proper journaling setup and receiver management are essential to ensure data  integrity and minimize downtime.</p>"},{"location":"snowflake-ibmi/journaling/#what-is-change-data-capture-cdc","title":"What is Change Data Capture ? (CDC)","text":"<p>Change data capture is a technique involving listening to a DB journal to extract the changes since a certain point  in time and apply these changes to an external system.</p> <p>This is a particularly efficient way to replicate (i.e. synchronize) one database onto another. No need for a sophisticated setup  on the source database, a pre-existing journal can be used as it's often the case on critical databases.</p> <p>The synchronization doesn't need to periodically scan a list of tables as the journal centralizes the changes.</p>"},{"location":"snowflake-ibmi/journaling/#how-is-journaling-implemented-on-ibmi-db2","title":"How is Journaling implemented on IBMi DB2 ?","text":"<p>DB2 tracks multiple tables with a designated journal witch itself delegates the storage to a receiver.</p> <p>While it's possible to have multiple journals assigned to tables belonging to the same library (or schema), it's  recommended to create a single journal for an entire DB2 instance or a single journal per schema.</p> <p>A schema often reflects a single unit of work with few transactions overlapping schemas.</p> <p></p>"},{"location":"snowflake-ibmi/journaling/#configure-db2-journal","title":"Configure DB2 Journal","text":"<p>On IBMi, everything is an object, that is a file under a library. Consider libraries as the equivalent of folders in recent systems. In the following examples, use your own library name as defined by your DB2 setup.</p> <p>Use a tn5250 terminal emulator to connect to your IBMi environment and run the following commands.</p>"},{"location":"snowflake-ibmi/journaling/#1-create-a-journal-receiver","title":"1.  Create a Journal Receiver","text":"<p>This command creates a receiver named MY_RCVER under the library POPSINK1 :</p> <p><code>CRTJRNRCV POPSINK1/MY_RCVER</code></p>"},{"location":"snowflake-ibmi/journaling/#2-create-a-journal","title":"2. Create a Journal","text":"<p>This command creates a journal named MY_JOURNAL attached to MY_RCVER under the library POPSINK1 :</p> <p><code>CRTJRN POPSINK1/MY_JOURNAL POPSINK1/MY_RCVER</code></p>"},{"location":"snowflake-ibmi/journaling/#3-enable-journaling-on-source-tables","title":"3. Enable Journaling on source tables","text":"<p>For each table to replicate named ${TABLE}, run the command :</p> <p><code>STRJRNPF POPSINK1/${TABLE} POPSINK1/MY_JOURNAL</code></p> <p>That is, based on the tables created previously in DB2 setup :</p> <pre><code>STRJRNPF POPSINK1/CATEGORIES POPSINK1/MY_JOURNAL\nSTRJRNPF POPSINK1/SUPPLIERS POPSINK1/MY_JOURNAL\nSTRJRNPF POPSINK1/PRODUCTS POPSINK1/MY_JOURNAL\nSTRJRNPF POPSINK1/STOCK POPSINK1/MY_JOURNAL\nSTRJRNPF POPSINK1/PURCHASES POPSINK1/MY_JOURNAL\nSTRJRNPF POPSINK1/SALES POPSINK1/MY_JOURNAL\n</code></pre>"},{"location":"snowflake-ibmi/journaling/#4-give-relevant-rights-to-the-cdc-user","title":"4. Give relevant rights to the CDC user","text":"<p>Your account (here POPSINK for example) needs to be allowed to read from the journal :</p> <pre><code>GRTOBJAUT OBJ(POPSINK1) OBJTYPE(*LIB) USER(POPSINK) AUT(*EXECUTE)\nGRTOBJAUT OBJ(POPSINK1/*ALL) OBJTYPE(*JRNRCV) USER(POPSINK) AUT(*USE)\nGRTOBJAUT OBJ(POPSINK1/MY_JOURNAL) OBJTYPE(*JRN) USER(POPSINK) AUT(*USE *OBJEXIST)\nGRTOBJAUT OBJ(POPSINK1/MY_JOURNAL) OBJTYPE(*JRN) USER(POPSINK) AUT(*OBJEXIST)\n\nGRTOBJAUT OBJ(POPSINK1/*ALL) OBJTYPE(*FILE) USER(POPSINK) AUT(*USE)\n</code></pre>"},{"location":"snowflake-ibmi/journaling/#5-switch-journaling-from-after-to-both","title":"5. Switch journaling from AFTER to BOTH","text":"<p>By default, journaling only stores the image after the change, not the one before. This can make certain operations  complex, for instance primary key updates - these cannot be handled unless both images are available.</p> <p>Besides, with both images, Snowflake replication will provide more information on DELETE operations.</p> <p>For each table to replicate named ${TABLE}, run the command :</p> <pre><code>CHGJRNOBJ OBJ((POPSINK1/${TABLE} *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\n</code></pre> <p>That is, based on the tables created previously in DB2 setup :</p> <pre><code>CHGJRNOBJ OBJ((POPSINK1/CATEGORIES *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\nCHGJRNOBJ OBJ((POPSINK1/SUPPLIERS *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\nCHGJRNOBJ OBJ((POPSINK1/PRODUCTS *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\nCHGJRNOBJ OBJ((POPSINK1/STOCK *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\nCHGJRNOBJ OBJ((POPSINK1/PURCHASES *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\nCHGJRNOBJ OBJ((POPSINK1/SALES *FILE)) ATR(*IMAGES) IMAGES(*BOTH)\n</code></pre>"},{"location":"snowflake-ibmi/journaling/#conclusion","title":"Conclusion","text":"<p>Journaling requires additional I/O and storage space. While not covered in this guide, monitoring  and periodically deleting old journal entries is essential to save disk space.</p> <p>Well Done ! you are finally ready to start replicating data from IBMi DB2 using Popsink technology.</p> <p>Jump straight to our quickstart if you've installed Popsink's Snowflake IBMi connector.</p>"},{"location":"snowflake-ibmi/quickstart/","title":"Quickstart","text":"<p>You've just downloaded Popsink's connector to IBMi DB2 from Snowflake's Marketplace, and you're now eager to run your  first replication. Then, you've come to right the place !</p> <p>On first launch, the application will welcome you with a step-by-step configuration wizard that you can pause and resume any time, your progress will be saved.</p> <p>If you're entirely new to IBMi/AS400 and currently have no system to connect to, please head to this page, follow the instructions  and start experimenting with your new DB2 system.</p> <p>If not, you've already got a DB2 system in place, and you want to replicate it, please continue. </p>"},{"location":"snowflake-ibmi/quickstart/#1-prerequisites","title":"1. Prerequisites","text":"<p>In this important step, the user goes through a check-list of actions that need to be taken before moving on to the next steps. Not everything can be setup through the user interface, often for security reasons.</p> <p></p>"},{"location":"snowflake-ibmi/quickstart/#11-enable-journaling","title":"1.1 Enable Journaling","text":"<p>It's a vital step to capture changes from the source databases with no additional overhead. Please head to journaling,  if you need help setting it up on your DB2 environment.</p> <p>Take notes of the journaled tables you'd like to replicate.</p>"},{"location":"snowflake-ibmi/quickstart/#12-review-network-access","title":"1.2 Review network access","text":"<p>In a later step, the app will generate SQL commands that only a user with <code>ACCOUNTADMIN</code> privileges can run.  This will open network access to the source database. Please make sure your administrator is informed that the app needs  access to all the port of the source database.</p>"},{"location":"snowflake-ibmi/quickstart/#13-find-an-available-name-for-the-target-database","title":"1.3 Find an available name for the target database","text":"<p>Snowflake's security prevents an app to list all the existing databases and schemas. That's why your administrator needs to run <code>SHOW DATABASES</code> to confirm that your choice of target database name is valid.</p> <p>When you're ready you can mark the prerequisites as 'Completed' and move to the next step.</p>"},{"location":"snowflake-ibmi/quickstart/#2-connectors-configuration","title":"2. Connector's Configuration","text":"<p>On this page, you will configure a few simple but essential settings :</p> <ul> <li>Grant privileges to create the target database and run synchronization tasks.</li> <li>Define what warehouse to connect to. The running costs of the app will be billed to this warehouse.</li> <li>Define the target database name. You must choose an available name.</li> <li>Define the schema name storing the replicated tables.</li> </ul> <p></p> <p>When you're finished, click on 'Configure'.</p>"},{"location":"snowflake-ibmi/quickstart/#3-firewall-credentials-configuration","title":"3. Firewall &amp; Credentials Configuration","text":"<p>Next step is to set up your connection to your source IBMi system. You will need 2 things :</p> <ul> <li>A network access to your hostname.</li> <li>A username &amp; password to an account with rights to read the DB2 journal.</li> </ul> <p>Snowflake has an embedded system of external access integration (EAI) that securely declares the port your  connection requires, as well as credential data (here a simple username/password pair, the only mean to connect to IBMi)</p> <p></p> <p>When you've entered all the fields, clicking on 'Generate firewall rules' will show a SQL Script to pass on to  your account admin. He will be able to run and add the required objects to move on to the next step.</p> <p>The password is transferred in clear to your admin but is stored securely in Snowflake, nothing but the app can access  it.</p> <p></p> <p>When you're ready to test the connection and move to the next step, click on 'Next'.</p>"},{"location":"snowflake-ibmi/quickstart/#4-db2-connections-configuration","title":"4. DB2 Connection's Configuration","text":"<p>Now your connection to DB2 is valid, it's time to define the source data you want to replicate in this simple step :</p> <ol> <li>Choose a source schema.</li> <li>Enter a comma-separated list of journaled tables belonging to this schema.</li> </ol> <p>These tables have to be assigned to the same DB2 journal.</p> <p>Click on 'Connect' to move to the last step.</p> <p></p>"},{"location":"snowflake-ibmi/quickstart/#5-finalize","title":"5. Finalize","text":"<p>To finish with, a few settings can be modified before starting the replication :</p> <ol> <li>In case a source table is really large, or you only want to capture changes, it's possible to skip the initial snapshot with the following checkbox.</li> <li>By default, synchronization period is 20 seconds, meaning the changes will be read from DB2 every 20 seconds by a Snowflake's scheduled task. It's possible to change this setting according to your latency and power requirements. A larger period means higher latencies but less compute usage.</li> </ol> <p></p> <p>Click on 'Finalize Configuration' to start the replication.</p>"},{"location":"snowflake-ibmi/quickstart/#monitor-the-replication","title":"Monitor the replication","text":"<p>Snowflake will now run 3 different tasks (or 2 if you've decided to skip the initial snapshot) :</p> <ul> <li><code>AS400_CREATE_TARGET</code> - creates the target tables in the target schema. replicated tables will be prefixed by <code>POPSINK_</code>.</li> <li><code>AS400_SNAPSHOT</code> - selects all the source data at startup time and fills the target tables.</li> <li><code>AS400_SYNC</code> - polls the DB2 journal to load all the changes since last synchronization and update target tables accordingly.</li> </ul> <p>They can be viewed under the Task menu of Snowflake.</p>"}]}